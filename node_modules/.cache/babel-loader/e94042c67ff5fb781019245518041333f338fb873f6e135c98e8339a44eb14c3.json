{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMap.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { getApiUrl } from '../../utils/api2';\nimport '../../css/DriverMap.css';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Component to handle the current location button\nconst LocationButton = ({\n  centerMap\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-button-container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"location-button\",\n      onClick: centerMap,\n      title: \"Center map on your location\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-location-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), \" Your Location\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to handle map centering\n_c = LocationButton;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n};\n\n// Component to update driver's location in the database\n_s(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst LocationUpdater = ({\n  driverId,\n  busId,\n  position\n}) => {\n  _s2();\n  useEffect(() => {\n    if (!position || !busId) return;\n    const updateLocation = async () => {\n      try {\n        await axios.post(getApiUrl('/driver/update-location'), {\n          busId,\n          latitude: position[0],\n          longitude: position[1]\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n    updateLocation();\n\n    // Update location every 10 seconds\n    const interval = setInterval(updateLocation, 10000);\n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n  return null;\n};\n\n// Component to draw OSRM route between stops\n_s2(LocationUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = LocationUpdater;\nconst OsrmRoute = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 5\n}) => {\n  _s3();\n  const map = useMap();\n  const routeRef = useRef(null);\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n    const fetchRoute = async () => {\n      try {\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n        const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${startPoint[1]},${startPoint[0]};${endPoint[1]},${endPoint[0]}?overview=full&geometries=geojson`);\n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n          // Create a polyline and add to map\n          const polyline = L.polyline(coordinates, {\n            color: color,\n            weight: weight,\n            opacity: 0.7,\n            lineJoin: 'round'\n          }).addTo(map);\n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching route:', error);\n      }\n    };\n    fetchRoute();\n    return () => {\n      if (routeRef.current) {\n        map.removeLayer(routeRef.current);\n      }\n    };\n  }, [map, startPoint, endPoint, color, weight]);\n  return null;\n};\n\n// Component for tracking driver location with geolocation API\n_s3(OsrmRoute, \"UZ32Fkg6BfHwCcN+EOGJpG8ah/I=\", false, function () {\n  return [useMap];\n});\n_c4 = OsrmRoute;\nconst DriverLocationTracker = ({\n  setPosition\n}) => {\n  _s4();\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({\n      watch: true,\n      enableHighAccuracy: true\n    });\n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n  return null;\n};\n\n// Main driver map component\n_s4(DriverLocationTracker, \"gWh149/DLPuF22WgXAndVVlzhL4=\", false, function () {\n  return [useMapEvents];\n});\n_c5 = DriverLocationTracker;\nfunction DriverMap({\n  user\n}) {\n  _s5();\n  const [position, setPosition] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default IIT KGP coordinates\n  const [zoom, setZoom] = useState(15);\n  const [driverBus, setDriverBus] = useState(null);\n  const [busRoute, setBusRoute] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const mapRef = useRef(null);\n\n  // Fetch driver's assigned bus on component mount\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(getApiUrl('/driver/my-bus'), {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        if (response.data) {\n          setDriverBus(response.data);\n          console.log('Driver bus:', response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching driver bus:', err);\n        setError('Failed to fetch your assigned bus. Please refresh the page or contact support.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDriverBus();\n  }, [user]);\n\n  // Fetch bus route when driver bus is available\n  useEffect(() => {\n    if (!driverBus || !driverBus.id) return;\n    const fetchBusRoute = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(getApiUrl(`/buses/${driverBus.id}/route`), {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        if (response.data && response.data.data && response.data.data.stops) {\n          setBusRoute(response.data.data.stops);\n          console.log('Bus route:', response.data.data.stops);\n        }\n      } catch (err) {\n        console.error('Error fetching bus route:', err);\n        setError('Failed to fetch the bus route. Please refresh the page or contact support.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBusRoute();\n  }, [driverBus]);\n\n  // Center map on driver's location when available\n  useEffect(() => {\n    if (position) {\n      setMapCenter(position);\n    }\n  }, [position]);\n\n  // Handle \"Your Location\" button click\n  const centerMap = useCallback(() => {\n    if (position) {\n      setMapCenter(position);\n      setZoom(16);\n    } else {\n      if (mapRef.current) {\n        mapRef.current.locate({\n          setView: true,\n          maxZoom: 16\n        });\n      }\n    }\n  }, [position]);\n\n  // Determine current route segment based on stops_cleared\n  const getCurrentRouteSegment = useCallback(() => {\n    if (!busRoute.length || !driverBus) return null;\n    const stopsCleared = driverBus.stops_cleared || 0;\n    // Find the stop with order matching stops_cleared\n    const currentStop = busRoute.find(stop => stop.stop_order === stopsCleared);\n    // Next stop is the one after current (or first if we're at the end)\n    const nextStop = busRoute.find(stop => stop.stop_order === stopsCleared + 1) || busRoute[0];\n    if (currentStop && nextStop) {\n      return {\n        start: [parseFloat(currentStop.latitude), parseFloat(currentStop.longitude)],\n        end: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]\n      };\n    }\n    return null;\n  }, [busRoute, driverBus]);\n  const currentSegment = getCurrentRouteSegment();\n\n  // Mark next stop as cleared\n  const markStopCleared = async stopOrder => {\n    if (!driverBus || !driverBus.id) return;\n    try {\n      await axios.post(getApiUrl('/driver/clear-stop'), {\n        busId: driverBus.id,\n        stopOrder: stopOrder\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n        }\n      });\n\n      // Update local state\n      setDriverBus(prev => ({\n        ...prev,\n        stops_cleared: stopOrder\n      }));\n      console.log('Stop cleared:', stopOrder);\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    }\n  };\n  if (loading && !driverBus) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading driver information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-map-container\",\n    children: [driverBus && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bus-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Bus: \", driverBus.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stops cleared: \", driverBus.stops_cleared || 0, \" / \", busRoute.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      zoom: zoom,\n      className: \"driver-map\",\n      ref: mapRef,\n      whenCreated: map => {\n        mapRef.current = map;\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapController, {\n        center: mapCenter,\n        zoom: zoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DriverLocationTracker, {\n        setPosition: setPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        icon: busIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your current location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Bus: \", (driverBus === null || driverBus === void 0 ? void 0 : driverBus.name) || 'Not assigned']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this), busRoute.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n        icon: busStopIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: stop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Stop #\", stop.stop_order]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), driverBus && driverBus.stops_cleared < stop.stop_order && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => markStopCleared(stop.stop_order),\n              className: \"clear-stop-button\",\n              children: \"Mark as Reached\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)\n      }, stop.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this)), busRoute.length > 1 && busRoute.map((stop, index) => {\n        const nextIndex = (index + 1) % busRoute.length;\n        const nextStop = busRoute[nextIndex];\n        return /*#__PURE__*/_jsxDEV(OsrmRoute, {\n          startPoint: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n          endPoint: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)],\n          color: \"#3388ff\",\n          weight: 3\n        }, `route-${stop.id}-${nextStop.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this);\n      }), currentSegment && /*#__PURE__*/_jsxDEV(OsrmRoute, {\n        startPoint: currentSegment.start,\n        endPoint: currentSegment.end,\n        color: \"#00a8ff\",\n        weight: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }, this), position && driverBus && /*#__PURE__*/_jsxDEV(LocationUpdater, {\n        driverId: user.id,\n        busId: driverBus.id,\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LocationButton, {\n      centerMap: centerMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 325,\n    columnNumber: 5\n  }, this);\n}\n_s5(DriverMap, \"hHtHIZXadrkb5qKbCP6S6PVQJ0g=\");\n_c6 = DriverMap;\nexport default DriverMap;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"LocationButton\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"LocationUpdater\");\n$RefreshReg$(_c4, \"OsrmRoute\");\n$RefreshReg$(_c5, \"DriverLocationTracker\");\n$RefreshReg$(_c6, \"DriverMap\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","MapContainer","TileLayer","Marker","Popup","useMap","useMapEvents","L","axios","getApiUrl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","busIcon","iconSize","iconAnchor","popupAnchor","busStopIcon","LocationButton","centerMap","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","MapController","center","zoom","_s","map","setView","getZoom","_c2","LocationUpdater","driverId","busId","position","_s2","updateLocation","post","latitude","longitude","headers","Authorization","localStorage","getItem","console","log","error","interval","setInterval","clearInterval","_c3","OsrmRoute","startPoint","endPoint","color","weight","_s3","routeRef","fetchRoute","current","removeLayer","response","get","data","code","routes","length","routeGeometry","geometry","coordinates","coord","polyline","opacity","lineJoin","addTo","_c4","DriverLocationTracker","setPosition","_s4","locationfound","e","latlng","lat","lng","locationerror","message","alert","locate","watch","enableHighAccuracy","stopLocate","_c5","DriverMap","user","_s5","mapCenter","setMapCenter","setZoom","driverBus","setDriverBus","busRoute","setBusRoute","loading","setLoading","setError","mapRef","fetchDriverBus","err","id","fetchBusRoute","stops","maxZoom","getCurrentRouteSegment","stopsCleared","stops_cleared","currentStop","find","stop","stop_order","nextStop","start","parseFloat","end","currentSegment","markStopCleared","stopOrder","prev","name","ref","whenCreated","attribution","url","icon","index","nextIndex","_c6","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMap.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { getApiUrl } from '../../utils/api2';\nimport '../../css/DriverMap.css';\n\n// Fix for default marker icon in Leaflet with React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Component to handle the current location button\nconst LocationButton = ({ centerMap }) => {\n  return (\n    <div className=\"location-button-container\">\n      <button \n        className=\"location-button\" \n        onClick={centerMap}\n        title=\"Center map on your location\"\n      >\n        <i className=\"fas fa-location-arrow\"></i> Your Location\n      </button>\n    </div>\n  );\n};\n\n// Component to handle map centering\nconst MapController = ({ center, zoom }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  \n  return null;\n};\n\n// Component to update driver's location in the database\nconst LocationUpdater = ({ driverId, busId, position }) => {\n  useEffect(() => {\n    if (!position || !busId) return;\n\n    const updateLocation = async () => {\n      try {\n        await axios.post(\n          getApiUrl('/driver/update-location'),\n          {\n            busId,\n            latitude: position[0],\n            longitude: position[1]\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n\n    updateLocation();\n    \n    // Update location every 10 seconds\n    const interval = setInterval(updateLocation, 10000);\n    \n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n  \n  return null;\n};\n\n// Component to draw OSRM route between stops\nconst OsrmRoute = ({ startPoint, endPoint, color = '#3388ff', weight = 5 }) => {\n  const map = useMap();\n  const routeRef = useRef(null);\n  \n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n    \n    const fetchRoute = async () => {\n      try {\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n        \n        const response = await axios.get(\n          `https://router.project-osrm.org/route/v1/driving/${startPoint[1]},${startPoint[0]};${endPoint[1]},${endPoint[0]}?overview=full&geometries=geojson`\n        );\n        \n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n          \n          // Create a polyline and add to map\n          const polyline = L.polyline(coordinates, {\n            color: color,\n            weight: weight,\n            opacity: 0.7,\n            lineJoin: 'round'\n          }).addTo(map);\n          \n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching route:', error);\n      }\n    };\n    \n    fetchRoute();\n    \n    return () => {\n      if (routeRef.current) {\n        map.removeLayer(routeRef.current);\n      }\n    };\n  }, [map, startPoint, endPoint, color, weight]);\n  \n  return null;\n};\n\n// Component for tracking driver location with geolocation API\nconst DriverLocationTracker = ({ setPosition }) => {\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n  \n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({ watch: true, enableHighAccuracy: true });\n    \n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n  \n  return null;\n};\n\n// Main driver map component\nfunction DriverMap({ user }) {\n  const [position, setPosition] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default IIT KGP coordinates\n  const [zoom, setZoom] = useState(15);\n  const [driverBus, setDriverBus] = useState(null);\n  const [busRoute, setBusRoute] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const mapRef = useRef(null);\n  \n  // Fetch driver's assigned bus on component mount\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\n          getApiUrl('/driver/my-bus'),\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        \n        if (response.data) {\n          setDriverBus(response.data);\n          console.log('Driver bus:', response.data);\n        }\n      } catch (err) {\n        console.error('Error fetching driver bus:', err);\n        setError('Failed to fetch your assigned bus. Please refresh the page or contact support.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchDriverBus();\n  }, [user]);\n  \n  // Fetch bus route when driver bus is available\n  useEffect(() => {\n    if (!driverBus || !driverBus.id) return;\n    \n    const fetchBusRoute = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\n          getApiUrl(`/buses/${driverBus.id}/route`),\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        \n        if (response.data && response.data.data && response.data.data.stops) {\n          setBusRoute(response.data.data.stops);\n          console.log('Bus route:', response.data.data.stops);\n        }\n      } catch (err) {\n        console.error('Error fetching bus route:', err);\n        setError('Failed to fetch the bus route. Please refresh the page or contact support.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchBusRoute();\n  }, [driverBus]);\n  \n  // Center map on driver's location when available\n  useEffect(() => {\n    if (position) {\n      setMapCenter(position);\n    }\n  }, [position]);\n  \n  // Handle \"Your Location\" button click\n  const centerMap = useCallback(() => {\n    if (position) {\n      setMapCenter(position);\n      setZoom(16);\n    } else {\n      if (mapRef.current) {\n        mapRef.current.locate({ setView: true, maxZoom: 16 });\n      }\n    }\n  }, [position]);\n  \n  // Determine current route segment based on stops_cleared\n  const getCurrentRouteSegment = useCallback(() => {\n    if (!busRoute.length || !driverBus) return null;\n    \n    const stopsCleared = driverBus.stops_cleared || 0;\n    // Find the stop with order matching stops_cleared\n    const currentStop = busRoute.find(stop => stop.stop_order === stopsCleared);\n    // Next stop is the one after current (or first if we're at the end)\n    const nextStop = busRoute.find(stop => stop.stop_order === stopsCleared + 1) || busRoute[0];\n    \n    if (currentStop && nextStop) {\n      return {\n        start: [parseFloat(currentStop.latitude), parseFloat(currentStop.longitude)],\n        end: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]\n      };\n    }\n    \n    return null;\n  }, [busRoute, driverBus]);\n  \n  const currentSegment = getCurrentRouteSegment();\n  \n  // Mark next stop as cleared\n  const markStopCleared = async (stopOrder) => {\n    if (!driverBus || !driverBus.id) return;\n    \n    try {\n      await axios.post(\n        getApiUrl('/driver/clear-stop'),\n        {\n          busId: driverBus.id,\n          stopOrder: stopOrder\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        }\n      );\n      \n      // Update local state\n      setDriverBus(prev => ({\n        ...prev,\n        stops_cleared: stopOrder\n      }));\n      \n      console.log('Stop cleared:', stopOrder);\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    }\n  };\n  \n  if (loading && !driverBus) {\n    return <div className=\"loading\">Loading driver information...</div>;\n  }\n  \n  if (error) {\n    return <div className=\"error\">{error}</div>;\n  }\n  \n  return (\n    <div className=\"driver-map-container\">\n      {driverBus && (\n        <div className=\"bus-info\">\n          <h2>Bus: {driverBus.name}</h2>\n          <p>Stops cleared: {driverBus.stops_cleared || 0} / {busRoute.length}</p>\n        </div>\n      )}\n      \n      <MapContainer\n        center={mapCenter}\n        zoom={zoom}\n        className=\"driver-map\"\n        ref={mapRef}\n        whenCreated={map => { mapRef.current = map; }}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        \n        <MapController center={mapCenter} zoom={zoom} />\n        <DriverLocationTracker setPosition={setPosition} />\n        \n        {position && (\n          <Marker position={position} icon={busIcon}>\n            <Popup>\n              <div>\n                <strong>Your current location</strong>\n                <p>Bus: {driverBus?.name || 'Not assigned'}</p>\n              </div>\n            </Popup>\n          </Marker>\n        )}\n        \n        {/* Display all bus stops in the route */}\n        {busRoute.map(stop => (\n          <Marker\n            key={stop.id}\n            position={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n            icon={busStopIcon}\n          >\n            <Popup>\n              <div>\n                <strong>{stop.name}</strong>\n                <p>Stop #{stop.stop_order}</p>\n                {driverBus && driverBus.stops_cleared < stop.stop_order && (\n                  <button \n                    onClick={() => markStopCleared(stop.stop_order)}\n                    className=\"clear-stop-button\"\n                  >\n                    Mark as Reached\n                  </button>\n                )}\n              </div>\n            </Popup>\n          </Marker>\n        ))}\n        \n        {/* Show complete route between all stops */}\n        {busRoute.length > 1 && busRoute.map((stop, index) => {\n          const nextIndex = (index + 1) % busRoute.length;\n          const nextStop = busRoute[nextIndex];\n          \n          return (\n            <OsrmRoute\n              key={`route-${stop.id}-${nextStop.id}`}\n              startPoint={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n              endPoint={[parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]}\n              color=\"#3388ff\"\n              weight={3}\n            />\n          );\n        })}\n        \n        {/* Highlight current segment with a thicker, brighter line */}\n        {currentSegment && (\n          <OsrmRoute\n            startPoint={currentSegment.start}\n            endPoint={currentSegment.end}\n            color=\"#00a8ff\"\n            weight={6}\n          />\n        )}\n        \n        {/* Location update handler */}\n        {position && driverBus && (\n          <LocationUpdater \n            driverId={user.id}\n            busId={driverBus.id}\n            position={position}\n          />\n        )}\n      </MapContainer>\n      \n      <LocationButton centerMap={centerMap} />\n    </div>\n  );\n}\n\nexport default DriverMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}