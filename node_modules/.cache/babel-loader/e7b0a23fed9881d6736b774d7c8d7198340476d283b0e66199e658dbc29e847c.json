{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMapScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { getApiUrl } from '../../utils/api2.js';\nimport '../../css/DriverMapScreen.css';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Next stop icon (highlighted)\nconst nextStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [36, 36],\n  iconAnchor: [18, 36],\n  popupAnchor: [0, -36],\n  className: 'next-stop-icon' // CSS class for styling\n});\n\n// Component to handle map centering\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n};\n\n// Component to update driver's location in the database\n_s(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapController;\nconst LocationUpdater = ({\n  driverId,\n  busId,\n  position\n}) => {\n  _s2();\n  useEffect(() => {\n    if (!position || !busId) return;\n    const updateLocation = async () => {\n      try {\n        await axios.post(getApiUrl('/driver/update-location'), {\n          busId,\n          latitude: position[0],\n          longitude: position[1]\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n    updateLocation();\n\n    // Update location every 10 seconds\n    const interval = setInterval(updateLocation, 10000);\n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n  return null;\n};\n\n// Component to draw OSRM route between stops\n_s2(LocationUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = LocationUpdater;\nconst OsrmRoutes = ({\n  stops,\n  currentPosition,\n  lastClearedStopIndex,\n  nextStopIndex\n}) => {\n  _s3();\n  const map = useMap();\n  const routeRef = useRef(null);\n  const nextSegmentRef = useRef(null);\n  useEffect(() => {\n    if (!stops || stops.length < 2 || !map) return;\n    const fetchAndDrawFullRoute = async () => {\n      try {\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n\n        // Build waypoints for the complete route\n        const waypoints = stops.map(stop => [parseFloat(stop.longitude), parseFloat(stop.latitude)]);\n\n        // Close the loop for circular route\n        waypoints.push(waypoints[0]);\n\n        // Convert waypoints to the format expected by OSRM API\n        const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n        const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`);\n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n          // Create a polyline for the full route\n          const polyline = L.polyline(coordinates, {\n            color: '#3388ff',\n            weight: 4,\n            opacity: 0.6,\n            lineJoin: 'round'\n          }).addTo(map);\n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching full route:', error);\n      }\n    };\n    const fetchAndDrawNextSegment = async () => {\n      try {\n        // Clear previous next segment route\n        if (nextSegmentRef.current) {\n          map.removeLayer(nextSegmentRef.current);\n          nextSegmentRef.current = null;\n        }\n\n        // Only draw if we have a last cleared stop and next stop\n        if (lastClearedStopIndex !== null && nextStopIndex !== null && currentPosition) {\n          const lastClearedStop = stops[lastClearedStopIndex];\n          const nextStop = stops[nextStopIndex];\n\n          // Build waypoints from current position to next stop\n          const waypoints = [[parseFloat(currentPosition[1]), parseFloat(currentPosition[0])],\n          // Current position [lng, lat]\n          [parseFloat(nextStop.longitude), parseFloat(nextStop.latitude)] // Next stop [lng, lat]\n          ];\n\n          // Convert waypoints to the format expected by OSRM API\n          const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n          const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`);\n          if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n            const routeGeometry = response.data.routes[0].geometry.coordinates;\n            // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n            const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n            // Create a highlighted polyline for the next segment\n            const polyline = L.polyline(coordinates, {\n              color: '#FF4500',\n              // Orange-Red for highlighted segment\n              weight: 6,\n              opacity: 0.9,\n              lineJoin: 'round'\n            }).addTo(map);\n            nextSegmentRef.current = polyline;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching next segment route:', error);\n      }\n    };\n    fetchAndDrawFullRoute();\n    fetchAndDrawNextSegment();\n\n    // Clean up function\n    return () => {\n      if (routeRef.current && map) {\n        map.removeLayer(routeRef.current);\n      }\n      if (nextSegmentRef.current && map) {\n        map.removeLayer(nextSegmentRef.current);\n      }\n    };\n  }, [map, stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n  return null;\n};\n\n// Component for tracking driver location with geolocation API\n_s3(OsrmRoutes, \"4FIBFaKyBjoe+Q6MALJXncebVEA=\", false, function () {\n  return [useMap];\n});\n_c3 = OsrmRoutes;\nconst DriverLocationTracker = ({\n  setPosition\n}) => {\n  _s4();\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({\n      watch: true,\n      enableHighAccuracy: true\n    });\n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n  return null;\n};\n\n// Button to center map on driver's location\n_s4(DriverLocationTracker, \"gWh149/DLPuF22WgXAndVVlzhL4=\", false, function () {\n  return [useMapEvents];\n});\n_c4 = DriverLocationTracker;\nconst LocationButton = ({\n  position,\n  setCenter\n}) => {\n  const handleClick = () => {\n    if (position) {\n      setCenter(position);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: handleClick,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), \" Your Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n\n// Button to mark a stop as cleared\n_c5 = LocationButton;\nconst ClearStopButton = ({\n  busId,\n  stopId,\n  onStopCleared,\n  isNextStop\n}) => {\n  _s5();\n  const [loading, setLoading] = useState(false);\n  const handleClearStop = async () => {\n    if (!busId || !stopId) return;\n    try {\n      setLoading(true);\n      const response = await axios.post(getApiUrl('/driver/clear-stop'), {\n        busId,\n        stopId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n        }\n      });\n      if (response.data) {\n        console.log('Stop cleared successfully');\n        if (onStopCleared) onStopCleared(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isNextStop) return null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"clear-stop-button\",\n    onClick: handleClearStop,\n    disabled: loading,\n    children: loading ? 'Marking...' : 'Mark as Cleared'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s5(ClearStopButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c6 = ClearStopButton;\nfunction DriverMapScreen() {\n  _s6();\n  const [position, setPosition] = useState(null);\n  const [center, setCenter] = useState(null);\n  const [busInfo, setBusInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // For the map\n  const mapRef = useRef(null);\n\n  // Fetch driver's bus info and route\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(getApiUrl('/driver/my-bus'), {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n          console.log('Driver bus info loaded:', response.data.data);\n        } else {\n          setError('No bus assigned to you');\n        }\n      } catch (error) {\n        console.error('Error fetching driver bus:', error);\n        setError('Failed to load your bus information');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDriverBus();\n\n    // Refresh bus info every 60 seconds\n    const interval = setInterval(fetchDriverBus, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Center map when position is first determined\n  useEffect(() => {\n    if (position && !center) {\n      setCenter(position);\n    }\n  }, [position, center]);\n\n  // Handle stop cleared callback\n  const handleStopCleared = updatedBus => {\n    // Update the local state with the new stops_cleared value\n    setBusInfo(prev => ({\n      ...prev,\n      bus: updatedBus,\n      stopsCleared: parseInt(updatedBus.stops_cleared)\n    }));\n\n    // Refresh the bus info to get updated last/next stop\n    const fetchDriverBus = async () => {\n      try {\n        const response = await axios.get(getApiUrl('/driver/my-bus'), {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n        }\n      } catch (error) {\n        console.error('Error refreshing driver bus info:', error);\n      }\n    };\n    fetchDriverBus();\n  };\n\n  // Find indices for last cleared stop and next stop\n  const getStopIndices = () => {\n    if (!busInfo || !busInfo.route || busInfo.route.length === 0) {\n      return {\n        lastClearedStopIndex: null,\n        nextStopIndex: null\n      };\n    }\n    const stops = busInfo.route;\n    const stopsCleared = busInfo.stopsCleared || 0;\n\n    // If stopsCleared is 0, the last cleared stop is the last one in the route (circular)\n    // and the next stop is the first in the route\n    if (stopsCleared === 0) {\n      return {\n        lastClearedStopIndex: stops.length - 1,\n        nextStopIndex: 0\n      };\n    }\n\n    // Normalize stopsCleared to be within the route length (for circular routes)\n    const normalizedStopsCleared = stopsCleared % stops.length;\n    return {\n      lastClearedStopIndex: normalizedStopsCleared - 1,\n      nextStopIndex: normalizedStopsCleared % stops.length\n    };\n  };\n  const {\n    lastClearedStopIndex,\n    nextStopIndex\n  } = getStopIndices();\n\n  // If still loading, show a spinner\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your bus information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If there's an error, show error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no bus assigned, show message\n  if (!busInfo || !busInfo.bus) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Bus Assigned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You do not have a bus assigned to you. Please contact an administrator.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-map-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center || [22.3190, 87.3091] // Default to IIT KGP if no position yet\n        ,\n        zoom: 15,\n        className: \"driver-map\",\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: center,\n          zoom: 15\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DriverLocationTracker, {\n          setPosition: setPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), position && busInfo && /*#__PURE__*/_jsxDEV(LocationUpdater, {\n          driverId: localStorage.getItem('userId'),\n          busId: busInfo.bus.id,\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          icon: busIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"driver-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Your Location (Bus \", busInfo.bus.name, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You are here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 13\n        }, this), busInfo && busInfo.route && busInfo.route.map((stop, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n          icon: index === nextStopIndex ? nextStopIcon : busStopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stop-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Stop #\", index + 1, \" in route\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 19\n              }, this), index === nextStopIndex && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"next-stop-label\",\n                  children: \"This is your next stop\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ClearStopButton, {\n                  busId: busInfo.bus.id,\n                  stopId: stop.stop_id,\n                  onStopCleared: handleStopCleared,\n                  isNextStop: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 15\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 13\n        }, this)), busInfo && busInfo.route && position && /*#__PURE__*/_jsxDEV(OsrmRoutes, {\n          stops: busInfo.route,\n          currentPosition: position,\n          lastClearedStopIndex: lastClearedStopIndex,\n          nextStopIndex: nextStopIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 9\n      }, this), position && /*#__PURE__*/_jsxDEV(LocationButton, {\n        position: position,\n        setCenter: setCenter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-info-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Bus: \", busInfo.bus.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 11\n        }, this), busInfo.nextStop && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-stop-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Next Stop:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 18\n            }, this), \" \", busInfo.nextStop.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ClearStopButton, {\n            busId: busInfo.bus.id,\n            stopId: busInfo.nextStop.stop_id,\n            onStopCleared: handleStopCleared,\n            isNextStop: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this);\n}\n_s6(DriverMapScreen, \"J6kS74zQ+7p4G5RLSKbt38EOs3k=\");\n_c7 = DriverMapScreen;\nexport default DriverMapScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"MapController\");\n$RefreshReg$(_c2, \"LocationUpdater\");\n$RefreshReg$(_c3, \"OsrmRoutes\");\n$RefreshReg$(_c4, \"DriverLocationTracker\");\n$RefreshReg$(_c5, \"LocationButton\");\n$RefreshReg$(_c6, \"ClearStopButton\");\n$RefreshReg$(_c7, \"DriverMapScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMap","useMapEvents","L","axios","getApiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","busIcon","iconSize","iconAnchor","popupAnchor","busStopIcon","nextStopIcon","className","MapController","center","zoom","_s","map","setView","getZoom","_c","LocationUpdater","driverId","busId","position","_s2","updateLocation","post","latitude","longitude","headers","Authorization","localStorage","getItem","console","log","error","interval","setInterval","clearInterval","_c2","OsrmRoutes","stops","currentPosition","lastClearedStopIndex","nextStopIndex","_s3","routeRef","nextSegmentRef","length","fetchAndDrawFullRoute","current","removeLayer","waypoints","stop","parseFloat","push","waypointsString","wp","join","response","get","data","code","routes","routeGeometry","geometry","coordinates","coord","polyline","color","weight","opacity","lineJoin","addTo","fetchAndDrawNextSegment","lastClearedStop","nextStop","_c3","DriverLocationTracker","setPosition","_s4","locationfound","e","latlng","lat","lng","locationerror","message","alert","locate","watch","enableHighAccuracy","stopLocate","_c4","LocationButton","setCenter","handleClick","onClick","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c5","ClearStopButton","stopId","onStopCleared","isNextStop","_s5","loading","setLoading","handleClearStop","disabled","_c6","DriverMapScreen","_s6","busInfo","setBusInfo","setError","mapRef","fetchDriverBus","handleStopCleared","updatedBus","prev","bus","stopsCleared","parseInt","stops_cleared","getStopIndices","route","normalizedStopsCleared","window","location","reload","ref","attribution","url","id","icon","name","index","stop_id","_c7","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMapScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { getApiUrl } from '../../utils/api2.js';\nimport '../../css/DriverMapScreen.css';\n\n// Fix for default marker icon in Leaflet with React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Next stop icon (highlighted)\nconst nextStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [36, 36],\n  iconAnchor: [18, 36],\n  popupAnchor: [0, -36],\n  className: 'next-stop-icon' // CSS class for styling\n});\n\n// Component to handle map centering\nconst MapController = ({ center, zoom }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  \n  return null;\n};\n\n// Component to update driver's location in the database\nconst LocationUpdater = ({ driverId, busId, position }) => {\n  useEffect(() => {\n    if (!position || !busId) return;\n\n    const updateLocation = async () => {\n      try {\n        await axios.post(\n          getApiUrl('/driver/update-location'),\n          {\n            busId,\n            latitude: position[0],\n            longitude: position[1]\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n\n    updateLocation();\n    \n    // Update location every 10 seconds\n    const interval = setInterval(updateLocation, 10000);\n    \n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n  \n  return null;\n};\n\n// Component to draw OSRM route between stops\nconst OsrmRoutes = ({ stops, currentPosition, lastClearedStopIndex, nextStopIndex }) => {\n  const map = useMap();\n  const routeRef = useRef(null);\n  const nextSegmentRef = useRef(null);\n  \n  useEffect(() => {\n    if (!stops || stops.length < 2 || !map) return;\n    \n    const fetchAndDrawFullRoute = async () => {\n      try {\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n        \n        // Build waypoints for the complete route\n        const waypoints = stops.map(stop => [\n          parseFloat(stop.longitude), \n          parseFloat(stop.latitude)\n        ]);\n        \n        // Close the loop for circular route\n        waypoints.push(waypoints[0]);\n        \n        // Convert waypoints to the format expected by OSRM API\n        const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n        \n        const response = await axios.get(\n          `https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`\n        );\n        \n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n          \n          // Create a polyline for the full route\n          const polyline = L.polyline(coordinates, {\n            color: '#3388ff',\n            weight: 4,\n            opacity: 0.6,\n            lineJoin: 'round'\n          }).addTo(map);\n          \n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching full route:', error);\n      }\n    };\n    \n    const fetchAndDrawNextSegment = async () => {\n      try {\n        // Clear previous next segment route\n        if (nextSegmentRef.current) {\n          map.removeLayer(nextSegmentRef.current);\n          nextSegmentRef.current = null;\n        }\n        \n        // Only draw if we have a last cleared stop and next stop\n        if (lastClearedStopIndex !== null && nextStopIndex !== null && currentPosition) {\n          const lastClearedStop = stops[lastClearedStopIndex];\n          const nextStop = stops[nextStopIndex];\n          \n          // Build waypoints from current position to next stop\n          const waypoints = [\n            [parseFloat(currentPosition[1]), parseFloat(currentPosition[0])], // Current position [lng, lat]\n            [parseFloat(nextStop.longitude), parseFloat(nextStop.latitude)] // Next stop [lng, lat]\n          ];\n          \n          // Convert waypoints to the format expected by OSRM API\n          const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n          \n          const response = await axios.get(\n            `https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`\n          );\n          \n          if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n            const routeGeometry = response.data.routes[0].geometry.coordinates;\n            // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n            const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n            \n            // Create a highlighted polyline for the next segment\n            const polyline = L.polyline(coordinates, {\n              color: '#FF4500', // Orange-Red for highlighted segment\n              weight: 6,\n              opacity: 0.9,\n              lineJoin: 'round'\n            }).addTo(map);\n            \n            nextSegmentRef.current = polyline;\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching next segment route:', error);\n      }\n    };\n    \n    fetchAndDrawFullRoute();\n    fetchAndDrawNextSegment();\n    \n    // Clean up function\n    return () => {\n      if (routeRef.current && map) {\n        map.removeLayer(routeRef.current);\n      }\n      if (nextSegmentRef.current && map) {\n        map.removeLayer(nextSegmentRef.current);\n      }\n    };\n  }, [map, stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n  \n  return null;\n};\n\n// Component for tracking driver location with geolocation API\nconst DriverLocationTracker = ({ setPosition }) => {\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n  \n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({ watch: true, enableHighAccuracy: true });\n    \n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n  \n  return null;\n};\n\n// Button to center map on driver's location\nconst LocationButton = ({ position, setCenter }) => {\n  const handleClick = () => {\n    if (position) {\n      setCenter(position);\n    }\n  };\n  \n  return (\n    <button className=\"location-button\" onClick={handleClick} title=\"Center map on your location\">\n      <i className=\"fas fa-location-arrow\"></i> Your Location\n    </button>\n  );\n};\n\n// Button to mark a stop as cleared\nconst ClearStopButton = ({ busId, stopId, onStopCleared, isNextStop }) => {\n  const [loading, setLoading] = useState(false);\n  \n  const handleClearStop = async () => {\n    if (!busId || !stopId) return;\n    \n    try {\n      setLoading(true);\n      \n      const response = await axios.post(\n        getApiUrl('/driver/clear-stop'),\n        { busId, stopId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        }\n      );\n      \n      if (response.data) {\n        console.log('Stop cleared successfully');\n        if (onStopCleared) onStopCleared(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  if (!isNextStop) return null;\n  \n  return (\n    <button \n      className=\"clear-stop-button\" \n      onClick={handleClearStop} \n      disabled={loading}\n    >\n      {loading ? 'Marking...' : 'Mark as Cleared'}\n    </button>\n  );\n};\n\nfunction DriverMapScreen() {\n  const [position, setPosition] = useState(null);\n  const [center, setCenter] = useState(null);\n  const [busInfo, setBusInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  \n  // For the map\n  const mapRef = useRef(null);\n  \n  // Fetch driver's bus info and route\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n        \n        const response = await axios.get(\n          getApiUrl('/driver/my-bus'),\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        \n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n          console.log('Driver bus info loaded:', response.data.data);\n        } else {\n          setError('No bus assigned to you');\n        }\n      } catch (error) {\n        console.error('Error fetching driver bus:', error);\n        setError('Failed to load your bus information');\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchDriverBus();\n    \n    // Refresh bus info every 60 seconds\n    const interval = setInterval(fetchDriverBus, 60000);\n    \n    return () => clearInterval(interval);\n  }, []);\n  \n  // Center map when position is first determined\n  useEffect(() => {\n    if (position && !center) {\n      setCenter(position);\n    }\n  }, [position, center]);\n  \n  // Handle stop cleared callback\n  const handleStopCleared = (updatedBus) => {\n    // Update the local state with the new stops_cleared value\n    setBusInfo(prev => ({\n      ...prev,\n      bus: updatedBus,\n      stopsCleared: parseInt(updatedBus.stops_cleared)\n    }));\n    \n    // Refresh the bus info to get updated last/next stop\n    const fetchDriverBus = async () => {\n      try {\n        const response = await axios.get(\n          getApiUrl('/driver/my-bus'),\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        \n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n        }\n      } catch (error) {\n        console.error('Error refreshing driver bus info:', error);\n      }\n    };\n    \n    fetchDriverBus();\n  };\n  \n  // Find indices for last cleared stop and next stop\n  const getStopIndices = () => {\n    if (!busInfo || !busInfo.route || busInfo.route.length === 0) {\n      return { lastClearedStopIndex: null, nextStopIndex: null };\n    }\n    \n    const stops = busInfo.route;\n    const stopsCleared = busInfo.stopsCleared || 0;\n    \n    // If stopsCleared is 0, the last cleared stop is the last one in the route (circular)\n    // and the next stop is the first in the route\n    if (stopsCleared === 0) {\n      return {\n        lastClearedStopIndex: stops.length - 1,\n        nextStopIndex: 0\n      };\n    }\n    \n    // Normalize stopsCleared to be within the route length (for circular routes)\n    const normalizedStopsCleared = stopsCleared % stops.length;\n    \n    return {\n      lastClearedStopIndex: normalizedStopsCleared - 1,\n      nextStopIndex: normalizedStopsCleared % stops.length\n    };\n  };\n  \n  const { lastClearedStopIndex, nextStopIndex } = getStopIndices();\n  \n  // If still loading, show a spinner\n  if (loading) {\n    return (\n      <div className=\"driver-map-loading\">\n        <div className=\"spinner\"></div>\n        <p>Loading your bus information...</p>\n      </div>\n    );\n  }\n  \n  // If there's an error, show error message\n  if (error) {\n    return (\n      <div className=\"driver-map-error\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()}>Retry</button>\n      </div>\n    );\n  }\n  \n  // If no bus assigned, show message\n  if (!busInfo || !busInfo.bus) {\n    return (\n      <div className=\"driver-map-error\">\n        <h2>No Bus Assigned</h2>\n        <p>You do not have a bus assigned to you. Please contact an administrator.</p>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"driver-map-screen\">\n      <div className=\"driver-map-container\">\n        <MapContainer\n          center={center || [22.3190, 87.3091]} // Default to IIT KGP if no position yet\n          zoom={15}\n          className=\"driver-map\"\n          ref={mapRef}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {/* Map controller to center map */}\n          <MapController center={center} zoom={15} />\n          \n          {/* Driver location tracker */}\n          <DriverLocationTracker setPosition={setPosition} />\n          \n          {/* Location updater component */}\n          {position && busInfo && (\n            <LocationUpdater\n              driverId={localStorage.getItem('userId')}\n              busId={busInfo.bus.id}\n              position={position}\n            />\n          )}\n          \n          {/* Driver marker */}\n          {position && (\n            <Marker position={position} icon={busIcon}>\n              <Popup>\n                <div className=\"driver-popup\">\n                  <strong>Your Location (Bus {busInfo.bus.name})</strong>\n                  <p>You are here.</p>\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {/* Show all stops in the route */}\n          {busInfo && busInfo.route && busInfo.route.map((stop, index) => (\n            <Marker\n              key={stop.id}\n              position={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n              icon={index === nextStopIndex ? nextStopIcon : busStopIcon}\n            >\n              <Popup>\n                <div className=\"stop-popup\">\n                  <strong>{stop.name}</strong>\n                  <p>Stop #{index + 1} in route</p>\n                  \n                  {index === nextStopIndex && (\n                    <>\n                      <p className=\"next-stop-label\">This is your next stop</p>\n                      <ClearStopButton\n                        busId={busInfo.bus.id}\n                        stopId={stop.stop_id}\n                        onStopCleared={handleStopCleared}\n                        isNextStop={true}\n                      />\n                    </>\n                  )}\n                </div>\n              </Popup>\n            </Marker>\n          ))}\n          \n          {/* OSRM routes */}\n          {busInfo && busInfo.route && position && (\n            <OsrmRoutes\n              stops={busInfo.route}\n              currentPosition={position}\n              lastClearedStopIndex={lastClearedStopIndex}\n              nextStopIndex={nextStopIndex}\n            />\n          )}\n        </MapContainer>\n        \n        {/* Location button outside map */}\n        {position && (\n          <LocationButton position={position} setCenter={setCenter} />\n        )}\n        \n        {/* Bus info panel */}\n        <div className=\"bus-info-panel\">\n          <h3>Bus: {busInfo.bus.name}</h3>\n          {busInfo.nextStop && (\n            <div className=\"next-stop-info\">\n              <p><strong>Next Stop:</strong> {busInfo.nextStop.name}</p>\n              <ClearStopButton\n                busId={busInfo.bus.id}\n                stopId={busInfo.nextStop.stop_id}\n                onStopCleared={handleStopCleared}\n                isNextStop={true}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DriverMapScreen;\n"],"mappings":";;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,EAAEC,YAAY,QAAQ,eAAe;AAC5F,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,+BAA+B;;AAEtC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,OAAON,CAAC,CAACO,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CV,CAAC,CAACO,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACb,CAAC,CAAC;;AAEF;AACA,MAAMC,OAAO,GAAG,IAAIf,CAAC,CAACO,IAAI,CAAC;EACzBM,OAAO,EAAE,qDAAqD;EAC9DG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,WAAW,GAAG,IAAInB,CAAC,CAACO,IAAI,CAAC;EAC7BM,OAAO,EAAE,yDAAyD;EAClEG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAME,YAAY,GAAG,IAAIpB,CAAC,CAACO,IAAI,CAAC;EAC9BM,OAAO,EAAE,yDAAyD;EAClEG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACrBG,SAAS,EAAE,gBAAgB,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACA,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,GAAG,GAAG5B,MAAM,CAAC,CAAC;EAEpBN,SAAS,CAAC,MAAM;IACd,IAAI+B,MAAM,EAAE;MACVG,GAAG,CAACC,OAAO,CAACJ,MAAM,EAAEC,IAAI,IAAIE,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACL,MAAM,EAAEC,IAAI,EAAEE,GAAG,CAAC,CAAC;EAEvB,OAAO,IAAI;AACb,CAAC;;AAED;AAAAD,EAAA,CAZMH,aAAa;EAAA,QACLxB,MAAM;AAAA;AAAA+B,EAAA,GADdP,aAAa;AAanB,MAAMQ,eAAe,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EACzD1C,SAAS,CAAC,MAAM;IACd,IAAI,CAACyC,QAAQ,IAAI,CAACD,KAAK,EAAE;IAEzB,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMlC,KAAK,CAACmC,IAAI,CACdlC,SAAS,CAAC,yBAAyB,CAAC,EACpC;UACE8B,KAAK;UACLK,QAAQ,EAAEJ,QAAQ,CAAC,CAAC,CAAC;UACrBK,SAAS,EAAEL,QAAQ,CAAC,CAAC;QACvB,CAAC,EACD;UACEM,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;UAC3D;QACF,CACF,CAAC;QACDC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDV,cAAc,CAAC,CAAC;;IAEhB;IACA,MAAMW,QAAQ,GAAGC,WAAW,CAACZ,cAAc,EAAE,KAAK,CAAC;IAEnD,OAAO,MAAMa,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACb,QAAQ,EAAED,KAAK,EAAED,QAAQ,CAAC,CAAC;EAE/B,OAAO,IAAI;AACb,CAAC;;AAED;AAAAG,GAAA,CApCMJ,eAAe;AAAAmB,GAAA,GAAfnB,eAAe;AAqCrB,MAAMoB,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,eAAe;EAAEC,oBAAoB;EAAEC;AAAc,CAAC,KAAK;EAAAC,GAAA;EACtF,MAAM7B,GAAG,GAAG5B,MAAM,CAAC,CAAC;EACpB,MAAM0D,QAAQ,GAAG/D,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMgE,cAAc,GAAGhE,MAAM,CAAC,IAAI,CAAC;EAEnCD,SAAS,CAAC,MAAM;IACd,IAAI,CAAC2D,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,IAAI,CAAChC,GAAG,EAAE;IAExC,MAAMiC,qBAAqB,GAAG,MAAAA,CAAA,KAAY;MACxC,IAAI;QACF;QACA,IAAIH,QAAQ,CAACI,OAAO,EAAE;UACpBlC,GAAG,CAACmC,WAAW,CAACL,QAAQ,CAACI,OAAO,CAAC;UACjCJ,QAAQ,CAACI,OAAO,GAAG,IAAI;QACzB;;QAEA;QACA,MAAME,SAAS,GAAGX,KAAK,CAACzB,GAAG,CAACqC,IAAI,IAAI,CAClCC,UAAU,CAACD,IAAI,CAACzB,SAAS,CAAC,EAC1B0B,UAAU,CAACD,IAAI,CAAC1B,QAAQ,CAAC,CAC1B,CAAC;;QAEF;QACAyB,SAAS,CAACG,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;QAE5B;QACA,MAAMI,eAAe,GAAGJ,SAAS,CAACpC,GAAG,CAACyC,EAAE,IAAIA,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,CAAC;QAEnE,MAAMC,QAAQ,GAAG,MAAMpE,KAAK,CAACqE,GAAG,CAC9B,oDAAoDJ,eAAe,mCACrE,CAAC;QAED,IAAIG,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,IAAI,IAAIH,QAAQ,CAACE,IAAI,CAACE,MAAM,CAACf,MAAM,GAAG,CAAC,EAAE;UAClE,MAAMgB,aAAa,GAAGL,QAAQ,CAACE,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACC,WAAW;UAClE;UACA,MAAMA,WAAW,GAAGF,aAAa,CAAChD,GAAG,CAACmD,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;UAEpE;UACA,MAAMC,QAAQ,GAAG9E,CAAC,CAAC8E,QAAQ,CAACF,WAAW,EAAE;YACvCG,KAAK,EAAE,SAAS;YAChBC,MAAM,EAAE,CAAC;YACTC,OAAO,EAAE,GAAG;YACZC,QAAQ,EAAE;UACZ,CAAC,CAAC,CAACC,KAAK,CAACzD,GAAG,CAAC;UAEb8B,QAAQ,CAACI,OAAO,GAAGkB,QAAQ;QAC7B;MACF,CAAC,CAAC,OAAOjC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IAED,MAAMuC,uBAAuB,GAAG,MAAAA,CAAA,KAAY;MAC1C,IAAI;QACF;QACA,IAAI3B,cAAc,CAACG,OAAO,EAAE;UAC1BlC,GAAG,CAACmC,WAAW,CAACJ,cAAc,CAACG,OAAO,CAAC;UACvCH,cAAc,CAACG,OAAO,GAAG,IAAI;QAC/B;;QAEA;QACA,IAAIP,oBAAoB,KAAK,IAAI,IAAIC,aAAa,KAAK,IAAI,IAAIF,eAAe,EAAE;UAC9E,MAAMiC,eAAe,GAAGlC,KAAK,CAACE,oBAAoB,CAAC;UACnD,MAAMiC,QAAQ,GAAGnC,KAAK,CAACG,aAAa,CAAC;;UAErC;UACA,MAAMQ,SAAS,GAAG,CAChB,CAACE,UAAU,CAACZ,eAAe,CAAC,CAAC,CAAC,CAAC,EAAEY,UAAU,CAACZ,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;UAAE;UAClE,CAACY,UAAU,CAACsB,QAAQ,CAAChD,SAAS,CAAC,EAAE0B,UAAU,CAACsB,QAAQ,CAACjD,QAAQ,CAAC,CAAC,CAAC;UAAA,CACjE;;UAED;UACA,MAAM6B,eAAe,GAAGJ,SAAS,CAACpC,GAAG,CAACyC,EAAE,IAAIA,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC,CAAC,CAACA,IAAI,CAAC,GAAG,CAAC;UAEnE,MAAMC,QAAQ,GAAG,MAAMpE,KAAK,CAACqE,GAAG,CAC9B,oDAAoDJ,eAAe,mCACrE,CAAC;UAED,IAAIG,QAAQ,CAACE,IAAI,CAACC,IAAI,KAAK,IAAI,IAAIH,QAAQ,CAACE,IAAI,CAACE,MAAM,CAACf,MAAM,GAAG,CAAC,EAAE;YAClE,MAAMgB,aAAa,GAAGL,QAAQ,CAACE,IAAI,CAACE,MAAM,CAAC,CAAC,CAAC,CAACE,QAAQ,CAACC,WAAW;YAClE;YACA,MAAMA,WAAW,GAAGF,aAAa,CAAChD,GAAG,CAACmD,KAAK,IAAI,CAACA,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;YAEpE;YACA,MAAMC,QAAQ,GAAG9E,CAAC,CAAC8E,QAAQ,CAACF,WAAW,EAAE;cACvCG,KAAK,EAAE,SAAS;cAAE;cAClBC,MAAM,EAAE,CAAC;cACTC,OAAO,EAAE,GAAG;cACZC,QAAQ,EAAE;YACZ,CAAC,CAAC,CAACC,KAAK,CAACzD,GAAG,CAAC;YAEb+B,cAAc,CAACG,OAAO,GAAGkB,QAAQ;UACnC;QACF;MACF,CAAC,CAAC,OAAOjC,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC5D;IACF,CAAC;IAEDc,qBAAqB,CAAC,CAAC;IACvByB,uBAAuB,CAAC,CAAC;;IAEzB;IACA,OAAO,MAAM;MACX,IAAI5B,QAAQ,CAACI,OAAO,IAAIlC,GAAG,EAAE;QAC3BA,GAAG,CAACmC,WAAW,CAACL,QAAQ,CAACI,OAAO,CAAC;MACnC;MACA,IAAIH,cAAc,CAACG,OAAO,IAAIlC,GAAG,EAAE;QACjCA,GAAG,CAACmC,WAAW,CAACJ,cAAc,CAACG,OAAO,CAAC;MACzC;IACF,CAAC;EACH,CAAC,EAAE,CAAClC,GAAG,EAAEyB,KAAK,EAAEC,eAAe,EAAEC,oBAAoB,EAAEC,aAAa,CAAC,CAAC;EAEtE,OAAO,IAAI;AACb,CAAC;;AAED;AAAAC,GAAA,CApHML,UAAU;EAAA,QACFpD,MAAM;AAAA;AAAAyF,GAAA,GADdrC,UAAU;AAqHhB,MAAMsC,qBAAqB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,GAAA;EACjD,MAAMhE,GAAG,GAAG3B,YAAY,CAAC;IACvB4F,aAAaA,CAACC,CAAC,EAAE;MACfH,WAAW,CAAC,CAACG,CAAC,CAACC,MAAM,CAACC,GAAG,EAAEF,CAAC,CAACC,MAAM,CAACE,GAAG,CAAC,CAAC;IAC3C,CAAC;IACDC,aAAaA,CAACJ,CAAC,EAAE;MACfjD,OAAO,CAACE,KAAK,CAAC,iBAAiB,EAAE+C,CAAC,CAACK,OAAO,CAAC;MAC3CC,KAAK,CAAC,+DAA+D,CAAC;IACxE;EACF,CAAC,CAAC;EAEF1G,SAAS,CAAC,MAAM;IACd;IACAkC,GAAG,CAACyE,MAAM,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,kBAAkB,EAAE;IAAK,CAAC,CAAC;IAErD,OAAO,MAAM;MACX3E,GAAG,CAAC4E,UAAU,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,CAAC5E,GAAG,CAAC,CAAC;EAET,OAAO,IAAI;AACb,CAAC;;AAED;AAAAgE,GAAA,CAvBMF,qBAAqB;EAAA,QACbzF,YAAY;AAAA;AAAAwG,GAAA,GADpBf,qBAAqB;AAwB3B,MAAMgB,cAAc,GAAGA,CAAC;EAAEvE,QAAQ;EAAEwE;AAAU,CAAC,KAAK;EAClD,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIzE,QAAQ,EAAE;MACZwE,SAAS,CAACxE,QAAQ,CAAC;IACrB;EACF,CAAC;EAED,oBACE7B,OAAA;IAAQiB,SAAS,EAAC,iBAAiB;IAACsF,OAAO,EAAED,WAAY;IAACE,KAAK,EAAC,6BAA6B;IAAAC,QAAA,gBAC3FzG,OAAA;MAAGiB,SAAS,EAAC;IAAuB;MAAAyF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,kBAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;;AAED;AAAAC,GAAA,GAdMV,cAAc;AAepB,MAAMW,eAAe,GAAGA,CAAC;EAAEnF,KAAK;EAAEoF,MAAM;EAAEC,aAAa;EAAEC;AAAW,CAAC,KAAK;EAAAC,GAAA;EACxE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlI,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMmI,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI,CAAC1F,KAAK,IAAI,CAACoF,MAAM,EAAE;IAEvB,IAAI;MACFK,UAAU,CAAC,IAAI,CAAC;MAEhB,MAAMpD,QAAQ,GAAG,MAAMpE,KAAK,CAACmC,IAAI,CAC/BlC,SAAS,CAAC,oBAAoB,CAAC,EAC/B;QAAE8B,KAAK;QAAEoF;MAAO,CAAC,EACjB;QACE7E,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;QAC3D;MACF,CACF,CAAC;MAED,IAAI2B,QAAQ,CAACE,IAAI,EAAE;QACjB5B,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;QACxC,IAAIyE,aAAa,EAAEA,aAAa,CAAChD,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MACtD;IACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CqD,KAAK,CAAC,mDAAmD,CAAC;IAC5D,CAAC,SAAS;MACRuB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAI,CAACH,UAAU,EAAE,OAAO,IAAI;EAE5B,oBACElH,OAAA;IACEiB,SAAS,EAAC,mBAAmB;IAC7BsF,OAAO,EAAEe,eAAgB;IACzBC,QAAQ,EAAEH,OAAQ;IAAAX,QAAA,EAEjBW,OAAO,GAAG,YAAY,GAAG;EAAiB;IAAAV,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEb,CAAC;AAACM,GAAA,CA1CIJ,eAAe;AAAAS,GAAA,GAAfT,eAAe;AA4CrB,SAASU,eAAeA,CAAA,EAAG;EAAAC,GAAA;EACzB,MAAM,CAAC7F,QAAQ,EAAEwD,WAAW,CAAC,GAAGlG,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACgC,MAAM,EAAEkF,SAAS,CAAC,GAAGlH,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACwI,OAAO,EAAEC,UAAU,CAAC,GAAGzI,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiI,OAAO,EAAEC,UAAU,CAAC,GAAGlI,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsD,KAAK,EAAEoF,QAAQ,CAAC,GAAG1I,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAM2I,MAAM,GAAGzI,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACAD,SAAS,CAAC,MAAM;IACd,MAAM2I,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACFV,UAAU,CAAC,IAAI,CAAC;QAEhB,MAAMpD,QAAQ,GAAG,MAAMpE,KAAK,CAACqE,GAAG,CAC9BpE,SAAS,CAAC,gBAAgB,CAAC,EAC3B;UACEqC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;UAC3D;QACF,CACF,CAAC;QAED,IAAI2B,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE;UACvCyD,UAAU,CAAC3D,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;UAC9B5B,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEyB,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAC5D,CAAC,MAAM;UACL0D,QAAQ,CAAC,wBAAwB,CAAC;QACpC;MACF,CAAC,CAAC,OAAOpF,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDoF,QAAQ,CAAC,qCAAqC,CAAC;MACjD,CAAC,SAAS;QACRR,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDU,cAAc,CAAC,CAAC;;IAEhB;IACA,MAAMrF,QAAQ,GAAGC,WAAW,CAACoF,cAAc,EAAE,KAAK,CAAC;IAEnD,OAAO,MAAMnF,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtD,SAAS,CAAC,MAAM;IACd,IAAIyC,QAAQ,IAAI,CAACV,MAAM,EAAE;MACvBkF,SAAS,CAACxE,QAAQ,CAAC;IACrB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEV,MAAM,CAAC,CAAC;;EAEtB;EACA,MAAM6G,iBAAiB,GAAIC,UAAU,IAAK;IACxC;IACAL,UAAU,CAACM,IAAI,KAAK;MAClB,GAAGA,IAAI;MACPC,GAAG,EAAEF,UAAU;MACfG,YAAY,EAAEC,QAAQ,CAACJ,UAAU,CAACK,aAAa;IACjD,CAAC,CAAC,CAAC;;IAEH;IACA,MAAMP,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAM9D,QAAQ,GAAG,MAAMpE,KAAK,CAACqE,GAAG,CAC9BpE,SAAS,CAAC,gBAAgB,CAAC,EAC3B;UACEqC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;UAC3D;QACF,CACF,CAAC;QAED,IAAI2B,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE;UACvCyD,UAAU,CAAC3D,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;QAChC;MACF,CAAC,CAAC,OAAO1B,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D;IACF,CAAC;IAEDsF,cAAc,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMQ,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACZ,OAAO,IAAI,CAACA,OAAO,CAACa,KAAK,IAAIb,OAAO,CAACa,KAAK,CAAClF,MAAM,KAAK,CAAC,EAAE;MAC5D,OAAO;QAAEL,oBAAoB,EAAE,IAAI;QAAEC,aAAa,EAAE;MAAK,CAAC;IAC5D;IAEA,MAAMH,KAAK,GAAG4E,OAAO,CAACa,KAAK;IAC3B,MAAMJ,YAAY,GAAGT,OAAO,CAACS,YAAY,IAAI,CAAC;;IAE9C;IACA;IACA,IAAIA,YAAY,KAAK,CAAC,EAAE;MACtB,OAAO;QACLnF,oBAAoB,EAAEF,KAAK,CAACO,MAAM,GAAG,CAAC;QACtCJ,aAAa,EAAE;MACjB,CAAC;IACH;;IAEA;IACA,MAAMuF,sBAAsB,GAAGL,YAAY,GAAGrF,KAAK,CAACO,MAAM;IAE1D,OAAO;MACLL,oBAAoB,EAAEwF,sBAAsB,GAAG,CAAC;MAChDvF,aAAa,EAAEuF,sBAAsB,GAAG1F,KAAK,CAACO;IAChD,CAAC;EACH,CAAC;EAED,MAAM;IAAEL,oBAAoB;IAAEC;EAAc,CAAC,GAAGqF,cAAc,CAAC,CAAC;;EAEhE;EACA,IAAInB,OAAO,EAAE;IACX,oBACEpH,OAAA;MAAKiB,SAAS,EAAC,oBAAoB;MAAAwF,QAAA,gBACjCzG,OAAA;QAAKiB,SAAS,EAAC;MAAS;QAAAyF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/B7G,OAAA;QAAAyG,QAAA,EAAG;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAEV;;EAEA;EACA,IAAIpE,KAAK,EAAE;IACT,oBACEzC,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAwF,QAAA,gBAC/BzG,OAAA;QAAAyG,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd7G,OAAA;QAAAyG,QAAA,EAAIhE;MAAK;QAAAiE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd7G,OAAA;QAAQuG,OAAO,EAAEA,CAAA,KAAMmC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAnC,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAEV;;EAEA;EACA,IAAI,CAACc,OAAO,IAAI,CAACA,OAAO,CAACQ,GAAG,EAAE;IAC5B,oBACEnI,OAAA;MAAKiB,SAAS,EAAC,kBAAkB;MAAAwF,QAAA,gBAC/BzG,OAAA;QAAAyG,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxB7G,OAAA;QAAAyG,QAAA,EAAG;MAAuE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC;EAEV;EAEA,oBACE7G,OAAA;IAAKiB,SAAS,EAAC,mBAAmB;IAAAwF,QAAA,eAChCzG,OAAA;MAAKiB,SAAS,EAAC,sBAAsB;MAAAwF,QAAA,gBACnCzG,OAAA,CAACV,YAAY;QACX6B,MAAM,EAAEA,MAAM,IAAI,CAAC,OAAO,EAAE,OAAO,CAAE,CAAC;QAAA;QACtCC,IAAI,EAAE,EAAG;QACTH,SAAS,EAAC,YAAY;QACtB4H,GAAG,EAAEf,MAAO;QAAArB,QAAA,gBAEZzG,OAAA,CAACT,SAAS;UACRuJ,WAAW,EAAC,yFAAyF;UACrGC,GAAG,EAAC;QAAoD;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,eAGF7G,OAAA,CAACkB,aAAa;UAACC,MAAM,EAAEA,MAAO;UAACC,IAAI,EAAE;QAAG;UAAAsF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG3C7G,OAAA,CAACoF,qBAAqB;UAACC,WAAW,EAAEA;QAAY;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAGlDhF,QAAQ,IAAI8F,OAAO,iBAClB3H,OAAA,CAAC0B,eAAe;UACdC,QAAQ,EAAEU,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAE;UACzCV,KAAK,EAAE+F,OAAO,CAACQ,GAAG,CAACa,EAAG;UACtBnH,QAAQ,EAAEA;QAAS;UAAA6E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CACF,EAGAhF,QAAQ,iBACP7B,OAAA,CAACR,MAAM;UAACqC,QAAQ,EAAEA,QAAS;UAACoH,IAAI,EAAEtI,OAAQ;UAAA8F,QAAA,eACxCzG,OAAA,CAACP,KAAK;YAAAgH,QAAA,eACJzG,OAAA;cAAKiB,SAAS,EAAC,cAAc;cAAAwF,QAAA,gBAC3BzG,OAAA;gBAAAyG,QAAA,GAAQ,qBAAmB,EAACkB,OAAO,CAACQ,GAAG,CAACe,IAAI,EAAC,GAAC;cAAA;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvD7G,OAAA;gBAAAyG,QAAA,EAAG;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACT,EAGAc,OAAO,IAAIA,OAAO,CAACa,KAAK,IAAIb,OAAO,CAACa,KAAK,CAAClH,GAAG,CAAC,CAACqC,IAAI,EAAEwF,KAAK,kBACzDnJ,OAAA,CAACR,MAAM;UAELqC,QAAQ,EAAE,CAAC+B,UAAU,CAACD,IAAI,CAAC1B,QAAQ,CAAC,EAAE2B,UAAU,CAACD,IAAI,CAACzB,SAAS,CAAC,CAAE;UAClE+G,IAAI,EAAEE,KAAK,KAAKjG,aAAa,GAAGlC,YAAY,GAAGD,WAAY;UAAA0F,QAAA,eAE3DzG,OAAA,CAACP,KAAK;YAAAgH,QAAA,eACJzG,OAAA;cAAKiB,SAAS,EAAC,YAAY;cAAAwF,QAAA,gBACzBzG,OAAA;gBAAAyG,QAAA,EAAS9C,IAAI,CAACuF;cAAI;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eAC5B7G,OAAA;gBAAAyG,QAAA,GAAG,QAAM,EAAC0C,KAAK,GAAG,CAAC,EAAC,WAAS;cAAA;gBAAAzC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EAEhCsC,KAAK,KAAKjG,aAAa,iBACtBlD,OAAA,CAAAE,SAAA;gBAAAuG,QAAA,gBACEzG,OAAA;kBAAGiB,SAAS,EAAC,iBAAiB;kBAAAwF,QAAA,EAAC;gBAAsB;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eACzD7G,OAAA,CAAC+G,eAAe;kBACdnF,KAAK,EAAE+F,OAAO,CAACQ,GAAG,CAACa,EAAG;kBACtBhC,MAAM,EAAErD,IAAI,CAACyF,OAAQ;kBACrBnC,aAAa,EAAEe,iBAAkB;kBACjCd,UAAU,EAAE;gBAAK;kBAAAR,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC;cAAA,eACF,CACH;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC,GArBHlD,IAAI,CAACqF,EAAE;UAAAtC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAsBN,CACT,CAAC,EAGDc,OAAO,IAAIA,OAAO,CAACa,KAAK,IAAI3G,QAAQ,iBACnC7B,OAAA,CAAC8C,UAAU;UACTC,KAAK,EAAE4E,OAAO,CAACa,KAAM;UACrBxF,eAAe,EAAEnB,QAAS;UAC1BoB,oBAAoB,EAAEA,oBAAqB;UAC3CC,aAAa,EAAEA;QAAc;UAAAwD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,EAGdhF,QAAQ,iBACP7B,OAAA,CAACoG,cAAc;QAACvE,QAAQ,EAAEA,QAAS;QAACwE,SAAS,EAAEA;MAAU;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAC5D,eAGD7G,OAAA;QAAKiB,SAAS,EAAC,gBAAgB;QAAAwF,QAAA,gBAC7BzG,OAAA;UAAAyG,QAAA,GAAI,OAAK,EAACkB,OAAO,CAACQ,GAAG,CAACe,IAAI;QAAA;UAAAxC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC/Bc,OAAO,CAACzC,QAAQ,iBACflF,OAAA;UAAKiB,SAAS,EAAC,gBAAgB;UAAAwF,QAAA,gBAC7BzG,OAAA;YAAAyG,QAAA,gBAAGzG,OAAA;cAAAyG,QAAA,EAAQ;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACc,OAAO,CAACzC,QAAQ,CAACgE,IAAI;UAAA;YAAAxC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1D7G,OAAA,CAAC+G,eAAe;YACdnF,KAAK,EAAE+F,OAAO,CAACQ,GAAG,CAACa,EAAG;YACtBhC,MAAM,EAAEW,OAAO,CAACzC,QAAQ,CAACkE,OAAQ;YACjCnC,aAAa,EAAEe,iBAAkB;YACjCd,UAAU,EAAE;UAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACa,GAAA,CAzPQD,eAAe;AAAA4B,GAAA,GAAf5B,eAAe;AA2PxB,eAAeA,eAAe;AAAC,IAAAhG,EAAA,EAAAoB,GAAA,EAAAsC,GAAA,EAAAgB,GAAA,EAAAW,GAAA,EAAAU,GAAA,EAAA6B,GAAA;AAAAC,YAAA,CAAA7H,EAAA;AAAA6H,YAAA,CAAAzG,GAAA;AAAAyG,YAAA,CAAAnE,GAAA;AAAAmE,YAAA,CAAAnD,GAAA;AAAAmD,YAAA,CAAAxC,GAAA;AAAAwC,YAAA,CAAA9B,GAAA;AAAA8B,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}