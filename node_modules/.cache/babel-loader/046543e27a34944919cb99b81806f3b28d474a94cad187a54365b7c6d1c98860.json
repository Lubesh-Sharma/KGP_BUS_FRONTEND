{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusMapModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './BusMapModal.css';\nimport api from '../../utils/api';\n\n// Example bus icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\nconst BusMapModal = ({\n  bus,\n  onClose,\n  userLocation\n}) => {\n  _s();\n  const [busLocation, setBusLocation] = useState(null);\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const mapRef = useRef();\n\n  // Fetch bus location and stops whenever 'bus' changes\n  useEffect(() => {\n    if (!bus) return;\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const locationRes = await api.get(`/buses/${bus.id}/location`);\n        if (locationRes.data && locationRes.data.data) {\n          const loc = locationRes.data.data;\n          setBusLocation([parseFloat(loc.latitude), parseFloat(loc.longitude)]);\n        }\n        const stopsRes = await api.get(`/abusroute/${bus.id}/route-with-stops`);\n        if (stopsRes.data && stopsRes.data.data) {\n          setBusStops(stopsRes.data.data.stops);\n        }\n      } catch (err) {\n        console.error('Error fetching bus map data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [bus]);\n  if (!bus) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: bus.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-info\",\n        children: \"Loading map data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-area\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: busLocation || userLocation || [22.319, 87.309],\n          zoom: 14,\n          style: {\n            height: '100%',\n            width: '100%'\n          },\n          ref: mapRef,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 OpenStreetMap contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), busLocation && /*#__PURE__*/_jsxDEV(Marker, {\n            position: busLocation,\n            icon: busIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: bus.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n            position: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: stop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, stop.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(BusMapModal, \"5pwxP2dgl/4RK3oNOrLmHhdQBQw=\");\n_c = BusMapModal;\nexport default BusMapModal;\nvar _c;\n$RefreshReg$(_c, \"BusMapModal\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","L","api","jsxDEV","_jsxDEV","busIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","BusMapModal","bus","onClose","userLocation","_s","busLocation","setBusLocation","busStops","setBusStops","loading","setLoading","mapRef","fetchData","locationRes","get","id","data","loc","parseFloat","latitude","longitude","stopsRes","stops","err","console","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","center","zoom","style","height","width","ref","attribution","url","position","icon","map","stop","_c","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusMapModal.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport './BusMapModal.css';\nimport api from '../../utils/api';\n\n// Example bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\nconst BusMapModal = ({ bus, onClose, userLocation }) => {\n  const [busLocation, setBusLocation] = useState(null);\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const mapRef = useRef();\n\n  // Fetch bus location and stops whenever 'bus' changes\n  useEffect(() => {\n    if (!bus) return;\n\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const locationRes = await api.get(`/buses/${bus.id}/location`);\n        if (locationRes.data && locationRes.data.data) {\n          const loc = locationRes.data.data;\n          setBusLocation([parseFloat(loc.latitude), parseFloat(loc.longitude)]);\n        }\n\n        const stopsRes = await api.get(`/abusroute/${bus.id}/route-with-stops`);\n        if (stopsRes.data && stopsRes.data.data) {\n          setBusStops(stopsRes.data.data.stops);\n        }\n      } catch (err) {\n        console.error('Error fetching bus map data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [bus]);\n\n  if (!bus) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-btn\" onClick={onClose}>Close</button>\n        <h3>{bus.name}</h3>\n        {loading && <p className=\"loading-info\">Loading map data...</p>}\n\n        <div className=\"map-area\">\n          <MapContainer\n            center={busLocation || userLocation || [22.319, 87.309]}\n            zoom={14}\n            style={{ height: '100%', width: '100%' }}\n            ref={mapRef}\n          >\n            <TileLayer\n              attribution=\"Â© OpenStreetMap contributors\"\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n            {busLocation && (\n              <Marker position={busLocation} icon={busIcon}>\n                <Popup>{bus.name}</Popup>\n              </Marker>\n            )}\n            {busStops.map(stop => (\n              <Marker\n                key={stop.id}\n                position={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n              >\n                <Popup>{stop.name}</Popup>\n              </Marker>\n            ))}\n          </MapContainer>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BusMapModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}