{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api, { getApiUrl } from '../../utils/api2.js';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 30 * 1000; // 30 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to recenter map when needed\nfunction MapUpdater({\n  center,\n  zoom\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n}\n\n// Custom component to create routes that follow roads with directions display\n_s(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapUpdater;\nfunction RoadBasedRoutes({\n  stops,\n  setDirections\n}) {\n  _s2();\n  const map = useMap();\n  const controlRef = useRef(null);\n\n  // A safer cleanup function we can call anytime\n  const cleanup = useCallback(() => {\n    if (controlRef.current) {\n      try {\n        // Always remove from map first\n        if (map) map.removeControl(controlRef.current);\n      } catch (e) {\n        console.warn(\"Error removing control:\", e);\n      }\n      controlRef.current = null;\n    }\n  }, [map]);\n\n  // Set up once - clean up on unmount\n  useEffect(() => {\n    return cleanup;\n  }, [cleanup]);\n\n  // Handle route creation/updates\n  useEffect(() => {\n    // Skip if no map or insufficient stops\n    if (!map || !stops || stops.length < 2) {\n      console.log(\"Not enough conditions for route drawing:\", {\n        hasMap: !!map,\n        stopsCount: (stops === null || stops === void 0 ? void 0 : stops.length) || 0\n      });\n      return;\n    }\n\n    // Clear any existing routes first\n    cleanup();\n\n    // Get waypoints from stops\n    const waypoints = [];\n    const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\n    console.log(\"Drawing routes for ordered stops:\", orderedStops);\n\n    // Find the actual stop data using the global stops data\n    for (const routeStop of orderedStops) {\n      var _window$stopsData;\n      const stopData = (_window$stopsData = window.stopsData) === null || _window$stopsData === void 0 ? void 0 : _window$stopsData.find(s => s.id === routeStop.bus_stop_id);\n      if (stopData) {\n        const lat = parseFloat(stopData.latitude);\n        const lng = parseFloat(stopData.longitude);\n        if (!isNaN(lat) && !isNaN(lng)) {\n          waypoints.push(L.latLng(lat, lng));\n        }\n      }\n    }\n    console.log(\"Generated waypoints:\", waypoints.length);\n\n    // Only create route if we have at least 2 valid waypoints\n    if (waypoints.length < 2) {\n      console.log(\"Not enough valid waypoints for route\");\n      return;\n    }\n\n    // Create the OSRM routing control\n    try {\n      const control = L.Routing.control({\n        waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        show: false,\n        // Don't show the routing interface\n        lineOptions: {\n          styles: [{\n            color: '#3388ff',\n            opacity: 0.7,\n            weight: 5\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10\n        },\n        createMarker: () => null,\n        // No markers from routing\n        addWaypoints: false,\n        serviceUrl: 'https://router.project-osrm.org/route/v1'\n      });\n\n      // Handle errors and update directions\n      control.on('routingerror', function (e) {\n        console.warn(\"Routing error:\", e);\n        setDirections([{\n          text: \"Could not calculate route directions. Please try again later.\",\n          type: \"error\"\n        }]);\n      });\n      control.on('routesfound', function (e) {\n        console.log(\"Routes found via OSRM:\", e.routes.length);\n        if (e.routes && e.routes.length > 0) {\n          const route = e.routes[0]; // Get the first route\n\n          // Extract instructions from the route\n          const directionsList = route.instructions.map((instruction, index) => {\n            return {\n              index: index + 1,\n              text: instruction.text,\n              distance: instruction.distance,\n              time: instruction.time,\n              direction: instruction.direction,\n              type: instruction.type\n            };\n          });\n\n          // Update the directions state\n          setDirections(directionsList);\n        }\n      });\n\n      // Store the reference\n      controlRef.current = control;\n\n      // Add the control to the map\n      setTimeout(() => {\n        if (map && controlRef.current) {\n          try {\n            controlRef.current.addTo(map);\n          } catch (e) {\n            console.warn(\"Error adding route control:\", e);\n          }\n        }\n      }, 200);\n    } catch (error) {\n      console.error(\"Error creating routing control:\", error);\n      setDirections([{\n        text: \"Error creating route: \" + error.message,\n        type: \"error\"\n      }]);\n    }\n  }, [map, stops, cleanup, setDirections]);\n  return null;\n}\n_s2(RoadBasedRoutes, \"F1aahUzq/yaim2/7IMfKxqW1b0I=\", false, function () {\n  return [useMap];\n});\n_c2 = RoadBasedRoutes;\nfunction RouteManagement({\n  user\n}) {\n  _s3();\n  var _getBusById, _getBusById2;\n  const [buses, setBuses] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\n  const [zoom, setZoom] = useState(15);\n  const mapRef = useRef(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [routes, setRoutes] = useState([]);\n  const [showMapDebug, setShowMapDebug] = useState(false); // State for debugging\n  const [directions, setDirections] = useState([]); // New state for route directions\n  const [mapLoading, setMapLoading] = useState(false); // New state for map loading\n\n  const [formData, setFormData] = useState({\n    bus_id: '',\n    stops: []\n  });\n  const [isAddingStop, setIsAddingStop] = useState(false);\n  const [currentStopOrder, setCurrentStopOrder] = useState(1);\n  useEffect(() => {\n    // Initialize window-level stopsData and configuration flag\n    window.enableOSRM = true; // Always use OSRM\n    configureRoutingMachine();\n\n    // Add a global diagnostics object to help with debugging\n    window.routeDiagnostics = {\n      stops: [],\n      waypoints: [],\n      logState: () => {\n        var _window$stopsData2;\n        console.log(\"Current Map State:\", {\n          stops: ((_window$stopsData2 = window.stopsData) === null || _window$stopsData2 === void 0 ? void 0 : _window$stopsData2.length) || 0,\n          selectedBus,\n          routeStops: formData.stops.length,\n          mapInitialized: !!mapRef.current\n        });\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError('');\n\n        // Fetch buses\n        try {\n          const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 10000\n          });\n          setBuses(busesResponse.data);\n          console.log(\"Buses loaded for routes:\", busesResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch buses: ' + err.message);\n          console.error(\"Error fetching buses for routes:\", err);\n          setBuses([{\n            id: 'mock1',\n            name: 'Demo Bus 1'\n          }]); // Fallback data\n        }\n\n        // Fetch stops\n        try {\n          const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 10000\n          });\n          setStops(stopsResponse.data);\n          console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch stops: ' + err.message);\n          console.error(\"Error fetching stops for routes:\", err);\n          setStops([{\n            id: 'mock1',\n            name: 'Demo Stop',\n            latitude: 22.3190,\n            longitude: 87.3091\n          }]); // Fallback data\n        }\n\n        // Fetch routes and update your state\n        try {\n          const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 10000\n          });\n          // Using the fetched routes data\n          const fetchedRoutes = routesResponse.data;\n          setRoutes(fetchedRoutes);\n          console.log(\"Routes loaded:\", fetchedRoutes.length);\n        } catch (err) {\n          setError('Failed to fetch routes: ' + err.message);\n          console.error(\"Error fetching routes:\", err);\n          // Using default empty array for routes\n          setRoutes([]);\n        }\n      } catch (err) {\n        setError('Error fetching data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [user.token, refreshTrigger]);\n  useEffect(() => {\n    if (stops && stops.length > 0) {\n      window.stopsData = stops;\n    }\n  }, [stops]);\n  const handleBusSelect = async busId => {\n    try {\n      setSelectedBus(busId);\n      setLoading(true);\n      setError('');\n      setDirections([]); // Clear directions when changing bus\n\n      try {\n        const response = await axios.get(getApiUrl(api.endpoints.adminRouteById(busId)), {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        const busRoutes = response.data;\n        console.log('Routes loaded for bus', busId, busRoutes);\n        setFormData({\n          bus_id: busId,\n          stops: busRoutes\n        });\n\n        // Set current stop order for adding new stops\n        setCurrentStopOrder(busRoutes && busRoutes.length > 0 ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1 : 1);\n\n        // Find stop coordinates to center map\n        if (busRoutes && busRoutes.length > 0) {\n          fitRouteOnMap(busRoutes);\n        }\n      } catch (err) {\n        setError('Error fetching route data: ' + err.message);\n        console.error(\"Error fetching routes for bus:\", err);\n      }\n    } catch (err) {\n      setError('Error preparing bus route view: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddStop = async stopId => {\n    try {\n      setError('');\n      const stop = stops.find(s => s.id === stopId);\n      if (!stop) {\n        throw new Error(\"Stop not found\");\n      }\n\n      // Create new route stop entry\n      const newRoute = {\n        bus_id: selectedBus,\n        bus_stop_id: stopId,\n        stop_order: currentStopOrder\n      };\n      const response = await axios.post(getApiUrl(api.endpoints.adminAddRoute), newRoute, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      if (response.data && response.data.id) {\n        // Use the complete object returned from API\n        setFormData(prev => ({\n          ...prev,\n          stops: [...prev.stops, response.data]\n        }));\n        setRoutes(prev => [...prev, response.data]);\n        setCurrentStopOrder(currentStopOrder + 1);\n        setDirections([]); // Clear directions as they'll be recalculated\n\n        // Update the map to show the new route\n        fitRouteOnMap([...formData.stops, response.data]);\n      }\n      setIsAddingStop(false);\n    } catch (err) {\n      setError('Failed to add stop to route: ' + err.message);\n      console.error(\"Error adding stop to route:\", err);\n    }\n  };\n  const handleRemoveStop = async routeId => {\n    if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\n      return;\n    }\n    try {\n      await axios.delete(getApiUrl(api.endpoints.adminDeleteRoute(routeId)), {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n\n      // Update local state\n      const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\n      setFormData(prev => ({\n        ...prev,\n        stops: updatedStops\n      }));\n      setRoutes(prev => prev.filter(route => route.id !== routeId));\n      setDirections([]); // Clear directions as they'll be recalculated\n\n      // Update the map\n      fitRouteOnMap(updatedStops);\n    } catch (err) {\n      setError('Error removing stop: ' + err.message);\n      console.error(\"Error removing stop from route:\", err);\n    }\n  };\n  const reorderStop = async (routeId, currentOrder, newOrder) => {\n    if (currentOrder === newOrder) return;\n    try {\n      const reorderedStops = [...formData.stops];\n\n      // Find stops that need order changes\n      const stopToMove = reorderedStops.find(s => s.id === routeId);\n\n      // Skip if stop not found\n      if (!stopToMove) return;\n\n      // Update the order\n      stopToMove.stop_order = newOrder;\n\n      // Reorder other stops to maintain sequence\n      reorderedStops.forEach(stop => {\n        if (stop.id !== routeId) {\n          if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\n            // Moving down - shift others up\n            stop.stop_order -= 1;\n          } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\n            // Moving up - shift others down\n            stop.stop_order += 1;\n          }\n        }\n      });\n\n      // Update in the database\n      await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(routeId)), {\n        stop_order: newOrder\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n\n      // Update other affected stops in the database\n      for (const stop of reorderedStops) {\n        if (stop.id !== routeId && (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder || currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder)) {\n          await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(stop.id)), {\n            stop_order: stop.stop_order\n          }, {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            }\n          });\n        }\n      }\n\n      // Update local state with reordered stops\n      setFormData(prev => ({\n        ...prev,\n        stops: reorderedStops\n      }));\n      setDirections([]); // Clear directions as they'll be recalculated\n\n      // Update routes state\n      setRoutes(prev => {\n        const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\n        return [...updatedRoutes, ...reorderedStops];\n      });\n    } catch (err) {\n      setError('Error reordering stops: ' + err.message);\n      console.error(\"Error reordering stops:\", err);\n    }\n  };\n  const fitRouteOnMap = routeStops => {\n    if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\n\n    // Get all stop coordinates, ensuring we have proper numeric values\n    const stopPositions = routeStops.map(routeStop => {\n      const stop = stops.find(s => s.id === routeStop.bus_stop_id);\n      if (!stop) return null;\n      const lat = parseFloat(stop.latitude);\n      const lng = parseFloat(stop.longitude);\n      if (isNaN(lat) || isNaN(lng)) return null;\n      return [lat, lng];\n    }).filter(Boolean);\n    if (stopPositions.length === 0) return;\n    if (stopPositions.length === 1) {\n      // If only one stop, center on it\n      setMapCenter(stopPositions[0]);\n      setZoom(16);\n    } else {\n      // Calculate bounds for multiple stops\n      const minLat = Math.min(...stopPositions.map(pos => pos[0]));\n      const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\n      const minLng = Math.min(...stopPositions.map(pos => pos[1]));\n      const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\n\n      // Center the map on the middle of the route\n      setMapCenter([minLat + (maxLat - minLat) / 2, minLng + (maxLng - minLng) / 2]);\n\n      // Calculate zoom level based on distance\n      const latDiff = maxLat - minLat;\n      const lngDiff = maxLng - minLng;\n      const maxDiff = Math.max(latDiff, lngDiff);\n\n      // Simple zoom calculation, adjust as needed\n      if (maxDiff < 0.005) setZoom(16);else if (maxDiff < 0.01) setZoom(15);else if (maxDiff < 0.02) setZoom(14);else setZoom(13);\n    }\n  };\n  const getStopById = stopId => {\n    return stops.find(stop => stop.id === stopId);\n  };\n  const getBusById = busId => {\n    return buses.find(bus => bus.id === busId);\n  };\n\n  // Add stop marker icon based on whether it's start, middle, or end\n  const getStopIcon = (stopOrder, totalStops) => {\n    const iconUrl = stopOrder === 1 ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' : stopOrder === totalStops ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' : 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png';\n    return L.icon({\n      iconUrl,\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41]\n    });\n  };\n  if (loading && !buses.length && !stops.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading route data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: () => setRefreshTrigger(prev => prev + 1),\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'Refresh Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowMapDebug(!showMapDebug),\n        children: showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 13\n    }, this), showMapDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        padding: '10px',\n        backgroundColor: '#f0f0f0',\n        margin: '10px 0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Route Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Buses Loaded: \", buses.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stops Loaded: \", stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Bus: \", selectedBus ? (_getBusById = getBusById(selectedBus)) === null || _getBusById === void 0 ? void 0 : _getBusById.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Route Stops: \", formData.stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Map Center: \", mapCenter.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.routeDiagnostics.logState();\n          console.log(\"Current formData:\", formData);\n        },\n        children: \"Log Debug Info to Console\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-management-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Bus to Manage Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-list\",\n          children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBus === bus.id ? 'selected' : '',\n            onClick: () => handleBusSelect(bus.id),\n            children: bus.name\n          }, bus.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 17\n      }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Route for \", (_getBusById2 = getBusById(selectedBus)) === null || _getBusById2 === void 0 ? void 0 : _getBusById2.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 643,\n          columnNumber: 25\n        }, this), formData.stops.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No stops assigned to this route. Add stops below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"route-stops-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stop Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 653,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...formData.stops].sort((a, b) => a.stop_order - b.stop_order).map(routeStop => {\n              const stop = getStopById(routeStop.bus_stop_id);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: routeStop.stop_order\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stop ? stop.name : 'Unknown Stop'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order - 1),\n                    disabled: routeStop.stop_order === 1,\n                    children: \"\\u2191\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 666,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order + 1),\n                    disabled: routeStop.stop_order === formData.stops.length,\n                    children: \"\\u2193\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 676,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRemoveStop(routeStop.id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 686,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 53\n                }, this)]\n              }, routeStop.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 662,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-stop-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAddingStop(!isAddingStop),\n            className: \"add-stop-button\",\n            children: isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 29\n          }, this), isAddingStop && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-stops\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a stop to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stops-grid\",\n              children: stops.filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id)).map(stop => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddStop(stop.id),\n                className: \"stop-option\",\n                children: stop.name\n              }, stop.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-map-container\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoom,\n          className: \"map-container map-container-large\",\n          ref: mapRef,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapUpdater, {\n            center: mapCenter,\n            zoom: zoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 25\n          }, this), selectedBus && formData.stops && formData.stops.length >= 2 && /*#__PURE__*/_jsxDEV(RoadBasedRoutes, {\n            stops: formData.stops,\n            setDirections: setDirections\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 29\n          }, this), stops.map(stop => {\n            // Check if this stop is in the selected bus's route\n            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\n            const isInRoute = !!routeStopInfo;\n            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\n            const totalStops = formData.stops.length;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [stop.latitude, stop.longitude],\n              icon: isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default(),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: stop.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 73\n                  }, this), isInRoute ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"in-route\",\n                    children: [\"Stop #\", stopOrder, \" in route\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 767,\n                      columnNumber: 79\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleRemoveStop(routeStopInfo.id),\n                      children: \"Remove from Route\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 768,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 49\n                  }, this) : selectedBus && isAddingStop && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddStop(stop.id),\n                    children: \"Add to Route\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 774,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 762,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 37\n              }, this)\n            }, stop.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 33\n            }, this);\n          })]\n        }, `map-${selectedBus || 'default'}-${refreshTrigger}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 21\n        }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-status\",\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Route Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 33\n            }, this), \" \", formData.stops.length < 2 ? \"Add at least 2 stops to create a route\" : `Route with ${formData.stops.length} stops`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 25\n        }, this), directions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-directions\",\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Route Directions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: directions.map((direction, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [direction.index, \". \", direction.text, \" (\", direction.distance, \" meters, \", direction.time, \" seconds)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 801,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 799,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 590,\n    columnNumber: 9\n  }, this);\n}\n_s3(RouteManagement, \"IXCOikavfYZhHRJGPL3bkakItxM=\");\n_c3 = RouteManagement;\nexport default RouteManagement;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapUpdater\");\n$RefreshReg$(_c2, \"RoadBasedRoutes\");\n$RefreshReg$(_c3, \"RouteManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","MapContainer","TileLayer","Marker","Popup","useMap","L","api","getApiUrl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","configureRoutingMachine","Routing","Itinerary","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","MapUpdater","center","zoom","_s","map","setView","getZoom","_c","RoadBasedRoutes","stops","setDirections","_s2","controlRef","cleanup","current","removeControl","length","log","hasMap","stopsCount","waypoints","orderedStops","sort","a","b","stop_order","routeStop","_window$stopsData","stopData","window","stopsData","find","s","id","bus_stop_id","lat","parseFloat","latitude","lng","longitude","isNaN","push","latLng","control","routeWhileDragging","showAlternatives","fitSelectedRoutes","show","lineOptions","styles","color","opacity","weight","extendToWaypoints","missingRouteTolerance","createMarker","addWaypoints","serviceUrl","on","text","type","routes","route","directionsList","instructions","instruction","index","distance","time","direction","setTimeout","addTo","error","message","_c2","RouteManagement","user","_s3","_getBusById","_getBusById2","buses","setBuses","setStops","loading","setLoading","setError","selectedBus","setSelectedBus","mapCenter","setMapCenter","setZoom","mapRef","refreshTrigger","setRefreshTrigger","setRoutes","showMapDebug","setShowMapDebug","directions","mapLoading","setMapLoading","formData","setFormData","bus_id","isAddingStop","setIsAddingStop","currentStopOrder","setCurrentStopOrder","enableOSRM","routeDiagnostics","logState","_window$stopsData2","routeStops","mapInitialized","fetchData","busesResponse","get","endpoints","adminBuses","headers","Authorization","token","data","err","name","stopsResponse","adminStops","routesResponse","adminRoutes","fetchedRoutes","handleBusSelect","busId","response","adminRouteById","busRoutes","Math","max","stop","fitRouteOnMap","handleAddStop","stopId","Error","newRoute","post","adminAddRoute","prev","handleRemoveStop","routeId","confirm","delete","adminDeleteRoute","updatedStops","filter","reorderStop","currentOrder","newOrder","reorderedStops","stopToMove","forEach","put","adminUpdateRoute","updatedRoutes","r","some","stopPositions","Boolean","minLat","min","pos","maxLat","minLng","maxLng","latDiff","lngDiff","maxDiff","getStopById","getBusById","bus","getStopIcon","stopOrder","totalStops","icon","iconSize","iconAnchor","popupAnchor","shadowSize","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","style","padding","backgroundColor","margin","borderRadius","join","ref","attribution","url","routeStopInfo","isInRoute","position","textAlign","marginTop","_c3","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\r\nimport api, { getApiUrl } from '../../utils/api2.js';\r\n\r\n// Fix for default marker icon in Leaflet with React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\r\n    iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\r\n    shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\r\n});\r\n\r\n\r\nfunction configureRoutingMachine() {\r\n    if (typeof L !== 'undefined' && L.Routing) {\r\n        // Modify the global routing options\r\n        L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\r\n        L.Routing.timeout = 30 * 1000; // 30 seconds timeout\r\n\r\n        // Override the error handling globally\r\n        if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\r\n            L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\r\n                console.warn(\"Handled routing error:\", e);\r\n                // No UI updates or errors thrown\r\n            };\r\n        }\r\n\r\n        // Fix issues with the layer removal\r\n        if (L.Routing.Line && L.Routing.Line.prototype) {\r\n            const originalClearLines = L.Routing.Line.prototype._clearLines;\r\n            L.Routing.Line.prototype._clearLines = function () {\r\n                try {\r\n                    // Safety check before calling the original function\r\n                    if (this._map && this._route && this._route._layers) {\r\n                        originalClearLines.call(this);\r\n                    }\r\n                } catch (e) {\r\n                    console.warn(\"Protected from _clearLines error:\", e);\r\n                    // Manual cleanup as fallback\r\n                    if (this._map && this._route) {\r\n                        try {\r\n                            this._map.removeLayer(this._route);\r\n                        } catch (e) {\r\n                            console.warn(\"Also failed with manual cleanup:\", e);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Component to recenter map when needed\r\nfunction MapUpdater({ center, zoom }) {\r\n    const map = useMap();\r\n\r\n    useEffect(() => {\r\n        if (center) {\r\n            map.setView(center, zoom || map.getZoom());\r\n        }\r\n    }, [center, zoom, map]);\r\n\r\n    return null;\r\n}\r\n\r\n\r\n// Custom component to create routes that follow roads with directions display\r\nfunction RoadBasedRoutes({ stops, setDirections }) {\r\n    const map = useMap();\r\n    const controlRef = useRef(null);\r\n    \r\n    // A safer cleanup function we can call anytime\r\n    const cleanup = useCallback(() => {\r\n        if (controlRef.current) {\r\n            try {\r\n                // Always remove from map first\r\n                if (map) map.removeControl(controlRef.current);\r\n            } catch (e) {\r\n                console.warn(\"Error removing control:\", e);\r\n            }\r\n            controlRef.current = null;\r\n        }\r\n    }, [map]);\r\n\r\n    // Set up once - clean up on unmount\r\n    useEffect(() => {\r\n        return cleanup;\r\n    }, [cleanup]);\r\n\r\n    // Handle route creation/updates\r\n    useEffect(() => {\r\n        // Skip if no map or insufficient stops\r\n        if (!map || !stops || stops.length < 2) {\r\n            console.log(\"Not enough conditions for route drawing:\", {\r\n                hasMap: !!map,\r\n                stopsCount: stops?.length || 0\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Clear any existing routes first\r\n        cleanup();\r\n\r\n        // Get waypoints from stops\r\n        const waypoints = [];\r\n        const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\r\n\r\n        console.log(\"Drawing routes for ordered stops:\", orderedStops);\r\n\r\n        // Find the actual stop data using the global stops data\r\n        for (const routeStop of orderedStops) {\r\n            const stopData = window.stopsData?.find(s => s.id === routeStop.bus_stop_id);\r\n            if (stopData) {\r\n                const lat = parseFloat(stopData.latitude);\r\n                const lng = parseFloat(stopData.longitude);\r\n                if (!isNaN(lat) && !isNaN(lng)) {\r\n                    waypoints.push(L.latLng(lat, lng));\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"Generated waypoints:\", waypoints.length);\r\n\r\n        // Only create route if we have at least 2 valid waypoints\r\n        if (waypoints.length < 2) {\r\n            console.log(\"Not enough valid waypoints for route\");\r\n            return;\r\n        }\r\n\r\n        // Create the OSRM routing control\r\n        try {\r\n            const control = L.Routing.control({\r\n                waypoints,\r\n                routeWhileDragging: false,\r\n                showAlternatives: false,\r\n                fitSelectedRoutes: false,\r\n                show: false, // Don't show the routing interface\r\n                lineOptions: {\r\n                    styles: [{ color: '#3388ff', opacity: 0.7, weight: 5 }],\r\n                    extendToWaypoints: true,\r\n                    missingRouteTolerance: 10\r\n                },\r\n                createMarker: () => null, // No markers from routing\r\n                addWaypoints: false,\r\n                serviceUrl: 'https://router.project-osrm.org/route/v1'\r\n            });\r\n\r\n            // Handle errors and update directions\r\n            control.on('routingerror', function (e) {\r\n                console.warn(\"Routing error:\", e);\r\n                setDirections([{ \r\n                    text: \"Could not calculate route directions. Please try again later.\", \r\n                    type: \"error\" \r\n                }]);\r\n            });\r\n\r\n            control.on('routesfound', function (e) {\r\n                console.log(\"Routes found via OSRM:\", e.routes.length);\r\n                \r\n                if (e.routes && e.routes.length > 0) {\r\n                    const route = e.routes[0]; // Get the first route\r\n                    \r\n                    // Extract instructions from the route\r\n                    const directionsList = route.instructions.map((instruction, index) => {\r\n                        return {\r\n                            index: index + 1,\r\n                            text: instruction.text,\r\n                            distance: instruction.distance,\r\n                            time: instruction.time,\r\n                            direction: instruction.direction,\r\n                            type: instruction.type\r\n                        };\r\n                    });\r\n                    \r\n                    // Update the directions state\r\n                    setDirections(directionsList);\r\n                }\r\n            });\r\n\r\n            // Store the reference\r\n            controlRef.current = control;\r\n\r\n            // Add the control to the map\r\n            setTimeout(() => {\r\n                if (map && controlRef.current) {\r\n                    try {\r\n                        controlRef.current.addTo(map);\r\n                    } catch (e) {\r\n                        console.warn(\"Error adding route control:\", e);\r\n                    }\r\n                }\r\n            }, 200);\r\n        } catch (error) {\r\n            console.error(\"Error creating routing control:\", error);\r\n            setDirections([{ \r\n                text: \"Error creating route: \" + error.message, \r\n                type: \"error\" \r\n            }]);\r\n        }\r\n    }, [map, stops, cleanup, setDirections]);\r\n\r\n    return null;\r\n}\r\n\r\n\r\n\r\nfunction RouteManagement({ user }) {\r\n    const [buses, setBuses] = useState([]);\r\n    const [stops, setStops] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [selectedBus, setSelectedBus] = useState(null);\r\n    const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\r\n    const [zoom, setZoom] = useState(15);\r\n    const mapRef = useRef(null);\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n    const [routes, setRoutes] = useState([]);\r\n    const [showMapDebug, setShowMapDebug] = useState(false); // State for debugging\r\n    const [directions, setDirections] = useState([]); // New state for route directions\r\n    const [mapLoading, setMapLoading] = useState(false); // New state for map loading\r\n\r\n    const [formData, setFormData] = useState({\r\n        bus_id: '',\r\n        stops: []\r\n    });\r\n    const [isAddingStop, setIsAddingStop] = useState(false);\r\n    const [currentStopOrder, setCurrentStopOrder] = useState(1);\r\n\r\n    useEffect(() => {\r\n        // Initialize window-level stopsData and configuration flag\r\n        window.enableOSRM = true; // Always use OSRM\r\n        configureRoutingMachine();\r\n\r\n        // Add a global diagnostics object to help with debugging\r\n        window.routeDiagnostics = {\r\n            stops: [],\r\n            waypoints: [],\r\n            logState: () => {\r\n                console.log(\"Current Map State:\", {\r\n                    stops: window.stopsData?.length || 0,\r\n                    selectedBus,\r\n                    routeStops: formData.stops.length,\r\n                    mapInitialized: !!mapRef.current\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError('');\r\n\r\n                // Fetch buses\r\n                try {\r\n                    const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 10000\r\n                    });\r\n                    setBuses(busesResponse.data);\r\n                    console.log(\"Buses loaded for routes:\", busesResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch buses: ' + err.message);\r\n                    console.error(\"Error fetching buses for routes:\", err);\r\n                    setBuses([{ id: 'mock1', name: 'Demo Bus 1' }]); // Fallback data\r\n                }\r\n\r\n                // Fetch stops\r\n                try {\r\n                    const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 10000\r\n                    });\r\n                    setStops(stopsResponse.data);\r\n                    console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch stops: ' + err.message);\r\n                    console.error(\"Error fetching stops for routes:\", err);\r\n                    setStops([{\r\n                        id: 'mock1',\r\n                        name: 'Demo Stop',\r\n                        latitude: 22.3190,\r\n                        longitude: 87.3091\r\n                    }]); // Fallback data\r\n                }\r\n\r\n                // Fetch routes and update your state\r\n                try {\r\n                    const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 10000\r\n                    });\r\n                    // Using the fetched routes data\r\n                    const fetchedRoutes = routesResponse.data;\r\n                    setRoutes(fetchedRoutes);\r\n                    console.log(\"Routes loaded:\", fetchedRoutes.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch routes: ' + err.message);\r\n                    console.error(\"Error fetching routes:\", err);\r\n                    // Using default empty array for routes\r\n                    setRoutes([]);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching data: ' + err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [user.token, refreshTrigger]);\r\n\r\n    useEffect(() => {\r\n        if (stops && stops.length > 0) {\r\n            window.stopsData = stops;\r\n        }\r\n    }, [stops]);\r\n\r\n\r\n    const handleBusSelect = async (busId) => {\r\n        try {\r\n            setSelectedBus(busId);\r\n            setLoading(true);\r\n            setError('');\r\n            setDirections([]); // Clear directions when changing bus\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    getApiUrl(api.endpoints.adminRouteById(busId)),\r\n                    { headers: { Authorization: `Bearer ${user.token}` } }\r\n                );\r\n\r\n                const busRoutes = response.data;\r\n                console.log('Routes loaded for bus', busId, busRoutes);\r\n\r\n                setFormData({\r\n                    bus_id: busId,\r\n                    stops: busRoutes\r\n                });\r\n\r\n                // Set current stop order for adding new stops\r\n                setCurrentStopOrder(\r\n                    busRoutes && busRoutes.length > 0\r\n                        ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1\r\n                        : 1\r\n                );\r\n\r\n                // Find stop coordinates to center map\r\n                if (busRoutes && busRoutes.length > 0) {\r\n                    fitRouteOnMap(busRoutes);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching route data: ' + err.message);\r\n                console.error(\"Error fetching routes for bus:\", err);\r\n            }\r\n        } catch (err) {\r\n            setError('Error preparing bus route view: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddStop = async (stopId) => {\r\n        try {\r\n            setError('');\r\n            const stop = stops.find(s => s.id === stopId);\r\n            if (!stop) {\r\n                throw new Error(\"Stop not found\");\r\n            }\r\n\r\n            // Create new route stop entry\r\n            const newRoute = {\r\n                bus_id: selectedBus,\r\n                bus_stop_id: stopId,\r\n                stop_order: currentStopOrder\r\n            };\r\n\r\n            const response = await axios.post(\r\n                getApiUrl(api.endpoints.adminAddRoute),\r\n                newRoute,\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            if (response.data && response.data.id) {\r\n                // Use the complete object returned from API\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    stops: [...prev.stops, response.data]\r\n                }));\r\n\r\n                setRoutes(prev => [...prev, response.data]);\r\n                setCurrentStopOrder(currentStopOrder + 1);\r\n                setDirections([]); // Clear directions as they'll be recalculated\r\n\r\n                // Update the map to show the new route\r\n                fitRouteOnMap([...formData.stops, response.data]);\r\n            }\r\n\r\n            setIsAddingStop(false);\r\n        } catch (err) {\r\n            setError('Failed to add stop to route: ' + err.message);\r\n            console.error(\"Error adding stop to route:\", err);\r\n        }\r\n    };\r\n\r\n    const handleRemoveStop = async (routeId) => {\r\n        if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.delete(\r\n                getApiUrl(api.endpoints.adminDeleteRoute(routeId)),\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            // Update local state\r\n            const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\r\n\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: updatedStops\r\n            }));\r\n\r\n            setRoutes(prev => prev.filter(route => route.id !== routeId));\r\n            setDirections([]); // Clear directions as they'll be recalculated\r\n\r\n            // Update the map\r\n            fitRouteOnMap(updatedStops);\r\n\r\n        } catch (err) {\r\n            setError('Error removing stop: ' + err.message);\r\n            console.error(\"Error removing stop from route:\", err);\r\n        }\r\n    };\r\n\r\n    const reorderStop = async (routeId, currentOrder, newOrder) => {\r\n        if (currentOrder === newOrder) return;\r\n\r\n        try {\r\n            const reorderedStops = [...formData.stops];\r\n\r\n            // Find stops that need order changes\r\n            const stopToMove = reorderedStops.find(s => s.id === routeId);\r\n\r\n            // Skip if stop not found\r\n            if (!stopToMove) return;\r\n\r\n            // Update the order\r\n            stopToMove.stop_order = newOrder;\r\n\r\n            // Reorder other stops to maintain sequence\r\n            reorderedStops.forEach(stop => {\r\n                if (stop.id !== routeId) {\r\n                    if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\r\n                        // Moving down - shift others up\r\n                        stop.stop_order -= 1;\r\n                    } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\r\n                        // Moving up - shift others down\r\n                        stop.stop_order += 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Update in the database\r\n            await axios.put(\r\n                getApiUrl(api.endpoints.adminUpdateRoute(routeId)),\r\n                { stop_order: newOrder },\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            // Update other affected stops in the database\r\n            for (const stop of reorderedStops) {\r\n                if (stop.id !== routeId &&\r\n                    ((currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) ||\r\n                        (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder))) {\r\n                    await axios.put(\r\n                        getApiUrl(api.endpoints.adminUpdateRoute(stop.id)),\r\n                        { stop_order: stop.stop_order },\r\n                        { headers: { Authorization: `Bearer ${user.token}` } }\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Update local state with reordered stops\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: reorderedStops\r\n            }));\r\n\r\n            setDirections([]); // Clear directions as they'll be recalculated\r\n\r\n            // Update routes state\r\n            setRoutes(prev => {\r\n                const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\r\n                return [...updatedRoutes, ...reorderedStops];\r\n            });\r\n\r\n        } catch (err) {\r\n            setError('Error reordering stops: ' + err.message);\r\n            console.error(\"Error reordering stops:\", err);\r\n        }\r\n    };\r\n\r\n    const fitRouteOnMap = (routeStops) => {\r\n        if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\r\n\r\n        // Get all stop coordinates, ensuring we have proper numeric values\r\n        const stopPositions = routeStops.map(routeStop => {\r\n            const stop = stops.find(s => s.id === routeStop.bus_stop_id);\r\n            if (!stop) return null;\r\n\r\n            const lat = parseFloat(stop.latitude);\r\n            const lng = parseFloat(stop.longitude);\r\n            if (isNaN(lat) || isNaN(lng)) return null;\r\n\r\n            return [lat, lng];\r\n        }).filter(Boolean);\r\n\r\n        if (stopPositions.length === 0) return;\r\n\r\n        if (stopPositions.length === 1) {\r\n            // If only one stop, center on it\r\n            setMapCenter(stopPositions[0]);\r\n            setZoom(16);\r\n        } else {\r\n            // Calculate bounds for multiple stops\r\n            const minLat = Math.min(...stopPositions.map(pos => pos[0]));\r\n            const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\r\n            const minLng = Math.min(...stopPositions.map(pos => pos[1]));\r\n            const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\r\n\r\n            // Center the map on the middle of the route\r\n            setMapCenter([\r\n                minLat + (maxLat - minLat) / 2,\r\n                minLng + (maxLng - minLng) / 2\r\n            ]);\r\n\r\n            // Calculate zoom level based on distance\r\n            const latDiff = maxLat - minLat;\r\n            const lngDiff = maxLng - minLng;\r\n            const maxDiff = Math.max(latDiff, lngDiff);\r\n\r\n            // Simple zoom calculation, adjust as needed\r\n            if (maxDiff < 0.005) setZoom(16);\r\n            else if (maxDiff < 0.01) setZoom(15);\r\n            else if (maxDiff < 0.02) setZoom(14);\r\n            else setZoom(13);\r\n        }\r\n    };\r\n\r\n    const getStopById = (stopId) => {\r\n        return stops.find(stop => stop.id === stopId);\r\n    };\r\n\r\n    const getBusById = (busId) => {\r\n        return buses.find(bus => bus.id === busId);\r\n    };\r\n\r\n    // Add stop marker icon based on whether it's start, middle, or end\r\n    const getStopIcon = (stopOrder, totalStops) => {\r\n        const iconUrl = stopOrder === 1 ?\r\n            'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' :\r\n            (stopOrder === totalStops ?\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' :\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png');\r\n\r\n        return L.icon({\r\n            iconUrl,\r\n            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41]\r\n        });\r\n    };\r\n\r\n    if (loading && !buses.length && !stops.length) {\r\n        return <div>Loading route data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"route-management\">\r\n            <h2>Route Management</h2>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <div className=\"action-buttons\">\r\n                <button\r\n                    className=\"refresh-button\"\r\n                    onClick={() => setRefreshTrigger(prev => prev + 1)}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? 'Refreshing...' : 'Refresh Data'}\r\n                </button>\r\n\r\n                <button onClick={() => setShowMapDebug(!showMapDebug)}>\r\n                    {showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"}\r\n                </button>\r\n            </div>\r\n\r\n            {showMapDebug && (\r\n                <div className=\"debug-info\" style={{ padding: '10px', backgroundColor: '#f0f0f0', margin: '10px 0', borderRadius: '5px' }}>\r\n                    <h4>Route Debug Information</h4>\r\n                    <p>Buses Loaded: {buses.length}</p>\r\n                    <p>Stops Loaded: {stops.length}</p>\r\n                    <p>Selected Bus: {selectedBus ? getBusById(selectedBus)?.name : 'None'}</p>\r\n                    <p>Route Stops: {formData.stops.length}</p>\r\n                    <p>Map Center: {mapCenter.join(', ')}</p>\r\n                    <button onClick={() => {\r\n                        window.routeDiagnostics.logState();\r\n                        console.log(\"Current formData:\", formData);\r\n                    }}>\r\n                        Log Debug Info to Console\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"route-management-content\">\r\n                <div className=\"bus-selector\">\r\n                    <h3>Select Bus to Manage Route</h3>\r\n                    <div className=\"bus-list\">\r\n                        {buses.map(bus => (\r\n                            <button\r\n                                key={bus.id}\r\n                                className={selectedBus === bus.id ? 'selected' : ''}\r\n                                onClick={() => handleBusSelect(bus.id)}\r\n                            >\r\n                                {bus.name}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedBus && (\r\n                    <div className=\"route-editor\">\r\n                        <h3>Route for {getBusById(selectedBus)?.name}</h3>\r\n\r\n                        {formData.stops.length === 0 ? (\r\n                            <p>No stops assigned to this route. Add stops below.</p>\r\n                        ) : (\r\n                            <table className=\"route-stops-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Order</th>\r\n                                        <th>Stop Name</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {[...formData.stops]\r\n                                        .sort((a, b) => a.stop_order - b.stop_order)\r\n                                        .map(routeStop => {\r\n                                            const stop = getStopById(routeStop.bus_stop_id);\r\n                                            return (\r\n                                                <tr key={routeStop.id}>\r\n                                                    <td>{routeStop.stop_order}</td>\r\n                                                    <td>{stop ? stop.name : 'Unknown Stop'}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order - 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === 1}\r\n                                                        >\r\n                                                            ↑\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order + 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === formData.stops.length}\r\n                                                        >\r\n                                                            ↓\r\n                                                        </button>\r\n                                                        <button onClick={() => handleRemoveStop(routeStop.id)}>\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n\r\n                        <div className=\"add-stop-section\">\r\n                            <button\r\n                                onClick={() => setIsAddingStop(!isAddingStop)}\r\n                                className=\"add-stop-button\"\r\n                            >\r\n                                {isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'}\r\n                            </button>\r\n\r\n                            {isAddingStop && (\r\n                                <div className=\"available-stops\">\r\n                                    <h4>Select a stop to add:</h4>\r\n                                    <div className=\"stops-grid\">\r\n                                        {stops\r\n                                            .filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id))\r\n                                            .map(stop => (\r\n                                                <button\r\n                                                    key={stop.id}\r\n                                                    onClick={() => handleAddStop(stop.id)}\r\n                                                    className=\"stop-option\"\r\n                                                >\r\n                                                    {stop.name}\r\n                                                </button>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"route-map-container\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoom}\r\n                        className=\"map-container map-container-large\"\r\n                        ref={mapRef}\r\n                        key={`map-${selectedBus || 'default'}-${refreshTrigger}`}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        <MapUpdater center={mapCenter} zoom={zoom} />\r\n\r\n                        {/* Add our road-based routes component */}\r\n                        {selectedBus && formData.stops && formData.stops.length >= 2 && (\r\n                            <RoadBasedRoutes stops={formData.stops} setDirections={setDirections} />\r\n                        )}\r\n\r\n                        {/* Display all stops on the map */}\r\n                        {stops.map(stop => {\r\n                            // Check if this stop is in the selected bus's route\r\n                            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\r\n                            const isInRoute = !!routeStopInfo;\r\n                            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\r\n                            const totalStops = formData.stops.length;\r\n\r\n                            return (\r\n                                <Marker\r\n                                    key={stop.id}\r\n                                    position={[stop.latitude, stop.longitude]}\r\n                                    icon={isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default()}\r\n                                >\r\n                                    <Popup>\r\n                                        <div>\r\n                                            <strong>{stop.name}</strong><br />\r\n\r\n                                            {isInRoute ? (\r\n                                                <span className=\"in-route\">\r\n                                                    Stop #{stopOrder} in route<br />\r\n                                                    <button onClick={() => handleRemoveStop(routeStopInfo.id)}>\r\n                                                        Remove from Route\r\n                                                    </button>\r\n                                                </span>\r\n                                            ) : (\r\n                                                selectedBus && isAddingStop && (\r\n                                                    <button onClick={() => handleAddStop(stop.id)}>\r\n                                                        Add to Route\r\n                                                    </button>\r\n                                                )\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                </Marker>\r\n                            );\r\n                        })}\r\n                    </MapContainer>\r\n\r\n                    {/* Route status indicator */}\r\n                    {selectedBus && (\r\n                        <div className=\"route-status\" style={{ textAlign: 'center', marginTop: '10px' }}>\r\n                            <p>\r\n                                <strong>Route Status:</strong> {formData.stops.length < 2\r\n                                    ? \"Add at least 2 stops to create a route\"\r\n                                    : `Route with ${formData.stops.length} stops`}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Display route directions */}\r\n                    {directions.length > 0 && (\r\n                        <div className=\"route-directions\" style={{ marginTop: '10px' }}>\r\n                            <h4>Route Directions</h4>\r\n                            <ul>\r\n                                {directions.map((direction, index) => (\r\n                                    <li key={index}>\r\n                                        {direction.index}. {direction.text} ({direction.distance} meters, {direction.time} seconds)\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteManagement;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAC9E,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAChC,OAAO,0DAA0D;AACjE,OAAOC,GAAG,IAAIC,SAAS,QAAQ,qBAAqB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOJ,CAAC,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CR,CAAC,CAACK,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EACxBC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACf,CAAC,CAAC;AAGF,SAASC,uBAAuBA,CAAA,EAAG;EAC/B,IAAI,OAAOb,CAAC,KAAK,WAAW,IAAIA,CAAC,CAACc,OAAO,EAAE;IACvC;IACAd,CAAC,CAACc,OAAO,CAACC,SAAS,CAACR,SAAS,CAACS,OAAO,CAACC,kBAAkB,GAAG,KAAK;IAChEjB,CAAC,CAACc,OAAO,CAACI,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;IAE/B;IACA,IAAIlB,CAAC,CAACc,OAAO,CAACK,YAAY,IAAInB,CAAC,CAACc,OAAO,CAACK,YAAY,CAACZ,SAAS,EAAE;MAC5DP,CAAC,CAACc,OAAO,CAACK,YAAY,CAACZ,SAAS,CAACa,oBAAoB,GAAG,UAAUC,CAAC,EAAE;QACjEC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEF,CAAC,CAAC;QACzC;MACJ,CAAC;IACL;;IAEA;IACA,IAAIrB,CAAC,CAACc,OAAO,CAACU,IAAI,IAAIxB,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,EAAE;MAC5C,MAAMkB,kBAAkB,GAAGzB,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,CAACmB,WAAW;MAC/D1B,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,CAACmB,WAAW,GAAG,YAAY;QAC/C,IAAI;UACA;UACA,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE;YACjDJ,kBAAkB,CAACK,IAAI,CAAC,IAAI,CAAC;UACjC;QACJ,CAAC,CAAC,OAAOT,CAAC,EAAE;UACRC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;UACpD;UACA,IAAI,IAAI,CAACM,IAAI,IAAI,IAAI,CAACC,MAAM,EAAE;YAC1B,IAAI;cACA,IAAI,CAACD,IAAI,CAACI,WAAW,CAAC,IAAI,CAACH,MAAM,CAAC;YACtC,CAAC,CAAC,OAAOP,CAAC,EAAE;cACRC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEF,CAAC,CAAC;YACvD;UACJ;QACJ;MACJ,CAAC;IACL;EACJ;AACJ;;AAGA;AACA,SAASW,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAMC,GAAG,GAAGrC,MAAM,CAAC,CAAC;EAEpBR,SAAS,CAAC,MAAM;IACZ,IAAI0C,MAAM,EAAE;MACRG,GAAG,CAACC,OAAO,CAACJ,MAAM,EAAEC,IAAI,IAAIE,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACL,MAAM,EAAEC,IAAI,EAAEE,GAAG,CAAC,CAAC;EAEvB,OAAO,IAAI;AACf;;AAGA;AAAAD,EAAA,CAbSH,UAAU;EAAA,QACHjC,MAAM;AAAA;AAAAwC,EAAA,GADbP,UAAU;AAcnB,SAASQ,eAAeA,CAAC;EAAEC,KAAK;EAAEC;AAAc,CAAC,EAAE;EAAAC,GAAA;EAC/C,MAAMP,GAAG,GAAGrC,MAAM,CAAC,CAAC;EACpB,MAAM6C,UAAU,GAAGpD,MAAM,CAAC,IAAI,CAAC;;EAE/B;EACA,MAAMqD,OAAO,GAAGpD,WAAW,CAAC,MAAM;IAC9B,IAAImD,UAAU,CAACE,OAAO,EAAE;MACpB,IAAI;QACA;QACA,IAAIV,GAAG,EAAEA,GAAG,CAACW,aAAa,CAACH,UAAU,CAACE,OAAO,CAAC;MAClD,CAAC,CAAC,OAAOzB,CAAC,EAAE;QACRC,OAAO,CAACC,IAAI,CAAC,yBAAyB,EAAEF,CAAC,CAAC;MAC9C;MACAuB,UAAU,CAACE,OAAO,GAAG,IAAI;IAC7B;EACJ,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;;EAET;EACA7C,SAAS,CAAC,MAAM;IACZ,OAAOsD,OAAO;EAClB,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;;EAEb;EACAtD,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAAC6C,GAAG,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;MACpC1B,OAAO,CAAC2B,GAAG,CAAC,0CAA0C,EAAE;QACpDC,MAAM,EAAE,CAAC,CAACd,GAAG;QACbe,UAAU,EAAE,CAAAV,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEO,MAAM,KAAI;MACjC,CAAC,CAAC;MACF;IACJ;;IAEA;IACAH,OAAO,CAAC,CAAC;;IAET;IACA,MAAMO,SAAS,GAAG,EAAE;IACpB,MAAMC,YAAY,GAAG,CAAC,GAAGZ,KAAK,CAAC,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC;IAE3EnC,OAAO,CAAC2B,GAAG,CAAC,mCAAmC,EAAEI,YAAY,CAAC;;IAE9D;IACA,KAAK,MAAMK,SAAS,IAAIL,YAAY,EAAE;MAAA,IAAAM,iBAAA;MAClC,MAAMC,QAAQ,IAAAD,iBAAA,GAAGE,MAAM,CAACC,SAAS,cAAAH,iBAAA,uBAAhBA,iBAAA,CAAkBI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,SAAS,CAACQ,WAAW,CAAC;MAC5E,IAAIN,QAAQ,EAAE;QACV,MAAMO,GAAG,GAAGC,UAAU,CAACR,QAAQ,CAACS,QAAQ,CAAC;QACzC,MAAMC,GAAG,GAAGF,UAAU,CAACR,QAAQ,CAACW,SAAS,CAAC;QAC1C,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,IAAI,CAACK,KAAK,CAACF,GAAG,CAAC,EAAE;UAC5BlB,SAAS,CAACqB,IAAI,CAACzE,CAAC,CAAC0E,MAAM,CAACP,GAAG,EAAEG,GAAG,CAAC,CAAC;QACtC;MACJ;IACJ;IAEAhD,OAAO,CAAC2B,GAAG,CAAC,sBAAsB,EAAEG,SAAS,CAACJ,MAAM,CAAC;;IAErD;IACA,IAAII,SAAS,CAACJ,MAAM,GAAG,CAAC,EAAE;MACtB1B,OAAO,CAAC2B,GAAG,CAAC,sCAAsC,CAAC;MACnD;IACJ;;IAEA;IACA,IAAI;MACA,MAAM0B,OAAO,GAAG3E,CAAC,CAACc,OAAO,CAAC6D,OAAO,CAAC;QAC9BvB,SAAS;QACTwB,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE,KAAK;QACvBC,iBAAiB,EAAE,KAAK;QACxBC,IAAI,EAAE,KAAK;QAAE;QACbC,WAAW,EAAE;UACTC,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE,SAAS;YAAEC,OAAO,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAE,CAAC,CAAC;UACvDC,iBAAiB,EAAE,IAAI;UACvBC,qBAAqB,EAAE;QAC3B,CAAC;QACDC,YAAY,EAAEA,CAAA,KAAM,IAAI;QAAE;QAC1BC,YAAY,EAAE,KAAK;QACnBC,UAAU,EAAE;MAChB,CAAC,CAAC;;MAEF;MACAd,OAAO,CAACe,EAAE,CAAC,cAAc,EAAE,UAAUrE,CAAC,EAAE;QACpCC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEF,CAAC,CAAC;QACjCqB,aAAa,CAAC,CAAC;UACXiD,IAAI,EAAE,+DAA+D;UACrEC,IAAI,EAAE;QACV,CAAC,CAAC,CAAC;MACP,CAAC,CAAC;MAEFjB,OAAO,CAACe,EAAE,CAAC,aAAa,EAAE,UAAUrE,CAAC,EAAE;QACnCC,OAAO,CAAC2B,GAAG,CAAC,wBAAwB,EAAE5B,CAAC,CAACwE,MAAM,CAAC7C,MAAM,CAAC;QAEtD,IAAI3B,CAAC,CAACwE,MAAM,IAAIxE,CAAC,CAACwE,MAAM,CAAC7C,MAAM,GAAG,CAAC,EAAE;UACjC,MAAM8C,KAAK,GAAGzE,CAAC,CAACwE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;;UAE3B;UACA,MAAME,cAAc,GAAGD,KAAK,CAACE,YAAY,CAAC5D,GAAG,CAAC,CAAC6D,WAAW,EAAEC,KAAK,KAAK;YAClE,OAAO;cACHA,KAAK,EAAEA,KAAK,GAAG,CAAC;cAChBP,IAAI,EAAEM,WAAW,CAACN,IAAI;cACtBQ,QAAQ,EAAEF,WAAW,CAACE,QAAQ;cAC9BC,IAAI,EAAEH,WAAW,CAACG,IAAI;cACtBC,SAAS,EAAEJ,WAAW,CAACI,SAAS;cAChCT,IAAI,EAAEK,WAAW,CAACL;YACtB,CAAC;UACL,CAAC,CAAC;;UAEF;UACAlD,aAAa,CAACqD,cAAc,CAAC;QACjC;MACJ,CAAC,CAAC;;MAEF;MACAnD,UAAU,CAACE,OAAO,GAAG6B,OAAO;;MAE5B;MACA2B,UAAU,CAAC,MAAM;QACb,IAAIlE,GAAG,IAAIQ,UAAU,CAACE,OAAO,EAAE;UAC3B,IAAI;YACAF,UAAU,CAACE,OAAO,CAACyD,KAAK,CAACnE,GAAG,CAAC;UACjC,CAAC,CAAC,OAAOf,CAAC,EAAE;YACRC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,CAAC,CAAC;UAClD;QACJ;MACJ,CAAC,EAAE,GAAG,CAAC;IACX,CAAC,CAAC,OAAOmF,KAAK,EAAE;MACZlF,OAAO,CAACkF,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACvD9D,aAAa,CAAC,CAAC;QACXiD,IAAI,EAAE,wBAAwB,GAAGa,KAAK,CAACC,OAAO;QAC9Cb,IAAI,EAAE;MACV,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,CAACxD,GAAG,EAAEK,KAAK,EAAEI,OAAO,EAAEH,aAAa,CAAC,CAAC;EAExC,OAAO,IAAI;AACf;AAACC,GAAA,CAvIQH,eAAe;EAAA,QACRzC,MAAM;AAAA;AAAA2G,GAAA,GADblE,eAAe;AA2IxB,SAASmE,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,WAAA,EAAAC,YAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAG3H,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmD,KAAK,EAAEyE,QAAQ,CAAC,GAAG5H,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC6H,OAAO,EAAEC,UAAU,CAAC,GAAG9H,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACkH,KAAK,EAAEa,QAAQ,CAAC,GAAG/H,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgI,WAAW,EAAEC,cAAc,CAAC,GAAGjI,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACkI,SAAS,EAAEC,YAAY,CAAC,GAAGnI,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAAC4C,IAAI,EAAEwF,OAAO,CAAC,GAAGpI,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMqI,MAAM,GAAGnI,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAACoI,cAAc,EAAEC,iBAAiB,CAAC,GAAGvI,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACuG,MAAM,EAAEiC,SAAS,CAAC,GAAGxI,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyI,YAAY,EAAEC,eAAe,CAAC,GAAG1I,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACzD,MAAM,CAAC2I,UAAU,EAAEvF,aAAa,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC4I,UAAU,EAAEC,aAAa,CAAC,GAAG7I,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAErD,MAAM,CAAC8I,QAAQ,EAAEC,WAAW,CAAC,GAAG/I,QAAQ,CAAC;IACrCgJ,MAAM,EAAE,EAAE;IACV7F,KAAK,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAAC8F,YAAY,EAAEC,eAAe,CAAC,GAAGlJ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACmJ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGpJ,QAAQ,CAAC,CAAC,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZ;IACAsE,MAAM,CAAC8E,UAAU,GAAG,IAAI,CAAC,CAAC;IAC1B9H,uBAAuB,CAAC,CAAC;;IAEzB;IACAgD,MAAM,CAAC+E,gBAAgB,GAAG;MACtBnG,KAAK,EAAE,EAAE;MACTW,SAAS,EAAE,EAAE;MACbyF,QAAQ,EAAEA,CAAA,KAAM;QAAA,IAAAC,kBAAA;QACZxH,OAAO,CAAC2B,GAAG,CAAC,oBAAoB,EAAE;UAC9BR,KAAK,EAAE,EAAAqG,kBAAA,GAAAjF,MAAM,CAACC,SAAS,cAAAgF,kBAAA,uBAAhBA,kBAAA,CAAkB9F,MAAM,KAAI,CAAC;UACpCsE,WAAW;UACXyB,UAAU,EAAEX,QAAQ,CAAC3F,KAAK,CAACO,MAAM;UACjCgG,cAAc,EAAE,CAAC,CAACrB,MAAM,CAAC7E;QAC7B,CAAC,CAAC;MACN;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENvD,SAAS,CAAC,MAAM;IACZ,MAAM0J,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA7B,UAAU,CAAC,IAAI,CAAC;QAChBC,QAAQ,CAAC,EAAE,CAAC;;QAEZ;QACA,IAAI;UACA,MAAM6B,aAAa,GAAG,MAAMxJ,KAAK,CAACyJ,GAAG,CAACjJ,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAACC,UAAU,CAAC,EAAE;YACvEC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;YAAG,CAAC;YAClDtI,OAAO,EAAE;UACb,CAAC,CAAC;UACF+F,QAAQ,CAACiC,aAAa,CAACO,IAAI,CAAC;UAC5BnI,OAAO,CAAC2B,GAAG,CAAC,0BAA0B,EAAEiG,aAAa,CAACO,IAAI,CAACzG,MAAM,CAAC;QACtE,CAAC,CAAC,OAAO0G,GAAG,EAAE;UACVrC,QAAQ,CAAC,yBAAyB,GAAGqC,GAAG,CAACjD,OAAO,CAAC;UACjDnF,OAAO,CAACkF,KAAK,CAAC,kCAAkC,EAAEkD,GAAG,CAAC;UACtDzC,QAAQ,CAAC,CAAC;YAAEhD,EAAE,EAAE,OAAO;YAAE0F,IAAI,EAAE;UAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD;;QAEA;QACA,IAAI;UACA,MAAMC,aAAa,GAAG,MAAMlK,KAAK,CAACyJ,GAAG,CAACjJ,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAACS,UAAU,CAAC,EAAE;YACvEP,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;YAAG,CAAC;YAClDtI,OAAO,EAAE;UACb,CAAC,CAAC;UACFgG,QAAQ,CAAC0C,aAAa,CAACH,IAAI,CAAC;UAC5BnI,OAAO,CAAC2B,GAAG,CAAC,0BAA0B,EAAE2G,aAAa,CAACH,IAAI,CAACzG,MAAM,CAAC;QACtE,CAAC,CAAC,OAAO0G,GAAG,EAAE;UACVrC,QAAQ,CAAC,yBAAyB,GAAGqC,GAAG,CAACjD,OAAO,CAAC;UACjDnF,OAAO,CAACkF,KAAK,CAAC,kCAAkC,EAAEkD,GAAG,CAAC;UACtDxC,QAAQ,CAAC,CAAC;YACNjD,EAAE,EAAE,OAAO;YACX0F,IAAI,EAAE,WAAW;YACjBtF,QAAQ,EAAE,OAAO;YACjBE,SAAS,EAAE;UACf,CAAC,CAAC,CAAC,CAAC,CAAC;QACT;;QAEA;QACA,IAAI;UACA,MAAMuF,cAAc,GAAG,MAAMpK,KAAK,CAACyJ,GAAG,CAACjJ,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAACW,WAAW,CAAC,EAAE;YACzET,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;YAAG,CAAC;YAClDtI,OAAO,EAAE;UACb,CAAC,CAAC;UACF;UACA,MAAM8I,aAAa,GAAGF,cAAc,CAACL,IAAI;UACzC3B,SAAS,CAACkC,aAAa,CAAC;UACxB1I,OAAO,CAAC2B,GAAG,CAAC,gBAAgB,EAAE+G,aAAa,CAAChH,MAAM,CAAC;QACvD,CAAC,CAAC,OAAO0G,GAAG,EAAE;UACVrC,QAAQ,CAAC,0BAA0B,GAAGqC,GAAG,CAACjD,OAAO,CAAC;UAClDnF,OAAO,CAACkF,KAAK,CAAC,wBAAwB,EAAEkD,GAAG,CAAC;UAC5C;UACA5B,SAAS,CAAC,EAAE,CAAC;QACjB;MACJ,CAAC,CAAC,OAAO4B,GAAG,EAAE;QACVrC,QAAQ,CAAC,uBAAuB,GAAGqC,GAAG,CAACjD,OAAO,CAAC;MACnD,CAAC,SAAS;QACNW,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED6B,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACrC,IAAI,CAAC4C,KAAK,EAAE5B,cAAc,CAAC,CAAC;EAEhCrI,SAAS,CAAC,MAAM;IACZ,IAAIkD,KAAK,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3Ba,MAAM,CAACC,SAAS,GAAGrB,KAAK;IAC5B;EACJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAGX,MAAMwH,eAAe,GAAG,MAAOC,KAAK,IAAK;IACrC,IAAI;MACA3C,cAAc,CAAC2C,KAAK,CAAC;MACrB9C,UAAU,CAAC,IAAI,CAAC;MAChBC,QAAQ,CAAC,EAAE,CAAC;MACZ3E,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEnB,IAAI;QACA,MAAMyH,QAAQ,GAAG,MAAMzK,KAAK,CAACyJ,GAAG,CAC5BjJ,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAACgB,cAAc,CAACF,KAAK,CAAC,CAAC,EAC9C;UAAEZ,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;UAAG;QAAE,CACzD,CAAC;QAED,MAAMa,SAAS,GAAGF,QAAQ,CAACV,IAAI;QAC/BnI,OAAO,CAAC2B,GAAG,CAAC,uBAAuB,EAAEiH,KAAK,EAAEG,SAAS,CAAC;QAEtDhC,WAAW,CAAC;UACRC,MAAM,EAAE4B,KAAK;UACbzH,KAAK,EAAE4H;QACX,CAAC,CAAC;;QAEF;QACA3B,mBAAmB,CACf2B,SAAS,IAAIA,SAAS,CAACrH,MAAM,GAAG,CAAC,GAC3BsH,IAAI,CAACC,GAAG,CAAC,GAAGF,SAAS,CAACjI,GAAG,CAACoI,IAAI,IAAIA,IAAI,CAAC/G,UAAU,CAAC,CAAC,GAAG,CAAC,GACvD,CACV,CAAC;;QAED;QACA,IAAI4G,SAAS,IAAIA,SAAS,CAACrH,MAAM,GAAG,CAAC,EAAE;UACnCyH,aAAa,CAACJ,SAAS,CAAC;QAC5B;MACJ,CAAC,CAAC,OAAOX,GAAG,EAAE;QACVrC,QAAQ,CAAC,6BAA6B,GAAGqC,GAAG,CAACjD,OAAO,CAAC;QACrDnF,OAAO,CAACkF,KAAK,CAAC,gCAAgC,EAAEkD,GAAG,CAAC;MACxD;IACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;MACVrC,QAAQ,CAAC,kCAAkC,GAAGqC,GAAG,CAACjD,OAAO,CAAC;IAC9D,CAAC,SAAS;MACNW,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMsD,aAAa,GAAG,MAAOC,MAAM,IAAK;IACpC,IAAI;MACAtD,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMmD,IAAI,GAAG/H,KAAK,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAK0G,MAAM,CAAC;MAC7C,IAAI,CAACH,IAAI,EAAE;QACP,MAAM,IAAII,KAAK,CAAC,gBAAgB,CAAC;MACrC;;MAEA;MACA,MAAMC,QAAQ,GAAG;QACbvC,MAAM,EAAEhB,WAAW;QACnBpD,WAAW,EAAEyG,MAAM;QACnBlH,UAAU,EAAEgF;MAChB,CAAC;MAED,MAAM0B,QAAQ,GAAG,MAAMzK,KAAK,CAACoL,IAAI,CAC7B5K,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAAC2B,aAAa,CAAC,EACtCF,QAAQ,EACR;QAAEvB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;QAAG;MAAE,CACzD,CAAC;MAED,IAAIW,QAAQ,CAACV,IAAI,IAAIU,QAAQ,CAACV,IAAI,CAACxF,EAAE,EAAE;QACnC;QACAoE,WAAW,CAAC2C,IAAI,KAAK;UACjB,GAAGA,IAAI;UACPvI,KAAK,EAAE,CAAC,GAAGuI,IAAI,CAACvI,KAAK,EAAE0H,QAAQ,CAACV,IAAI;QACxC,CAAC,CAAC,CAAC;QAEH3B,SAAS,CAACkD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEb,QAAQ,CAACV,IAAI,CAAC,CAAC;QAC3Cf,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;QACzC/F,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;QAEnB;QACA+H,aAAa,CAAC,CAAC,GAAGrC,QAAQ,CAAC3F,KAAK,EAAE0H,QAAQ,CAACV,IAAI,CAAC,CAAC;MACrD;MAEAjB,eAAe,CAAC,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACVrC,QAAQ,CAAC,+BAA+B,GAAGqC,GAAG,CAACjD,OAAO,CAAC;MACvDnF,OAAO,CAACkF,KAAK,CAAC,6BAA6B,EAAEkD,GAAG,CAAC;IACrD;EACJ,CAAC;EAED,MAAMuB,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAI,CAACrH,MAAM,CAACsH,OAAO,CAAC,2DAA2D,CAAC,EAAE;MAC9E;IACJ;IAEA,IAAI;MACA,MAAMzL,KAAK,CAAC0L,MAAM,CACdlL,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAACiC,gBAAgB,CAACH,OAAO,CAAC,CAAC,EAClD;QAAE5B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;QAAG;MAAE,CACzD,CAAC;;MAED;MACA,MAAM8B,YAAY,GAAGlD,QAAQ,CAAC3F,KAAK,CAAC8I,MAAM,CAACf,IAAI,IAAIA,IAAI,CAACvG,EAAE,KAAKiH,OAAO,CAAC;MAEvE7C,WAAW,CAAC2C,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPvI,KAAK,EAAE6I;MACX,CAAC,CAAC,CAAC;MAEHxD,SAAS,CAACkD,IAAI,IAAIA,IAAI,CAACO,MAAM,CAACzF,KAAK,IAAIA,KAAK,CAAC7B,EAAE,KAAKiH,OAAO,CAAC,CAAC;MAC7DxI,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEnB;MACA+H,aAAa,CAACa,YAAY,CAAC;IAE/B,CAAC,CAAC,OAAO5B,GAAG,EAAE;MACVrC,QAAQ,CAAC,uBAAuB,GAAGqC,GAAG,CAACjD,OAAO,CAAC;MAC/CnF,OAAO,CAACkF,KAAK,CAAC,iCAAiC,EAAEkD,GAAG,CAAC;IACzD;EACJ,CAAC;EAED,MAAM8B,WAAW,GAAG,MAAAA,CAAON,OAAO,EAAEO,YAAY,EAAEC,QAAQ,KAAK;IAC3D,IAAID,YAAY,KAAKC,QAAQ,EAAE;IAE/B,IAAI;MACA,MAAMC,cAAc,GAAG,CAAC,GAAGvD,QAAQ,CAAC3F,KAAK,CAAC;;MAE1C;MACA,MAAMmJ,UAAU,GAAGD,cAAc,CAAC5H,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKiH,OAAO,CAAC;;MAE7D;MACA,IAAI,CAACU,UAAU,EAAE;;MAEjB;MACAA,UAAU,CAACnI,UAAU,GAAGiI,QAAQ;;MAEhC;MACAC,cAAc,CAACE,OAAO,CAACrB,IAAI,IAAI;QAC3B,IAAIA,IAAI,CAACvG,EAAE,KAAKiH,OAAO,EAAE;UACrB,IAAIO,YAAY,GAAGC,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,GAAGgI,YAAY,IAAIjB,IAAI,CAAC/G,UAAU,IAAIiI,QAAQ,EAAE;YAC1F;YACAlB,IAAI,CAAC/G,UAAU,IAAI,CAAC;UACxB,CAAC,MAAM,IAAIgI,YAAY,GAAGC,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,IAAIiI,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,GAAGgI,YAAY,EAAE;YACjG;YACAjB,IAAI,CAAC/G,UAAU,IAAI,CAAC;UACxB;QACJ;MACJ,CAAC,CAAC;;MAEF;MACA,MAAM/D,KAAK,CAACoM,GAAG,CACX5L,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAAC2C,gBAAgB,CAACb,OAAO,CAAC,CAAC,EAClD;QAAEzH,UAAU,EAAEiI;MAAS,CAAC,EACxB;QAAEpC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;QAAG;MAAE,CACzD,CAAC;;MAED;MACA,KAAK,MAAMgB,IAAI,IAAImB,cAAc,EAAE;QAC/B,IAAInB,IAAI,CAACvG,EAAE,KAAKiH,OAAO,KACjBO,YAAY,GAAGC,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,GAAGgI,YAAY,IAAIjB,IAAI,CAAC/G,UAAU,IAAIiI,QAAQ,IACrFD,YAAY,GAAGC,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,IAAIiI,QAAQ,IAAIlB,IAAI,CAAC/G,UAAU,GAAGgI,YAAa,CAAC,EAAE;UACjG,MAAM/L,KAAK,CAACoM,GAAG,CACX5L,SAAS,CAACD,GAAG,CAACmJ,SAAS,CAAC2C,gBAAgB,CAACvB,IAAI,CAACvG,EAAE,CAAC,CAAC,EAClD;YAAER,UAAU,EAAE+G,IAAI,CAAC/G;UAAW,CAAC,EAC/B;YAAE6F,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAU3C,IAAI,CAAC4C,KAAK;YAAG;UAAE,CACzD,CAAC;QACL;MACJ;;MAEA;MACAnB,WAAW,CAAC2C,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPvI,KAAK,EAAEkJ;MACX,CAAC,CAAC,CAAC;MAEHjJ,aAAa,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEnB;MACAoF,SAAS,CAACkD,IAAI,IAAI;QACd,MAAMgB,aAAa,GAAGhB,IAAI,CAACO,MAAM,CAACU,CAAC,IAAI,CAACN,cAAc,CAACO,IAAI,CAAClI,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKgI,CAAC,CAAChI,EAAE,CAAC,CAAC;QAChF,OAAO,CAAC,GAAG+H,aAAa,EAAE,GAAGL,cAAc,CAAC;MAChD,CAAC,CAAC;IAEN,CAAC,CAAC,OAAOjC,GAAG,EAAE;MACVrC,QAAQ,CAAC,0BAA0B,GAAGqC,GAAG,CAACjD,OAAO,CAAC;MAClDnF,OAAO,CAACkF,KAAK,CAAC,yBAAyB,EAAEkD,GAAG,CAAC;IACjD;EACJ,CAAC;EAED,MAAMe,aAAa,GAAI1B,UAAU,IAAK;IAClC,IAAI,CAACA,UAAU,IAAIA,UAAU,CAAC/F,MAAM,KAAK,CAAC,IAAI,CAAC2E,MAAM,CAAC7E,OAAO,EAAE;;IAE/D;IACA,MAAMqJ,aAAa,GAAGpD,UAAU,CAAC3G,GAAG,CAACsB,SAAS,IAAI;MAC9C,MAAM8G,IAAI,GAAG/H,KAAK,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,SAAS,CAACQ,WAAW,CAAC;MAC5D,IAAI,CAACsG,IAAI,EAAE,OAAO,IAAI;MAEtB,MAAMrG,GAAG,GAAGC,UAAU,CAACoG,IAAI,CAACnG,QAAQ,CAAC;MACrC,MAAMC,GAAG,GAAGF,UAAU,CAACoG,IAAI,CAACjG,SAAS,CAAC;MACtC,IAAIC,KAAK,CAACL,GAAG,CAAC,IAAIK,KAAK,CAACF,GAAG,CAAC,EAAE,OAAO,IAAI;MAEzC,OAAO,CAACH,GAAG,EAAEG,GAAG,CAAC;IACrB,CAAC,CAAC,CAACiH,MAAM,CAACa,OAAO,CAAC;IAElB,IAAID,aAAa,CAACnJ,MAAM,KAAK,CAAC,EAAE;IAEhC,IAAImJ,aAAa,CAACnJ,MAAM,KAAK,CAAC,EAAE;MAC5B;MACAyE,YAAY,CAAC0E,aAAa,CAAC,CAAC,CAAC,CAAC;MAC9BzE,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACH;MACA,MAAM2E,MAAM,GAAG/B,IAAI,CAACgC,GAAG,CAAC,GAAGH,aAAa,CAAC/J,GAAG,CAACmK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMC,MAAM,GAAGlC,IAAI,CAACC,GAAG,CAAC,GAAG4B,aAAa,CAAC/J,GAAG,CAACmK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAME,MAAM,GAAGnC,IAAI,CAACgC,GAAG,CAAC,GAAGH,aAAa,CAAC/J,GAAG,CAACmK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMG,MAAM,GAAGpC,IAAI,CAACC,GAAG,CAAC,GAAG4B,aAAa,CAAC/J,GAAG,CAACmK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5D;MACA9E,YAAY,CAAC,CACT4E,MAAM,GAAG,CAACG,MAAM,GAAGH,MAAM,IAAI,CAAC,EAC9BI,MAAM,GAAG,CAACC,MAAM,GAAGD,MAAM,IAAI,CAAC,CACjC,CAAC;;MAEF;MACA,MAAME,OAAO,GAAGH,MAAM,GAAGH,MAAM;MAC/B,MAAMO,OAAO,GAAGF,MAAM,GAAGD,MAAM;MAC/B,MAAMI,OAAO,GAAGvC,IAAI,CAACC,GAAG,CAACoC,OAAO,EAAEC,OAAO,CAAC;;MAE1C;MACA,IAAIC,OAAO,GAAG,KAAK,EAAEnF,OAAO,CAAC,EAAE,CAAC,CAAC,KAC5B,IAAImF,OAAO,GAAG,IAAI,EAAEnF,OAAO,CAAC,EAAE,CAAC,CAAC,KAChC,IAAImF,OAAO,GAAG,IAAI,EAAEnF,OAAO,CAAC,EAAE,CAAC,CAAC,KAChCA,OAAO,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMoF,WAAW,GAAInC,MAAM,IAAK;IAC5B,OAAOlI,KAAK,CAACsB,IAAI,CAACyG,IAAI,IAAIA,IAAI,CAACvG,EAAE,KAAK0G,MAAM,CAAC;EACjD,CAAC;EAED,MAAMoC,UAAU,GAAI7C,KAAK,IAAK;IAC1B,OAAOlD,KAAK,CAACjD,IAAI,CAACiJ,GAAG,IAAIA,GAAG,CAAC/I,EAAE,KAAKiG,KAAK,CAAC;EAC9C,CAAC;;EAED;EACA,MAAM+C,WAAW,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IAC3C,MAAMxM,OAAO,GAAGuM,SAAS,KAAK,CAAC,GAC3B,qGAAqG,GACpGA,SAAS,KAAKC,UAAU,GACrB,mGAAmG,GACnG,oGAAqG;IAE7G,OAAOnN,CAAC,CAACoN,IAAI,CAAC;MACVzM,OAAO;MACPC,SAAS,EAAE,+EAA+E;MAC1FyM,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;IACvB,CAAC,CAAC;EACN,CAAC;EAED,IAAIrG,OAAO,IAAI,CAACH,KAAK,CAAChE,MAAM,IAAI,CAACP,KAAK,CAACO,MAAM,EAAE;IAC3C,oBAAO5C,OAAA;MAAAqN,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEA,oBACIzN,OAAA;IAAK0N,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC7BrN,OAAA;MAAAqN,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBrH,KAAK,iBAAIpG,OAAA;MAAK0N,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAEjH;IAAK;MAAAkH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtDzN,OAAA;MAAK0N,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC3BrN,OAAA;QACI0N,SAAS,EAAC,gBAAgB;QAC1BC,OAAO,EAAEA,CAAA,KAAMlG,iBAAiB,CAACmD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;QACnDgD,QAAQ,EAAE7G,OAAQ;QAAAsG,QAAA,EAEjBtG,OAAO,GAAG,eAAe,GAAG;MAAc;QAAAuG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAETzN,OAAA;QAAQ2N,OAAO,EAAEA,CAAA,KAAM/F,eAAe,CAAC,CAACD,YAAY,CAAE;QAAA0F,QAAA,EACjD1F,YAAY,GAAG,iBAAiB,GAAG;MAAiB;QAAA2F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAEL9F,YAAY,iBACT3H,OAAA;MAAK0N,SAAS,EAAC,YAAY;MAACG,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,eAAe,EAAE,SAAS;QAAEC,MAAM,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAM,CAAE;MAAAZ,QAAA,gBACtHrN,OAAA;QAAAqN,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCzN,OAAA;QAAAqN,QAAA,GAAG,gBAAc,EAACzG,KAAK,CAAChE,MAAM;MAAA;QAAA0K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCzN,OAAA;QAAAqN,QAAA,GAAG,gBAAc,EAAChL,KAAK,CAACO,MAAM;MAAA;QAAA0K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnCzN,OAAA;QAAAqN,QAAA,GAAG,gBAAc,EAACnG,WAAW,IAAAR,WAAA,GAAGiG,UAAU,CAACzF,WAAW,CAAC,cAAAR,WAAA,uBAAvBA,WAAA,CAAyB6C,IAAI,GAAG,MAAM;MAAA;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3EzN,OAAA;QAAAqN,QAAA,GAAG,eAAa,EAACrF,QAAQ,CAAC3F,KAAK,CAACO,MAAM;MAAA;QAAA0K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3CzN,OAAA;QAAAqN,QAAA,GAAG,cAAY,EAACjG,SAAS,CAAC8G,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzCzN,OAAA;QAAQ2N,OAAO,EAAEA,CAAA,KAAM;UACnBlK,MAAM,CAAC+E,gBAAgB,CAACC,QAAQ,CAAC,CAAC;UAClCvH,OAAO,CAAC2B,GAAG,CAAC,mBAAmB,EAAEmF,QAAQ,CAAC;QAC9C,CAAE;QAAAqF,QAAA,EAAC;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,eAEDzN,OAAA;MAAK0N,SAAS,EAAC,0BAA0B;MAAAL,QAAA,gBACrCrN,OAAA;QAAK0N,SAAS,EAAC,cAAc;QAAAL,QAAA,gBACzBrN,OAAA;UAAAqN,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnCzN,OAAA;UAAK0N,SAAS,EAAC,UAAU;UAAAL,QAAA,EACpBzG,KAAK,CAAC5E,GAAG,CAAC4K,GAAG,iBACV5M,OAAA;YAEI0N,SAAS,EAAExG,WAAW,KAAK0F,GAAG,CAAC/I,EAAE,GAAG,UAAU,GAAG,EAAG;YACpD8J,OAAO,EAAEA,CAAA,KAAM9D,eAAe,CAAC+C,GAAG,CAAC/I,EAAE,CAAE;YAAAwJ,QAAA,EAEtCT,GAAG,CAACrD;UAAI,GAJJqD,GAAG,CAAC/I,EAAE;YAAAyJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKP,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAELvG,WAAW,iBACRlH,OAAA;QAAK0N,SAAS,EAAC,cAAc;QAAAL,QAAA,gBACzBrN,OAAA;UAAAqN,QAAA,GAAI,YAAU,GAAA1G,YAAA,GAACgG,UAAU,CAACzF,WAAW,CAAC,cAAAP,YAAA,uBAAvBA,YAAA,CAAyB4C,IAAI;QAAA;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAEjDzF,QAAQ,CAAC3F,KAAK,CAACO,MAAM,KAAK,CAAC,gBACxB5C,OAAA;UAAAqN,QAAA,EAAG;QAAiD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAExDzN,OAAA;UAAO0N,SAAS,EAAC,mBAAmB;UAAAL,QAAA,gBAChCrN,OAAA;YAAAqN,QAAA,eACIrN,OAAA;cAAAqN,QAAA,gBACIrN,OAAA;gBAAAqN,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdzN,OAAA;gBAAAqN,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBzN,OAAA;gBAAAqN,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRzN,OAAA;YAAAqN,QAAA,EACK,CAAC,GAAGrF,QAAQ,CAAC3F,KAAK,CAAC,CACfa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC,CAC3CrB,GAAG,CAACsB,SAAS,IAAI;cACd,MAAM8G,IAAI,GAAGsC,WAAW,CAACpJ,SAAS,CAACQ,WAAW,CAAC;cAC/C,oBACI9D,OAAA;gBAAAqN,QAAA,gBACIrN,OAAA;kBAAAqN,QAAA,EAAK/J,SAAS,CAACD;gBAAU;kBAAAiK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC/BzN,OAAA;kBAAAqN,QAAA,EAAKjD,IAAI,GAAGA,IAAI,CAACb,IAAI,GAAG;gBAAc;kBAAA+D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5CzN,OAAA;kBAAAqN,QAAA,gBACIrN,OAAA;oBACI2N,OAAO,EAAEA,CAAA,KAAMvC,WAAW,CACtB9H,SAAS,CAACO,EAAE,EACZP,SAAS,CAACD,UAAU,EACpBC,SAAS,CAACD,UAAU,GAAG,CAC3B,CAAE;oBACFuK,QAAQ,EAAEtK,SAAS,CAACD,UAAU,KAAK,CAAE;oBAAAgK,QAAA,EACxC;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTzN,OAAA;oBACI2N,OAAO,EAAEA,CAAA,KAAMvC,WAAW,CACtB9H,SAAS,CAACO,EAAE,EACZP,SAAS,CAACD,UAAU,EACpBC,SAAS,CAACD,UAAU,GAAG,CAC3B,CAAE;oBACFuK,QAAQ,EAAEtK,SAAS,CAACD,UAAU,KAAK2E,QAAQ,CAAC3F,KAAK,CAACO,MAAO;oBAAAyK,QAAA,EAC5D;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTzN,OAAA;oBAAQ2N,OAAO,EAAEA,CAAA,KAAM9C,gBAAgB,CAACvH,SAAS,CAACO,EAAE,CAAE;oBAAAwJ,QAAA,EAAC;kBAEvD;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA,GA3BAnK,SAAS,CAACO,EAAE;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA4BjB,CAAC;YAEb,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACV,eAEDzN,OAAA;UAAK0N,SAAS,EAAC,kBAAkB;UAAAL,QAAA,gBAC7BrN,OAAA;YACI2N,OAAO,EAAEA,CAAA,KAAMvF,eAAe,CAAC,CAACD,YAAY,CAAE;YAC9CuF,SAAS,EAAC,iBAAiB;YAAAL,QAAA,EAE1BlF,YAAY,GAAG,oBAAoB,GAAG;UAAmB;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,EAERtF,YAAY,iBACTnI,OAAA;YAAK0N,SAAS,EAAC,iBAAiB;YAAAL,QAAA,gBAC5BrN,OAAA;cAAAqN,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9BzN,OAAA;cAAK0N,SAAS,EAAC,YAAY;cAAAL,QAAA,EACtBhL,KAAK,CACD8I,MAAM,CAACf,IAAI,IAAI,CAACpC,QAAQ,CAAC3F,KAAK,CAACyJ,IAAI,CAAClI,CAAC,IAAIA,CAAC,CAACE,WAAW,KAAKsG,IAAI,CAACvG,EAAE,CAAC,CAAC,CACpE7B,GAAG,CAACoI,IAAI,iBACLpK,OAAA;gBAEI2N,OAAO,EAAEA,CAAA,KAAMrD,aAAa,CAACF,IAAI,CAACvG,EAAE,CAAE;gBACtC6J,SAAS,EAAC,aAAa;gBAAAL,QAAA,EAEtBjD,IAAI,CAACb;cAAI,GAJLa,IAAI,CAACvG,EAAE;gBAAAyJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKR,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,eAEDzN,OAAA;QAAK0N,SAAS,EAAC,qBAAqB;QAAAL,QAAA,gBAChCrN,OAAA,CAACT,YAAY;UACTsC,MAAM,EAAEuF,SAAU;UAClBtF,IAAI,EAAEA,IAAK;UACX4L,SAAS,EAAC,mCAAmC;UAC7CS,GAAG,EAAE5G,MAAO;UAAA8F,QAAA,gBAGZrN,OAAA,CAACR,SAAS;YACN4O,WAAW,EAAC,yFAAyF;YACrGC,GAAG,EAAC;UAAoD;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eAEFzN,OAAA,CAAC4B,UAAU;YAACC,MAAM,EAAEuF,SAAU;YAACtF,IAAI,EAAEA;UAAK;YAAAwL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAG5CvG,WAAW,IAAIc,QAAQ,CAAC3F,KAAK,IAAI2F,QAAQ,CAAC3F,KAAK,CAACO,MAAM,IAAI,CAAC,iBACxD5C,OAAA,CAACoC,eAAe;YAACC,KAAK,EAAE2F,QAAQ,CAAC3F,KAAM;YAACC,aAAa,EAAEA;UAAc;YAAAgL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC1E,EAGApL,KAAK,CAACL,GAAG,CAACoI,IAAI,IAAI;YACf;YACA,MAAMkE,aAAa,GAAGpH,WAAW,IAAIc,QAAQ,CAAC3F,KAAK,CAACsB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,WAAW,KAAKsG,IAAI,CAACvG,EAAE,CAAC;YACxF,MAAM0K,SAAS,GAAG,CAAC,CAACD,aAAa;YACjC,MAAMxB,SAAS,GAAGyB,SAAS,GAAGD,aAAa,CAACjL,UAAU,GAAG,IAAI;YAC7D,MAAM0J,UAAU,GAAG/E,QAAQ,CAAC3F,KAAK,CAACO,MAAM;YAExC,oBACI5C,OAAA,CAACP,MAAM;cAEH+O,QAAQ,EAAE,CAACpE,IAAI,CAACnG,QAAQ,EAAEmG,IAAI,CAACjG,SAAS,CAAE;cAC1C6I,IAAI,EAAEuB,SAAS,GAAG1B,WAAW,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAG,IAAInN,CAAC,CAACK,IAAI,CAACC,OAAO,CAAC,CAAE;cAAAmN,QAAA,eAE5ErN,OAAA,CAACN,KAAK;gBAAA2N,QAAA,eACFrN,OAAA;kBAAAqN,QAAA,gBACIrN,OAAA;oBAAAqN,QAAA,EAASjD,IAAI,CAACb;kBAAI;oBAAA+D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAAAzN,OAAA;oBAAAsN,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAEjCc,SAAS,gBACNvO,OAAA;oBAAM0N,SAAS,EAAC,UAAU;oBAAAL,QAAA,GAAC,QACjB,EAACP,SAAS,EAAC,WAAS,eAAA9M,OAAA;sBAAAsN,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAChCzN,OAAA;sBAAQ2N,OAAO,EAAEA,CAAA,KAAM9C,gBAAgB,CAACyD,aAAa,CAACzK,EAAE,CAAE;sBAAAwJ,QAAA,EAAC;oBAE3D;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC,GAEPvG,WAAW,IAAIiB,YAAY,iBACvBnI,OAAA;oBAAQ2N,OAAO,EAAEA,CAAA,KAAMrD,aAAa,CAACF,IAAI,CAACvG,EAAE,CAAE;oBAAAwJ,QAAA,EAAC;kBAE/C;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAEf;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAvBHrD,IAAI,CAACvG,EAAE;cAAAyJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwBR,CAAC;UAEjB,CAAC,CAAC;QAAA,GAlDG,OAAOvG,WAAW,IAAI,SAAS,IAAIM,cAAc,EAAE;UAAA8F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmD9C,CAAC,EAGdvG,WAAW,iBACRlH,OAAA;UAAK0N,SAAS,EAAC,cAAc;UAACG,KAAK,EAAE;YAAEY,SAAS,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAO,CAAE;UAAArB,QAAA,eAC5ErN,OAAA;YAAAqN,QAAA,gBACIrN,OAAA;cAAAqN,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACzF,QAAQ,CAAC3F,KAAK,CAACO,MAAM,GAAG,CAAC,GACnD,wCAAwC,GACxC,cAAcoF,QAAQ,CAAC3F,KAAK,CAACO,MAAM,QAAQ;UAAA;YAAA0K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACR,EAGA5F,UAAU,CAACjF,MAAM,GAAG,CAAC,iBAClB5C,OAAA;UAAK0N,SAAS,EAAC,kBAAkB;UAACG,KAAK,EAAE;YAAEa,SAAS,EAAE;UAAO,CAAE;UAAArB,QAAA,gBAC3DrN,OAAA;YAAAqN,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzBzN,OAAA;YAAAqN,QAAA,EACKxF,UAAU,CAAC7F,GAAG,CAAC,CAACiE,SAAS,EAAEH,KAAK,kBAC7B9F,OAAA;cAAAqN,QAAA,GACKpH,SAAS,CAACH,KAAK,EAAC,IAAE,EAACG,SAAS,CAACV,IAAI,EAAC,IAAE,EAACU,SAAS,CAACF,QAAQ,EAAC,WAAS,EAACE,SAAS,CAACD,IAAI,EAAC,WACtF;YAAA,GAFSF,KAAK;cAAAwH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChH,GAAA,CAzlBQF,eAAe;AAAAoI,GAAA,GAAfpI,eAAe;AA2lBxB,eAAeA,eAAe;AAAC,IAAApE,EAAA,EAAAmE,GAAA,EAAAqI,GAAA;AAAAC,YAAA,CAAAzM,EAAA;AAAAyM,YAAA,CAAAtI,GAAA;AAAAsI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}