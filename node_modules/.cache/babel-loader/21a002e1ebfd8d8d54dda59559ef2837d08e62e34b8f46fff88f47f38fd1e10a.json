{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusTracking2.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api from '../../utils/api.js';\nimport '../../css/busTracking.css';\n\n// Custom bus icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// User location icon\nconst userIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // File in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Configure OSRM routing to load faster\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 10 * 1000; // 10 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to handle routing between points\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Configure routing machine when component mounts\n    configureRoutingMachine();\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    // Clear previous routing if it exists and ensure it is attached to the map\n    if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n      map.removeControl(routingControlRef.current);\n      routingControlRef.current = null;\n    }\n    try {\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{\n            color,\n            opacity: 0.7,\n            weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        createMarker: () => null,\n        // No markers from routing\n        serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n      });\n\n      // Add listeners to handle loading state\n      routingControl.on('routesfound', () => {\n        setTimeout(() => setIsPathLoading(false), 300); // Short delay to ensure UI is updated\n      });\n      routingControl.on('routingerror', () => {\n        console.warn(\"Routing error occurred\");\n        setIsPathLoading(false);\n      });\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n\n      // Add a timeout in case routing takes too long\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n      }, 10000); // 10 second timeout\n\n      return () => {\n        clearTimeout(timeout);\n        // Cleanup: remove the control if it exists on the map\n        if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n          map.removeControl(routingControlRef.current);\n        }\n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n  return null;\n};\n\n// Component to recenter map when needed\n_s(RoutingControl, \"6JzDAggtQ4Wk6OozRhYG+mU/G1E=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapViewController = ({\n  center,\n  zoom,\n  busLocation\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center && zoom) {\n      map.setView(center, zoom);\n    } else if (busLocation) {\n      map.setView(busLocation, map.getZoom());\n    }\n  }, [map, center, zoom, busLocation]);\n  return null;\n};\n\n// Custom location control component\n_s2(MapViewController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapViewController;\nconst LocationButton = ({\n  setUserLocation\n}) => {\n  _s3();\n  const map = useMap();\n  const handleLocationRequest = () => {\n    map.locate({\n      setView: true,\n      maxZoom: 16\n    });\n  };\n  useEffect(() => {\n    map.on('locationfound', e => {\n      setUserLocation([e.latlng.lat, e.latlng.lng]);\n      map.flyTo(e.latlng, 16);\n    });\n    map.on('locationerror', e => {\n      console.error(\"Location error:\", e.message);\n      alert(\"Unable to find your location. Please check your device settings.\");\n    });\n    return () => {\n      map.off('locationfound');\n      map.off('locationerror');\n    };\n  }, [map, setUserLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-control\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLocationRequest,\n      title: \"Show my location\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-location-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 9\n  }, this);\n};\n_s3(LocationButton, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c3 = LocationButton;\nconst BusTracking = ({\n  userLocation,\n  setUserLocation,\n  selectedBusId\n}) => {\n  _s4();\n  const [buses, setBuses] = useState([]);\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [busLocation, setBusLocation] = useState(null);\n  const [busStops, setBusStops] = useState([]);\n  const [nextStop, setNextStop] = useState(null);\n  const [currentStop, setCurrentStop] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [busInfo, setBusInfo] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to IIT KGP\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const intervalRef = useRef(null);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n\n  // Fetch list of buses on mount\n  useEffect(() => {\n    fetchBuses();\n  }, []);\n\n  // Clean up interval on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  // React to selectedBusId change\n  useEffect(() => {\n    if (selectedBusId) {\n      const bus = buses.find(b => b.id === selectedBusId);\n      if (bus) {\n        setSelectedBus(bus);\n      } else {\n        // If bus not found in cached list, fetch it specifically\n        fetchBusById(selectedBusId);\n      }\n    }\n  }, [selectedBusId, buses]);\n\n  // Fetch bus data when selection changes\n  useEffect(() => {\n    if (selectedBus) {\n      fetchBusData(selectedBus.id);\n      setIsInitialLoad(false);\n      intervalRef.current = setInterval(() => {\n        fetchBusData(selectedBus.id, false);\n      }, 15000); // Refresh every 15 seconds\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [selectedBus]);\n  const fetchBuses = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/buses/getAllBuses');\n      if (response.data && response.data.data) {\n        setBuses(response.data.data);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n      setError('Failed to load buses. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const fetchBusById = async busId => {\n    try {\n      setLoading(true);\n      const response = await api.get(`/buses/${busId}/info`);\n      if (response.data && response.data.data) {\n        // Create a minified bus object with just what we need\n        const bus = {\n          id: busId,\n          name: response.data.data.name || `Bus ${busId}`\n        };\n        setSelectedBus(bus);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching bus by ID:', err);\n      setError('Failed to load bus details. Please try again.');\n      setLoading(false);\n    }\n  };\n  const fetchBusData = async (busId, showLoading = true) => {\n    try {\n      if (showLoading) setLoading(true);\n      setError(null);\n\n      // Fetch bus location remains the same\n      const locationResponse = await api.get(`/buses/${busId}/location`);\n      if (locationResponse.data && locationResponse.data.data) {\n        const location = locationResponse.data.data;\n        setBusLocation([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        setLastUpdated(new Date(location.timestamp));\n        if (isInitialLoad || !busLocation) {\n          setMapCenter([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        }\n      } else {\n        setBusLocation(null);\n      }\n\n      // Now fetch the route with stops using the new endpoint\n      const routeResponse = await api.get(`/abusroute/${busId}/route-with-stops`);\n      if (routeResponse.data && routeResponse.data.data) {\n        const routeData = routeResponse.data.data;\n\n        // Ensure each stop has estimated_time property\n        const stops = routeData.stops.map(stop => {\n          // If the API already provides time information, keep it\n          if (stop.estimated_time !== undefined) {\n            return stop;\n          }\n\n          // If next stop has estimated arrival from busInfo, use that for the next stop\n          if (routeData.nextStop && routeData.nextStop.id === stop.id && busInfo && busInfo.estimatedArrival) {\n            return {\n              ...stop,\n              estimated_time: busInfo.estimatedArrival + ' min'\n            };\n          }\n\n          // For other stops, calculate an estimated time based on stop order if possible\n          // This is a placeholder - your backend should ideally provide this data\n          return stop;\n        });\n        setBusStops(stops);\n        if (routeData.currentStop) setCurrentStop(routeData.currentStop);\n        if (routeData.nextStop) setNextStop(routeData.nextStop);\n      }\n\n      // Fetch bus info remains the same\n      const infoResponse = await api.get(`/buses/${busId}/info`);\n      if (infoResponse.data && infoResponse.data.data) {\n        setBusInfo(infoResponse.data.data);\n      }\n      if (showLoading) setLoading(false);\n    } catch (err) {\n      console.error('Error fetching bus data:', err);\n      setError('Failed to load bus data. Please try again.');\n      if (showLoading) setLoading(false);\n    }\n  };\n\n  // Prepare polyline coordinates for stops\n  const getPolylineCoordinates = () => {\n    if (!busStops || busStops.length === 0) return null;\n    // Ensure stops are sorted by stop_order\n    const sortedStops = [...busStops].sort((a, b) => a.stop_order - b.stop_order);\n    return sortedStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n  };\n\n  // Create cleared and remaining routes\n  const getRoutePolylines = () => {\n    if (!busStops || busStops.length === 0) return {\n      cleared: null,\n      remaining: null\n    };\n    const sortedStops = [...busStops].sort((a, b) => a.stop_order - b.stop_order);\n    const clearedStops = sortedStops.filter(stop => stop.cleared);\n    const remainingStops = sortedStops.filter(stop => !stop.cleared);\n\n    // For remaining route, if there are cleared stops, include the last cleared stop as starting point\n    let remainingPoints = remainingStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n    if (clearedStops.length > 0 && remainingPoints.length > 0) {\n      const lastCleared = clearedStops[clearedStops.length - 1];\n      remainingPoints = [[parseFloat(lastCleared.latitude), parseFloat(lastCleared.longitude)], ...remainingPoints];\n    }\n    const clearedPoints = clearedStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n    return {\n      cleared: clearedPoints.length > 1 ? clearedPoints : null,\n      remaining: remainingPoints.length > 1 ? remainingPoints : null\n    };\n  };\n  const {\n    cleared,\n    remaining\n  } = getRoutePolylines();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-tracking\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading routes. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bus-info-header\",\n      children: [selectedBus && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Tracking \", selectedBus.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 25\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loading-indicator\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 37\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true), !selectedBus && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bus Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-info-panel\",\n      children: [selectedBus && busStops.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-stop-order\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Route Order\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [...busStops].sort((a, b) => a.stop_order - b.stop_order).map(stop => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              color: stop.cleared ? '#00ff00' : '#0000ff'\n            },\n            children: [stop.stop_order, \". \", stop.name, stop.estimated_time && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stop-time\",\n              children: [\" - \", stop.estimated_time]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 45\n            }, this)]\n          }, stop.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this), selectedBus && !busLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-bus-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedBus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-status not-active\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This bus is currently not in service.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-bus-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedBus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-status active\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 32\n            }, this), \" Active\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last Updated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 32\n            }, this), \" \", lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 29\n          }, this), busInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Driver:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 40\n              }, this), \" \", busInfo.driverName || 'Not assigned']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 37\n            }, this), currentStop && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Stop:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 448,\n                columnNumber: 56\n              }, this), \" \", currentStop.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 53\n            }, this), nextStop && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Next Stop:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 451,\n                  columnNumber: 48\n                }, this), \" \", nextStop.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 45\n              }, this), busInfo.estimatedArrival && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"ETA:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 52\n                }, this), \" \", busInfo.estimatedArrival, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: userLocation || [22.3190, 87.3091],\n        zoom: 15,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocationButton, {\n          setUserLocation: setUserLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 25\n        }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(MapViewController, {\n          center: mapCenter,\n          busLocation: busLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 25\n        }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: busLocation,\n          icon: busIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bus-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedBus.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 37\n              }, this), busInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Driver:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 48\n                  }, this), \" \", busInfo.driverName || 'Not assigned']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Last Updated:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 48\n                  }, this), \" \", lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 491,\n                  columnNumber: 45\n                }, this), busInfo.estimatedArrival && nextStop && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"ETA to \", nextStop.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 52\n                  }, this), \" \", busInfo.estimatedArrival, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 25\n        }, this), selectedBus && busStops.length > 0 && busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n          icon: busStopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stop-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Stop Order: \", stop.stop_order]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"estimated_time: \", stop.estimated_time]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 33\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 29\n        }, this)), selectedBus && busStops.length > 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [...busStops].sort((a, b) => a.stop_order - b.stop_order).map((stop, idx, arr) => {\n            if (idx < arr.length - 1) {\n              return /*#__PURE__*/_jsxDEV(RoutingControl, {\n                startPoint: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n                endPoint: [parseFloat(arr[idx + 1].latitude), parseFloat(arr[idx + 1].longitude)],\n                color: \"#3388ff\",\n                weight: 4,\n                setIsPathLoading: setIsPathLoading\n              }, `${stop.id}-${arr[idx + 1].id}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 45\n              }, this);\n            }\n            return null;\n          })\n        }, void 0, false), selectedBus && userLocation && nextStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: userLocation,\n          endPoint: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)],\n          color: \"#ff6b6b\",\n          weight: 3,\n          setIsPathLoading: setIsPathLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 17\n      }, this), selectedBus && busLocation && nextStop && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#3388ff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bus Route to Next Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#ff6b6b'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your Path to Next Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#00ff00'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Cleared Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 565,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#0000ff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Remaining Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 571,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 21\n      }, this), !selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-instructions-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No bus selected. Please select a bus to track from the available buses list.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 9\n  }, this);\n};\n_s4(BusTracking, \"uiOpVEYOp2z0xaIoSkTgR5gWQQQ=\");\n_c4 = BusTracking;\nexport default BusTracking;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapViewController\");\n$RefreshReg$(_c3, \"LocationButton\");\n$RefreshReg$(_c4, \"BusTracking\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMap","Polyline","L","api","jsxDEV","_jsxDEV","Fragment","_Fragment","busIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","busStopIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","_s","map","routingControlRef","current","hasLayer","removeControl","routingControl","control","waypoints","latLng","routeWhileDragging","showAlternatives","addWaypoints","fitSelectedRoutes","show","lineOptions","styles","opacity","extendToWaypoints","missingRouteTolerance","createMarker","serviceUrl","on","setTimeout","addTo","clearTimeout","error","_c","MapViewController","center","zoom","busLocation","_s2","setView","getZoom","_c2","LocationButton","setUserLocation","_s3","handleLocationRequest","locate","maxZoom","latlng","lat","lng","flyTo","message","alert","off","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c3","BusTracking","userLocation","selectedBusId","_s4","buses","setBuses","selectedBus","setSelectedBus","setBusLocation","busStops","setBusStops","nextStop","setNextStop","currentStop","setCurrentStop","loading","setLoading","setError","lastUpdated","setLastUpdated","busInfo","setBusInfo","mapCenter","setMapCenter","isInitialLoad","setIsInitialLoad","intervalRef","isPathLoading","fetchBuses","clearInterval","bus","find","b","id","fetchBusById","fetchBusData","setInterval","response","get","data","err","busId","name","showLoading","locationResponse","location","parseFloat","latitude","longitude","Date","timestamp","routeResponse","routeData","stops","stop","estimated_time","undefined","estimatedArrival","infoResponse","getPolylineCoordinates","length","sortedStops","sort","a","stop_order","getRoutePolylines","cleared","remaining","clearedStops","filter","remainingStops","remainingPoints","lastCleared","clearedPoints","style","toLocaleTimeString","driverName","height","width","attribution","url","position","icon","idx","arr","backgroundColor","_c4","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusTracking2.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api from '../../utils/api.js';\nimport '../../css/busTracking.css';\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 16],\n    popupAnchor: [0, -16]\n});\n\n// User location icon\nconst userIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // File in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// Configure OSRM routing to load faster\nfunction configureRoutingMachine() {\n    if (typeof L !== 'undefined' && L.Routing) {\n        // Modify the global routing options\n        L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n        L.Routing.timeout = 10 * 1000; // 10 seconds timeout\n\n        // Override the error handling globally\n        if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n            L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n                console.warn(\"Handled routing error:\", e);\n                // No UI updates or errors thrown\n            };\n        }\n\n        // Fix issues with the layer removal\n        if (L.Routing.Line && L.Routing.Line.prototype) {\n            const originalClearLines = L.Routing.Line.prototype._clearLines;\n            L.Routing.Line.prototype._clearLines = function () {\n                try {\n                    // Safety check before calling the original function\n                    if (this._map && this._route && this._route._layers) {\n                        originalClearLines.call(this);\n                    }\n                } catch (e) {\n                    console.warn(\"Protected from _clearLines error:\", e);\n                    // Manual cleanup as fallback\n                    if (this._map && this._route) {\n                        try {\n                            this._map.removeLayer(this._route);\n                        } catch (e) {\n                            console.warn(\"Also failed with manual cleanup:\", e);\n                        }\n                    }\n                }\n            };\n        }\n    }\n}\n\n// Component to handle routing between points\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading }) => {\n    const map = useMap();\n    const routingControlRef = useRef(null);\n\n    useEffect(() => {\n        if (!startPoint || !endPoint) return;\n\n        // Configure routing machine when component mounts\n        configureRoutingMachine();\n\n        // Indicate loading has started\n        setIsPathLoading(true);\n\n        // Clear previous routing if it exists and ensure it is attached to the map\n        if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n            map.removeControl(routingControlRef.current);\n            routingControlRef.current = null;\n        }\n\n        try {\n            const routingControl = L.Routing.control({\n                waypoints: [\n                    L.latLng(startPoint[0], startPoint[1]),\n                    L.latLng(endPoint[0], endPoint[1])\n                ],\n                routeWhileDragging: false,\n                showAlternatives: false,\n                addWaypoints: false,\n                fitSelectedRoutes: false,\n                show: false,\n                lineOptions: {\n                    styles: [{ color, opacity: 0.7, weight }],\n                    extendToWaypoints: true,\n                    missingRouteTolerance: 0\n                },\n                createMarker: () => null, // No markers from routing\n                serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n            });\n\n            // Add listeners to handle loading state\n            routingControl.on('routesfound', () => {\n                setTimeout(() => setIsPathLoading(false), 300); // Short delay to ensure UI is updated\n            });\n\n            routingControl.on('routingerror', () => {\n                console.warn(\"Routing error occurred\");\n                setIsPathLoading(false);\n            });\n\n            routingControl.addTo(map);\n            routingControlRef.current = routingControl;\n\n            // Add a timeout in case routing takes too long\n            const timeout = setTimeout(() => {\n                setIsPathLoading(false);\n            }, 10000); // 10 second timeout\n\n            return () => {\n                clearTimeout(timeout);\n                // Cleanup: remove the control if it exists on the map\n                if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n                    map.removeControl(routingControlRef.current);\n                }\n                setIsPathLoading(false);\n            };\n        } catch (error) {\n            console.error(\"Error setting up routing:\", error);\n            setIsPathLoading(false);\n        }\n    }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n\n    return null;\n};\n\n// Component to recenter map when needed\nconst MapViewController = ({ center, zoom, busLocation }) => {\n    const map = useMap();\n\n    useEffect(() => {\n        if (center && zoom) {\n            map.setView(center, zoom);\n        } else if (busLocation) {\n            map.setView(busLocation, map.getZoom());\n        }\n    }, [map, center, zoom, busLocation]);\n\n    return null;\n};\n\n// Custom location control component\nconst LocationButton = ({ setUserLocation }) => {\n    const map = useMap();\n\n    const handleLocationRequest = () => {\n        map.locate({ setView: true, maxZoom: 16 });\n    };\n\n    useEffect(() => {\n        map.on('locationfound', (e) => {\n            setUserLocation([e.latlng.lat, e.latlng.lng]);\n            map.flyTo(e.latlng, 16);\n        });\n\n        map.on('locationerror', (e) => {\n            console.error(\"Location error:\", e.message);\n            alert(\"Unable to find your location. Please check your device settings.\");\n        });\n\n        return () => {\n            map.off('locationfound');\n            map.off('locationerror');\n        };\n    }, [map, setUserLocation]);\n\n    return (\n        <div className=\"location-control\">\n            <button onClick={handleLocationRequest} title=\"Show my location\">\n                <i className=\"fas fa-location-arrow\"></i>\n            </button>\n        </div>\n    );\n};\n\nconst BusTracking = ({ userLocation, setUserLocation, selectedBusId }) => {\n    const [buses, setBuses] = useState([]);\n    const [selectedBus, setSelectedBus] = useState(null);\n    const [busLocation, setBusLocation] = useState(null);\n    const [busStops, setBusStops] = useState([]);\n    const [nextStop, setNextStop] = useState(null);\n    const [currentStop, setCurrentStop] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [lastUpdated, setLastUpdated] = useState(null);\n    const [busInfo, setBusInfo] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to IIT KGP\n    const [isInitialLoad, setIsInitialLoad] = useState(true);\n    const intervalRef = useRef(null);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n\n    // Fetch list of buses on mount\n    useEffect(() => {\n        fetchBuses();\n    }, []);\n\n    // Clean up interval on unmount\n    useEffect(() => {\n        return () => {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, []);\n\n    // React to selectedBusId change\n    useEffect(() => {\n        if (selectedBusId) {\n            const bus = buses.find(b => b.id === selectedBusId);\n            if (bus) {\n                setSelectedBus(bus);\n            } else {\n                // If bus not found in cached list, fetch it specifically\n                fetchBusById(selectedBusId);\n            }\n        }\n    }, [selectedBusId, buses]);\n\n    // Fetch bus data when selection changes\n    useEffect(() => {\n        if (selectedBus) {\n            fetchBusData(selectedBus.id);\n            setIsInitialLoad(false);\n            intervalRef.current = setInterval(() => {\n                fetchBusData(selectedBus.id, false);\n            }, 15000); // Refresh every 15 seconds\n        } else {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        }\n        return () => {\n            if (intervalRef.current) {\n                clearInterval(intervalRef.current);\n            }\n        };\n    }, [selectedBus]);\n\n    const fetchBuses = async () => {\n        try {\n            setLoading(true);\n            const response = await api.get('/buses/getAllBuses');\n            if (response.data && response.data.data) {\n                setBuses(response.data.data);\n            }\n            setLoading(false);\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n            setError('Failed to load buses. Please try again later.');\n            setLoading(false);\n        }\n    };\n\n    const fetchBusById = async (busId) => {\n        try {\n            setLoading(true);\n            const response = await api.get(`/buses/${busId}/info`);\n            if (response.data && response.data.data) {\n                // Create a minified bus object with just what we need\n                const bus = {\n                    id: busId,\n                    name: response.data.data.name || `Bus ${busId}`\n                };\n                setSelectedBus(bus);\n            }\n            setLoading(false);\n        } catch (err) {\n            console.error('Error fetching bus by ID:', err);\n            setError('Failed to load bus details. Please try again.');\n            setLoading(false);\n        }\n    };\n\n    const fetchBusData = async (busId, showLoading = true) => {\n        try {\n            if (showLoading) setLoading(true);\n            setError(null);\n\n            // Fetch bus location remains the same\n            const locationResponse = await api.get(`/buses/${busId}/location`);\n            if (locationResponse.data && locationResponse.data.data) {\n                const location = locationResponse.data.data;\n                setBusLocation([parseFloat(location.latitude), parseFloat(location.longitude)]);\n                setLastUpdated(new Date(location.timestamp));\n                if (isInitialLoad || !busLocation) {\n                    setMapCenter([parseFloat(location.latitude), parseFloat(location.longitude)]);\n                }\n            } else {\n                setBusLocation(null);\n            }\n\n            // Now fetch the route with stops using the new endpoint\n            const routeResponse = await api.get(`/abusroute/${busId}/route-with-stops`);\n            if (routeResponse.data && routeResponse.data.data) {\n                const routeData = routeResponse.data.data;\n\n                // Ensure each stop has estimated_time property\n                const stops = routeData.stops.map(stop => {\n                    // If the API already provides time information, keep it\n                    if (stop.estimated_time !== undefined) {\n                        return stop;\n                    }\n\n                    // If next stop has estimated arrival from busInfo, use that for the next stop\n                    if (routeData.nextStop && routeData.nextStop.id === stop.id &&\n                        busInfo && busInfo.estimatedArrival) {\n                        return { ...stop, estimated_time: busInfo.estimatedArrival + ' min' };\n                    }\n\n                    // For other stops, calculate an estimated time based on stop order if possible\n                    // This is a placeholder - your backend should ideally provide this data\n                    return stop;\n                });\n\n                setBusStops(stops);\n                if (routeData.currentStop) setCurrentStop(routeData.currentStop);\n                if (routeData.nextStop) setNextStop(routeData.nextStop);\n            }\n\n            // Fetch bus info remains the same\n            const infoResponse = await api.get(`/buses/${busId}/info`);\n            if (infoResponse.data && infoResponse.data.data) {\n                setBusInfo(infoResponse.data.data);\n            }\n\n            if (showLoading) setLoading(false);\n        } catch (err) {\n            console.error('Error fetching bus data:', err);\n            setError('Failed to load bus data. Please try again.');\n            if (showLoading) setLoading(false);\n        }\n    };\n\n    // Prepare polyline coordinates for stops\n    const getPolylineCoordinates = () => {\n        if (!busStops || busStops.length === 0) return null;\n        // Ensure stops are sorted by stop_order\n        const sortedStops = [...busStops].sort((a, b) => a.stop_order - b.stop_order);\n        return sortedStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n    };\n\n    // Create cleared and remaining routes\n    const getRoutePolylines = () => {\n        if (!busStops || busStops.length === 0) return { cleared: null, remaining: null };\n        const sortedStops = [...busStops].sort((a, b) => a.stop_order - b.stop_order);\n        const clearedStops = sortedStops.filter(stop => stop.cleared);\n        const remainingStops = sortedStops.filter(stop => !stop.cleared);\n\n        // For remaining route, if there are cleared stops, include the last cleared stop as starting point\n        let remainingPoints = remainingStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n        if (clearedStops.length > 0 && remainingPoints.length > 0) {\n            const lastCleared = clearedStops[clearedStops.length - 1];\n            remainingPoints = [[parseFloat(lastCleared.latitude), parseFloat(lastCleared.longitude)], ...remainingPoints];\n        }\n\n        const clearedPoints = clearedStops.map(stop => [parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n\n        return {\n            cleared: clearedPoints.length > 1 ? clearedPoints : null,\n            remaining: remainingPoints.length > 1 ? remainingPoints : null\n        };\n    };\n\n    const { cleared, remaining } = getRoutePolylines();\n\n    return (\n        <div className=\"bus-tracking\">\n            {/* Full-page loading overlay for OSRM loading */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Loading routes. Please wait...</div>\n                </div>\n            )}\n\n            <div className=\"bus-info-header\">\n                {selectedBus && (\n                    <>\n                        <h2>Tracking {selectedBus.name}</h2>\n                        {loading && <span className=\"loading-indicator\">Loading...</span>}\n                        {error && <div className=\"error-message\">{error}</div>}\n                    </>\n                )}\n                {!selectedBus && <h2>Bus Tracking</h2>}\n            </div>\n\n            <div className=\"route-info-panel\">\n                {/* Display route order with colored text for cleared (green) and remaining (blue) stops */}\n                {selectedBus && busStops.length > 0 && (\n                    <div className=\"bus-stop-order\">\n                        <h4>Route Order</h4>\n                        <ul>\n                            {[...busStops]\n                                .sort((a, b) => a.stop_order - b.stop_order)\n                                .map(stop => (\n                                    <li key={stop.id} style={{ color: stop.cleared ? '#00ff00' : '#0000ff' }}>\n                                        {stop.stop_order}. {stop.name}\n                                        {stop.estimated_time && (\n                                            <span className=\"stop-time\"> - {stop.estimated_time}</span>\n                                        )}\n                                    </li>\n                                ))\n                            }\n                        </ul>\n                    </div>\n                )}\n\n                {selectedBus && !busLocation && (\n                    <div className=\"selected-bus-info\">\n                        <h4>{selectedBus.name}</h4>\n                        <div className=\"bus-status not-active\">\n                            <p>This bus is currently not in service.</p>\n                        </div>\n                    </div>\n                )}\n                \n                {selectedBus && busLocation && (\n                    <div className=\"selected-bus-info\">\n                        <h4>{selectedBus.name}</h4>\n                        <div className=\"bus-status active\">\n                            <p><strong>Status:</strong> Active</p>\n                            <p><strong>Last Updated:</strong> {lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A'}</p>\n                            {busInfo && (\n                                <>\n                                    <p><strong>Driver:</strong> {busInfo.driverName || 'Not assigned'}</p>\n                                    {currentStop && <p><strong>Last Stop:</strong> {currentStop.name}</p>}\n                                    {nextStop && (\n                                        <>\n                                            <p><strong>Next Stop:</strong> {nextStop.name}</p>\n                                            {busInfo.estimatedArrival && (\n                                                <p><strong>ETA:</strong> {busInfo.estimatedArrival} min</p>\n                                            )}\n                                        </>\n                                    )}\n                                </>\n                            )}\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            <div className=\"map-container\">\n                <MapContainer\n                    center={userLocation || [22.3190, 87.3091]}\n                    zoom={15}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    <LocationButton setUserLocation={setUserLocation} />\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>Your location</Popup>\n                        </Marker>\n                    )}\n                    {(selectedBus && busLocation) && (\n                        <MapViewController center={mapCenter} busLocation={busLocation} />\n                    )}\n                    {(selectedBus && busLocation) && (\n                        <Marker position={busLocation} icon={busIcon}>\n                            <Popup>\n                                <div className=\"bus-popup\">\n                                    <h3>{selectedBus.name}</h3>\n                                    {busInfo && (\n                                        <>\n                                            <p><strong>Driver:</strong> {busInfo.driverName || 'Not assigned'}</p>\n                                            <p><strong>Last Updated:</strong> {lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A'}</p>\n                                            {busInfo.estimatedArrival && nextStop && (\n                                                <p><strong>ETA to {nextStop.name}:</strong> {busInfo.estimatedArrival} min</p>\n                                            )}\n                                        </>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n\n                    {/* Render markers for ALL bus stops */}\n                    {selectedBus && busStops.length > 0 && (\n                        busStops.map(stop => (\n                            <Marker key={stop.id} position={[parseFloat(stop.latitude), parseFloat(stop.longitude)]} icon={busStopIcon}>\n                                <Popup>\n                                    <div className=\"stop-popup\">\n                                        <h3>{stop.name}</h3>\n                                        <p>Stop Order: {stop.stop_order}</p>\n                                        <p>estimated_time: {stop.estimated_time}</p>\n                                    </div>\n                                </Popup>\n                            </Marker>\n                        ))\n                    )}\n\n                    {/* Render actual route lines between adjacent bus stops using RoutingControl */}\n                    {selectedBus && busStops.length > 1 && (\n                        <>\n                            {[...busStops]\n                                .sort((a, b) => a.stop_order - b.stop_order)\n                                .map((stop, idx, arr) => {\n                                    if (idx < arr.length - 1) {\n                                        return (\n                                            <RoutingControl\n                                                key={`${stop.id}-${arr[idx + 1].id}`}\n                                                startPoint={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n                                                endPoint={[parseFloat(arr[idx + 1].latitude), parseFloat(arr[idx + 1].longitude)]}\n                                                color=\"#3388ff\"\n                                                weight={4}\n                                                setIsPathLoading={setIsPathLoading}\n                                            />\n                                        );\n                                    }\n                                    return null;\n                                })}\n                        </>\n                    )}\n\n                    {/* Route from user to next stop */}\n                    {(selectedBus && userLocation && nextStop) && (\n                        <RoutingControl\n                            startPoint={userLocation}\n                            endPoint={[parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]}\n                            color=\"#ff6b6b\"\n                            weight={3}\n                            setIsPathLoading={setIsPathLoading}\n                        />\n                    )}\n\n                </MapContainer>\n\n                {(selectedBus && busLocation && nextStop) && (\n                    <div className=\"map-legend\">\n                        <div className=\"legend-item\">\n                            <div className=\"legend-icon\" style={{ backgroundColor: '#3388ff' }}></div>\n                            <span>Bus Route to Next Stop</span>\n                        </div>\n                        {userLocation && (\n                            <div className=\"legend-item\">\n                                <div className=\"legend-icon\" style={{ backgroundColor: '#ff6b6b' }}></div>\n                                <span>Your Path to Next Stop</span>\n                            </div>\n                        )}\n                        <div className=\"legend-item\">\n                            <div className=\"legend-icon\" style={{ backgroundColor: '#00ff00' }}></div>\n                            <span>Cleared Stops</span>\n                        </div>\n                        <div className=\"legend-item\">\n                            <div className=\"legend-icon\" style={{ backgroundColor: '#0000ff' }}></div>\n                            <span>Remaining Stops</span>\n                        </div>\n                    </div>\n                )}\n                {!selectedBus && (\n                    <div className=\"map-instructions-overlay\">\n                        <p>No bus selected. Please select a bus to track from the available buses list.</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default BusTracking;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}