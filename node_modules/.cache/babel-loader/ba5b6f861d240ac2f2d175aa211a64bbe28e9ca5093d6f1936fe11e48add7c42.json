{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options - increased timeout like in RouteManagement.js\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 30 * 1000; // 30 seconds timeout - increased from 15s to match RouteManagement.js\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n\n    // Add global routing control tracker similar to RouteManagement.js approach\n    if (!window.L.Routing._routingControls) {\n      window.L.Routing._routingControls = [];\n    }\n  }\n}\n\n// Component to handle routing between points - Improved with approach from RouteManagement.js\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const routeLayerRef = useRef(null);\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Configure routing machine when component mounts\n    configureRoutingMachine();\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    // Clean up function to handle all cleanup tasks\n    const cleanup = () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = null;\n      }\n\n      // Proper cleanup for routing control\n      if (routingControlRef.current) {\n        try {\n          // Remove from global tracking if it exists\n          if (window.L.Routing._routingControls) {\n            const idx = window.L.Routing._routingControls.indexOf(routingControlRef.current);\n            if (idx >= 0) window.L.Routing._routingControls.splice(idx, 1);\n          }\n\n          // Check if this is a routing control\n          if (map.hasLayer(routingControlRef.current)) {\n            map.removeControl(routingControlRef.current);\n          }\n        } catch (err) {\n          console.warn(\"Error during route control cleanup:\", err);\n        }\n        routingControlRef.current = null;\n      }\n\n      // Clean up any route layers we've tracked\n      if (routeLayerRef.current && map.hasLayer(routeLayerRef.current)) {\n        try {\n          map.removeLayer(routeLayerRef.current);\n        } catch (err) {\n          console.warn(\"Error removing route layer:\", err);\n        }\n        routeLayerRef.current = null;\n      }\n\n      // Reset loading state\n      setIsPathLoading(false);\n    };\n\n    // First perform cleanup to remove any existing routes\n    cleanup();\n    try {\n      // Create a waypoints array with explicit L.latLng objects\n      const waypoints = [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])];\n\n      //console.log(\"Creating OSRM route with waypoints:\", waypoints);\n\n      const routingControl = L.Routing.control({\n        waypoints: waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{\n            color,\n            opacity: 0.7,\n            weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10 // Increased from 0 to 10 as in RouteManagement.js\n        },\n        createMarker: () => null,\n        // No markers from routing\n        serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n      });\n\n      // Add to global tracking\n      if (window.L.Routing._routingControls) {\n        window.L.Routing._routingControls.push(routingControl);\n      }\n\n      // Add listeners to handle loading state\n      routingControl.on('routesfound', e => {\n        //console.log(\"OSRM routes found:\", e);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n          timeoutRef.current = null;\n        }\n\n        // Try to store reference to the route layer\n        if (e.routes && e.routes.length > 0) {\n          // Keep reference to the actual route layer for easier cleanup\n          setTimeout(() => {\n            map.eachLayer(layer => {\n              if (layer._route && !routeLayerRef.current) {\n                routeLayerRef.current = layer;\n              }\n            });\n          }, 100);\n        }\n\n        // Add a longer delay before hiding the loading overlay\n        // This ensures routes are fully rendered before the overlay disappears\n        setTimeout(() => {\n          //console.log(\"Routes should be fully rendered now, hiding loading overlay\");\n          setIsPathLoading(false);\n        }, 3000); // Increased delay to 1.5 seconds to ensure routes are fully drawn\n      });\n      routingControl.on('routingerror', e => {\n        console.warn(\"Routing error occurred:\", e);\n        // Ensure loading overlay is hidden on error\n        setIsPathLoading(false);\n      });\n\n      // Store the reference for cleanup\n      routingControlRef.current = routingControl;\n\n      // Add to map - with delay to ensure proper initialization\n      setTimeout(() => {\n        try {\n          if (map && routingControlRef.current) {\n            routingControlRef.current.addTo(map);\n          }\n        } catch (err) {\n          console.error(\"Error adding routing control to map:\", err);\n          setIsPathLoading(false);\n        }\n      }, 100);\n\n      // Set timeout for OSRM - increased to match RouteManagement.js approach\n      timeoutRef.current = setTimeout(() => {\n        //console.log(\"OSRM routing timed out after 30 seconds\");\n        cleanup(); // Clean up routing control and stop loading\n      }, 30000); // Increased timeout to 30 seconds to match RouteManagement.js\n\n      return cleanup;\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      // Make sure loading state is reset if there's an error\n      setIsPathLoading(false);\n      return cleanup;\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"C9PgYoajZJ2ikYOJPBal3ktwHOQ=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Component to handle map clicks\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst MapClickHandler = ({\n  setCoordinates\n}) => {\n  _s3();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n    }\n  });\n  return null;\n};\n\n// Button to center on user's location\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n};\n_c4 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s4();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  // Initialize searchMarker with current coordinates or map center\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n\n  // New state variables for location search\n  const [locationQuery, setLocationQuery] = useState('');\n  const [locationSearching, setLocationSearching] = useState(false);\n  const [locationError, setLocationError] = useState(null);\n\n  // New state for multiple location search results\n  const [locationResults, setLocationResults] = useState([]);\n  const [showLocationResults, setShowLocationResults] = useState(false);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Function to clear any existing routes on the map - improved error handling and reliability\n  const clearExistingRoutes = () => {\n    var _mapRef$current;\n    // Access map instance\n    const map = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current._leaflet_map;\n    if (!map) return;\n\n    //console.log(\"Clearing all existing routes\");\n\n    try {\n      // First remove any OSRM routing control instances\n      // This must be done before removing layers to prevent null layer errors\n      if (map._container) {\n        // Remove routing containers from DOM which may cause null layer errors\n        const routingContainers = map._container.querySelectorAll('.leaflet-routing-container');\n        routingContainers.forEach(container => {\n          container.remove();\n        });\n      }\n\n      // Check for global routing controls and clean them up\n      if (window.L && window.L.Routing && window.L.Routing._routingControls) {\n        window.L.Routing._routingControls.forEach(control => {\n          try {\n            if (map.hasLayer(control)) {\n              map.removeControl(control);\n            }\n          } catch (err) {\n            console.warn(\"Error removing global routing control:\", err);\n          }\n        });\n        window.L.Routing._routingControls = [];\n      }\n\n      // Track which layers to remove to avoid modifying the collection during iteration\n      const layersToRemove = [];\n\n      // Identify all routing or polyline layers for removal\n      map.eachLayer(layer => {\n        try {\n          // More comprehensive check for routing layers and polylines\n          const isRoutingLayer = layer._route || layer._routing || layer instanceof L.Polyline || layer._leaflet_id && layer._path || layer.options && (layer.options.dashArray === '5, 10' || layer.options.color === \"#ff6b6b\" || layer._latlngs && Array.isArray(layer._latlngs));\n          if (isRoutingLayer) {\n            //console.log(\"Marking layer for removal:\", layer);\n            layersToRemove.push(layer);\n          }\n        } catch (err) {\n          // Catch and log errors during layer checking\n          console.warn(\"Error checking layer for removal:\", err);\n        }\n      });\n\n      // Remove identified layers in a separate step to avoid collection modification issues\n      layersToRemove.forEach(layer => {\n        try {\n          map.removeLayer(layer);\n        } catch (err) {\n          console.warn(\"Error removing layer:\", err);\n          // Try alternative removal for problematic layers\n          if (layer._container && layer._container.parentNode) {\n            layer._container.parentNode.removeChild(layer._container);\n          }\n        }\n      });\n    } catch (err) {\n      console.error(\"Error during route clearing:\", err);\n    } finally {\n      // Reset state regardless of success or failure\n      setSelectedStop(null);\n      setIsPathLoading(false);\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation); // Also update the search marker when user location changes\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      //console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      //console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      // The API returns { statusCode, data, message } structure\n      if (response.data && response.data.data) {\n        return response.data.data; // Return just the array of bus stops\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops - Fixed error handling\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n\n      // Clear any existing routes before continuing\n      clearExistingRoutes();\n      setError(null);\n      setSearchMarker([lat, lng]);\n\n      // Make sure busStops is an array before processing\n      if (!Array.isArray(busStops) || busStops.length === 0) {\n        setError(\"No bus stops data available\");\n        setSearchResults([]);\n        setHasSearched(true);\n        return;\n      }\n\n      // Calculate distance from specified point to all bus stops\n      const results = busStops.map(stop => {\n        // Skip invalid coordinates\n        if (stop === null || typeof stop !== 'object' || typeof stop.latitude !== 'number' || typeof stop.longitude !== 'number' || isNaN(stop.latitude) || isNaN(stop.longitude)) {\n          return null;\n        }\n\n        // Calculate distance in meters using Haversine formula\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      }).filter(stop => stop !== null); // Remove any null results\n\n      // Sort by distance (closest first)\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n\n      // Center map on search marker\n      setMapCenter([lat, lng]);\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search. Please try again.\");\n    }\n  };\n\n  // Handle click on search result item - Improved with better error handling\n  const handleStopSelect = stop => {\n    try {\n      //console.log(\"Stop selected:\", stop);\n\n      // First, explicitly call clearExistingRoutes to remove any existing routes\n      clearExistingRoutes();\n\n      // Show loading overlay immediately when a stop is selected\n      setIsPathLoading(true);\n\n      // Set the map center and zoom\n      setMapCenter([stop.latitude, stop.longitude]);\n      setZoom(15); // Slightly reduce zoom from 18 to show more context\n\n      // Delay adding the new route to ensure complete cleanup\n      setTimeout(() => {\n        try {\n          // Set the new selected stop\n          setSelectedStop(stop);\n\n          // Open the popup for this marker\n          const marker = markerRefs.current[stop.id];\n          if (marker) {\n            marker.openPopup();\n          }\n        } catch (err) {\n          console.error(\"Error setting selected stop:\", err);\n          // Make sure loading overlay is hidden if there's an error\n          setIsPathLoading(false);\n        }\n      }, 500); // Increased timeout for more reliable clearing\n    } catch (err) {\n      console.error(\"Error in handleStopSelect:\", err);\n      // Make sure loading overlay is hidden if there's an error\n      setIsPathLoading(false);\n    }\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    // Ensure all coordinates are valid numbers\n    if (isNaN(lat1) || isNaN(lon1) || isNaN(lat2) || isNaN(lon2)) {\n      return Infinity; // Return a very large distance for invalid coordinates\n    }\n    try {\n      const R = 6371e3; // Earth's radius in meters\n      const φ1 = lat1 * Math.PI / 180;\n      const φ2 = lat2 * Math.PI / 180;\n      const Δφ = (lat2 - lat1) * Math.PI / 180;\n      const Δλ = (lon2 - lon1) * Math.PI / 180;\n      const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      return R * c; // Distance in meters\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return Infinity; // Return a very large distance if calculation fails\n    }\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n\n  // Modified function to handle location search using Nominatim API\n  const handleLocationSearch = async () => {\n    if (!locationQuery.trim()) {\n      setLocationError(\"Please enter a location to search\");\n      return;\n    }\n    try {\n      setLocationSearching(true);\n      setLocationError(null);\n\n      // Clear any existing routes\n      clearExistingRoutes();\n\n      // Reset previous location results\n      setLocationResults([]);\n      setShowLocationResults(false);\n\n      // Use OpenStreetMap's Nominatim API for geocoding\n      const response = await axios.get(`https://nominatim.openstreetmap.org/search`, {\n        params: {\n          q: locationQuery,\n          format: 'json',\n          limit: 5,\n          // Increased limit to get multiple results\n          addressdetails: 1 // Get address details for better display\n        },\n        headers: {\n          'Accept-Language': 'en-US,en;q=0.9',\n          'User-Agent': 'KGP_Bus_Application' // Identify your application to the API\n        }\n      });\n\n      // Check if any results were found\n      if (response.data && response.data.length > 0) {\n        //console.log('Location search results:', response.data);\n\n        // Store all location results\n        setLocationResults(response.data);\n        setShowLocationResults(true);\n\n        // If only one result, select it automatically\n        if (response.data.length === 1) {\n          handleLocationSelect(response.data[0]);\n        }\n      } else {\n        setLocationError(\"No location found with that name. Try being more specific.\");\n      }\n    } catch (error) {\n      console.error(\"Error searching for location:\", error);\n      setLocationError(\"Failed to search location. Please try again later.\");\n    } finally {\n      setLocationSearching(false);\n    }\n  };\n\n  // New function to handle selection of a location result\n  const handleLocationSelect = location => {\n    const lat = parseFloat(location.lat);\n    const lng = parseFloat(location.lon);\n\n    // Update coordinates\n    setCoordinates({\n      latitude: lat.toFixed(6),\n      longitude: lng.toFixed(6)\n    });\n\n    // Update search marker\n    setSearchMarker([lat, lng]);\n\n    // Center map on the selected location\n    setMapCenter([lat, lng]);\n    setZoom(15);\n\n    // Hide location results after selection\n    setShowLocationResults(false);\n\n    //console.log(`Selected location: ${location.display_name} at ${lat}, ${lng}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please wait, routes are being fetched...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 709,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-search-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"location-search\",\n              children: \"Search by Location Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 720,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"search-input-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"location-search\",\n                className: \"form-control\",\n                placeholder: \"TATA Sports Complex\",\n                value: locationQuery,\n                onChange: e => setLocationQuery(e.target.value),\n                onKeyPress: e => e.key === 'Enter' && handleLocationSearch()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"location-search-btn\",\n                onClick: handleLocationSearch,\n                disabled: locationSearching,\n                children: locationSearching ? 'Searching...' : 'Find'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 29\n            }, this), locationError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error-message\",\n              children: locationError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 47\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"help-text\",\n              children: \"Enter a location name, address, or landmark to search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 29\n            }, this), showLocationResults && locationResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-results\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Select a location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"results-list\",\n                children: locationResults.map((location, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result-item location-result-item\",\n                  onClick: () => handleLocationSelect(location),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-index\",\n                    children: index + 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 753,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-details\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: location.name || location.display_name.split(',')[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 755,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"location-address\",\n                      children: location.display_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 756,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"coordinates\",\n                      children: [parseFloat(location.lat).toFixed(6), \", \", parseFloat(location.lon).toFixed(6)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 759,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 49\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 748,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 775,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 823,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 824,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 825,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 822,\n                columnNumber: 41\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 816,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 25\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: ref => {\n          // Store reference to the map for route clearing\n          if (ref) {\n            mapRef.current = {\n              _leaflet_map: ref\n            };\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker,\n          clearExistingRoutes: clearExistingRoutes,\n          setSelectedStop: setSelectedStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 861,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 67\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 25\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 69\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 25\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 897,\n                columnNumber: 65\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 899,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 25\n        }, this)), searchMarker && selectedStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: searchMarker,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading\n        }, `route-${selectedStop.id}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 927,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 926,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 843,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 704,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated component to handle map clicks and clear routes\n_s4(BusStopSearch, \"nl/nhvXfqzXh1FGhFDfYoI3ypkk=\");\n_c5 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker,\n  clearExistingRoutes,\n  setSelectedStop\n}) => {\n  _s5();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n\n      // Clear any existing routes before setting new coordinates\n      if (typeof clearExistingRoutes === 'function') {\n        clearExistingRoutes();\n      }\n\n      // Reset selected stop when clicking on a new location\n      if (typeof setSelectedStop === 'function') {\n        setSelectedStop(null);\n      }\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]); // Update marker immediately\n    }\n  });\n  return null;\n};\n_s5(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c6 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"LocationButton\");\n$RefreshReg$(_c5, \"BusStopSearch\");\n$RefreshReg$(_c6, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","axios","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","window","_routingControls","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","_s","map","routingControlRef","timeoutRef","routeLayerRef","cleanup","current","clearTimeout","idx","indexOf","splice","hasLayer","removeControl","err","waypoints","latLng","routingControl","control","routeWhileDragging","showAlternatives","addWaypoints","fitSelectedRoutes","show","lineOptions","styles","opacity","extendToWaypoints","missingRouteTolerance","createMarker","serviceUrl","push","on","routes","length","setTimeout","eachLayer","layer","addTo","error","_c","MapController","center","zoom","_s2","setView","getZoom","_c2","MapClickHandler","setCoordinates","_s3","click","lat","lng","latlng","latitude","toFixed","longitude","_c3","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","BusStopSearch","setUserLocation","_s4","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","coordinates","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","locationQuery","setLocationQuery","locationSearching","setLocationSearching","locationError","setLocationError","locationResults","setLocationResults","showLocationResults","setShowLocationResults","mapRef","markerRefs","registerMarker","id","markerRef","clearExistingRoutes","_mapRef$current","_leaflet_map","_container","routingContainers","querySelectorAll","forEach","container","remove","layersToRemove","isRoutingLayer","_routing","Polyline","_leaflet_id","_path","dashArray","_latlngs","Array","isArray","parentNode","removeChild","fetchBusStops","response","get","data","loadBusStops","busStopsArray","cleanedData","stop","parseFloat","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","results","distance","calculateDistance","filter","sortedResults","sort","a","b","handleStopSelect","marker","openPopup","lat1","lon1","lat2","lon2","Infinity","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","handleLocationSearch","trim","params","q","format","limit","addressdetails","headers","handleLocationSelect","location","lon","htmlFor","type","placeholder","onChange","onKeyPress","key","index","display_name","split","style","height","width","ref","attribution","url","MapEvents","position","icon","Date","now","random","toString","substr","_c5","_s5","_c6","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options - increased timeout like in RouteManagement.js\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 30 * 1000; // 30 seconds timeout - increased from 15s to match RouteManagement.js\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n    \n    // Add global routing control tracker similar to RouteManagement.js approach\n    if (!window.L.Routing._routingControls) {\n      window.L.Routing._routingControls = [];\n    }\n  }\n}\n\n// Component to handle routing between points - Improved with approach from RouteManagement.js\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading }) => {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const timeoutRef = useRef(null);\n  const routeLayerRef = useRef(null);\n\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Configure routing machine when component mounts\n    configureRoutingMachine();\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    // Clean up function to handle all cleanup tasks\n    const cleanup = () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n        timeoutRef.current = null;\n      }\n      \n      // Proper cleanup for routing control\n      if (routingControlRef.current) {\n        try {\n          // Remove from global tracking if it exists\n          if (window.L.Routing._routingControls) {\n            const idx = window.L.Routing._routingControls.indexOf(routingControlRef.current);\n            if (idx >= 0) window.L.Routing._routingControls.splice(idx, 1);\n          }\n          \n          // Check if this is a routing control\n          if (map.hasLayer(routingControlRef.current)) {\n            map.removeControl(routingControlRef.current);\n          }\n        } catch (err) {\n          console.warn(\"Error during route control cleanup:\", err);\n        }\n        routingControlRef.current = null;\n      }\n      \n      // Clean up any route layers we've tracked\n      if (routeLayerRef.current && map.hasLayer(routeLayerRef.current)) {\n        try {\n          map.removeLayer(routeLayerRef.current);\n        } catch (err) {\n          console.warn(\"Error removing route layer:\", err);\n        }\n        routeLayerRef.current = null;\n      }\n      \n      // Reset loading state\n      setIsPathLoading(false);\n    };\n\n    // First perform cleanup to remove any existing routes\n    cleanup();\n\n    try {\n      // Create a waypoints array with explicit L.latLng objects\n      const waypoints = [\n        L.latLng(startPoint[0], startPoint[1]),\n        L.latLng(endPoint[0], endPoint[1])\n      ];\n      \n      //console.log(\"Creating OSRM route with waypoints:\", waypoints);\n      \n      const routingControl = L.Routing.control({\n        waypoints: waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{ color, opacity: 0.7, weight }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10 // Increased from 0 to 10 as in RouteManagement.js\n        },\n        createMarker: () => null, // No markers from routing\n        serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n      });\n\n      // Add to global tracking\n      if (window.L.Routing._routingControls) {\n        window.L.Routing._routingControls.push(routingControl);\n      }\n\n      // Add listeners to handle loading state\n      routingControl.on('routesfound', (e) => {\n        //console.log(\"OSRM routes found:\", e);\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n          timeoutRef.current = null;\n        }\n        \n        // Try to store reference to the route layer\n        if (e.routes && e.routes.length > 0) {\n          // Keep reference to the actual route layer for easier cleanup\n          setTimeout(() => {\n            map.eachLayer(layer => {\n              if (layer._route && !routeLayerRef.current) {\n                routeLayerRef.current = layer;\n              }\n            });\n          }, 100);\n        }\n        \n        // Add a longer delay before hiding the loading overlay\n        // This ensures routes are fully rendered before the overlay disappears\n        setTimeout(() => {\n          //console.log(\"Routes should be fully rendered now, hiding loading overlay\");\n          setIsPathLoading(false);\n        }, 3000); // Increased delay to 1.5 seconds to ensure routes are fully drawn\n      });\n      \n      routingControl.on('routingerror', (e) => {\n        console.warn(\"Routing error occurred:\", e);\n        // Ensure loading overlay is hidden on error\n        setIsPathLoading(false);\n      });\n\n      // Store the reference for cleanup\n      routingControlRef.current = routingControl;\n      \n      // Add to map - with delay to ensure proper initialization\n      setTimeout(() => {\n        try {\n          if (map && routingControlRef.current) {\n            routingControlRef.current.addTo(map);\n          }\n        } catch (err) {\n          console.error(\"Error adding routing control to map:\", err);\n          setIsPathLoading(false);\n        }\n      }, 100);\n\n      // Set timeout for OSRM - increased to match RouteManagement.js approach\n      timeoutRef.current = setTimeout(() => {\n        //console.log(\"OSRM routing timed out after 30 seconds\");\n        cleanup(); // Clean up routing control and stop loading\n      }, 30000); // Increased timeout to 30 seconds to match RouteManagement.js\n\n      return cleanup;\n      \n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      // Make sure loading state is reset if there's an error\n      setIsPathLoading(false);\n      return cleanup;\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n\n  return null;\n};\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (center) {\n            map.setView(center, zoom || map.getZoom());\n        }\n    }, [map, center, zoom]);\n    \n    return null;\n};\n\n// Component to handle map clicks\nconst MapClickHandler = ({ setCoordinates }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n        }\n    });\n    \n    return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n    return (\n        <button \n            className=\"location-button\" \n            onClick={onClick}\n            disabled={!userLocation}\n            title=\"Center map on your location\"\n        >\n            <i className=\"fas fa-location-arrow\"></i> Your Current Location\n        </button>\n    );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n    const [busStops, setBusStops] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n    const [zoom, setZoom] = useState(15);\n    const [coordinates, setCoordinates] = useState({\n        latitude: '',\n        longitude: ''\n    });\n    // Initialize searchMarker with current coordinates or map center\n    const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n    const [selectedStop, setSelectedStop] = useState(null);\n    \n    // New state variables for location search\n    const [locationQuery, setLocationQuery] = useState('');\n    const [locationSearching, setLocationSearching] = useState(false);\n    const [locationError, setLocationError] = useState(null);\n    \n    // New state for multiple location search results\n    const [locationResults, setLocationResults] = useState([]);\n    const [showLocationResults, setShowLocationResults] = useState(false);\n    \n    const mapRef = useRef(null);\n    const markerRefs = useRef({});\n    \n    // Register marker references for later access\n    const registerMarker = (id, markerRef) => {\n        if (markerRef) {\n            markerRefs.current[id] = markerRef;\n        }\n    };\n\n    // Function to clear any existing routes on the map - improved error handling and reliability\n    const clearExistingRoutes = () => {\n        // Access map instance\n        const map = mapRef.current?._leaflet_map;\n        if (!map) return;\n        \n        //console.log(\"Clearing all existing routes\");\n        \n        try {\n            // First remove any OSRM routing control instances\n            // This must be done before removing layers to prevent null layer errors\n            if (map._container) {\n                // Remove routing containers from DOM which may cause null layer errors\n                const routingContainers = map._container.querySelectorAll('.leaflet-routing-container');\n                routingContainers.forEach(container => {\n                    container.remove();\n                });\n            }\n            \n            // Check for global routing controls and clean them up\n            if (window.L && window.L.Routing && window.L.Routing._routingControls) {\n                window.L.Routing._routingControls.forEach(control => {\n                    try {\n                        if (map.hasLayer(control)) {\n                            map.removeControl(control);\n                        }\n                    } catch (err) {\n                        console.warn(\"Error removing global routing control:\", err);\n                    }\n                });\n                window.L.Routing._routingControls = [];\n            }\n            \n            // Track which layers to remove to avoid modifying the collection during iteration\n            const layersToRemove = [];\n            \n            // Identify all routing or polyline layers for removal\n            map.eachLayer(layer => {\n                try {\n                    // More comprehensive check for routing layers and polylines\n                    const isRoutingLayer = \n                        layer._route || \n                        layer._routing ||\n                        (layer instanceof L.Polyline) ||\n                        (layer._leaflet_id && layer._path) || \n                        (layer.options && (\n                            layer.options.dashArray === '5, 10' || \n                            layer.options.color === \"#ff6b6b\" ||\n                            (layer._latlngs && Array.isArray(layer._latlngs))\n                        ));\n                        \n                    if (isRoutingLayer) {\n                        //console.log(\"Marking layer for removal:\", layer);\n                        layersToRemove.push(layer);\n                    }\n                } catch (err) {\n                    // Catch and log errors during layer checking\n                    console.warn(\"Error checking layer for removal:\", err);\n                }\n            });\n            \n            // Remove identified layers in a separate step to avoid collection modification issues\n            layersToRemove.forEach(layer => {\n                try {\n                    map.removeLayer(layer);\n                } catch (err) {\n                    console.warn(\"Error removing layer:\", err);\n                    // Try alternative removal for problematic layers\n                    if (layer._container && layer._container.parentNode) {\n                        layer._container.parentNode.removeChild(layer._container);\n                    }\n                }\n            });\n        } catch (err) {\n            console.error(\"Error during route clearing:\", err);\n        } finally {\n            // Reset state regardless of success or failure\n            setSelectedStop(null);\n            setIsPathLoading(false);\n        }\n    };\n\n    // Initialize coordinates with user's location as soon as it's available\n    useEffect(() => {\n        if (userLocation) {\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n            setMapCenter(userLocation);\n            setSearchMarker(userLocation); // Also update the search marker when user location changes\n        }\n    }, [userLocation]);\n    \n    // Fetch all bus stops directly from the database\n    const fetchBusStops = async () => {\n        try {\n            //console.log('Fetching bus stops from API');\n            const response = await api.get('/bus_stops/getAllBusStops');\n            //console.log('Raw API response:', response.data);\n            \n            // Extract the actual bus stops array from the response\n            // The API returns { statusCode, data, message } structure\n            if (response.data && response.data.data) {\n                return response.data.data; // Return just the array of bus stops\n            } else {\n                console.error('Invalid response format:', response.data);\n                return [];\n            }\n        } catch (error) {\n            console.error('Error fetching bus stops from database:', error);\n            throw error;\n        }\n    };\n    \n    // Load bus stops on component mount\n    useEffect(() => {\n        const loadBusStops = async () => {\n            try {\n                setLoading(true);\n                const data = await fetchBusStops();\n                \n                // Ensure data is an array before mapping\n                const busStopsArray = Array.isArray(data) ? data : [];\n                \n                // Clean and format the data\n                const cleanedData = busStopsArray.map(stop => ({\n                    ...stop,\n                    latitude: parseFloat(stop.latitude),\n                    longitude: parseFloat(stop.longitude)\n                }));\n                \n                setBusStops(cleanedData);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error loading bus stops:\", err);\n                setError(\"Failed to load bus stops. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadBusStops();\n    }, []);\n    \n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCoordinates(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    \n    // Center map on user location with maximum zoom\n    const handleCenterOnUser = () => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n            setZoom(19); // Maximum zoom\n\n            // Also update the coordinate inputs to match user location\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n        }\n    };\n    \n    // Function to search for nearby bus stops - Fixed error handling\n    const handleSearch = () => {\n        try {\n            const lat = parseFloat(coordinates.latitude);\n            const lng = parseFloat(coordinates.longitude);\n            \n            // Validate coordinates\n            if (isNaN(lat) || isNaN(lng) || \n                lat < -90 || lat > 90 || \n                lng < -180 || lng > 180) {\n                setError(\"Please enter valid coordinates\");\n                return;\n            }\n            \n            // Clear any existing routes before continuing\n            clearExistingRoutes();\n            \n            setError(null);\n            setSearchMarker([lat, lng]);\n            \n            // Make sure busStops is an array before processing\n            if (!Array.isArray(busStops) || busStops.length === 0) {\n                setError(\"No bus stops data available\");\n                setSearchResults([]);\n                setHasSearched(true);\n                return;\n            }\n            \n            // Calculate distance from specified point to all bus stops\n            const results = busStops.map(stop => {\n                // Skip invalid coordinates\n                if (stop === null || typeof stop !== 'object' || \n                    typeof stop.latitude !== 'number' || \n                    typeof stop.longitude !== 'number' || \n                    isNaN(stop.latitude) || isNaN(stop.longitude)) {\n                    return null;\n                }\n                \n                // Calculate distance in meters using Haversine formula\n                const distance = calculateDistance(\n                    lat, lng,\n                    stop.latitude, stop.longitude\n                );\n                \n                return {\n                    ...stop,\n                    distance: distance\n                };\n            }).filter(stop => stop !== null); // Remove any null results\n            \n            // Sort by distance (closest first)\n            const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n            setSearchResults(sortedResults);\n            setHasSearched(true);\n            \n            // Center map on search marker\n            setMapCenter([lat, lng]);\n            setZoom(16);\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            setError(\"An error occurred during search. Please try again.\");\n        }\n    };\n    \n    // Handle click on search result item - Improved with better error handling\n    const handleStopSelect = (stop) => {\n        try {\n            //console.log(\"Stop selected:\", stop);\n            \n            // First, explicitly call clearExistingRoutes to remove any existing routes\n            clearExistingRoutes();\n            \n            // Show loading overlay immediately when a stop is selected\n            setIsPathLoading(true);\n            \n            // Set the map center and zoom\n            setMapCenter([stop.latitude, stop.longitude]);\n            setZoom(15); // Slightly reduce zoom from 18 to show more context\n            \n            // Delay adding the new route to ensure complete cleanup\n            setTimeout(() => {\n                try {\n                    // Set the new selected stop\n                    setSelectedStop(stop);\n                    \n                    // Open the popup for this marker\n                    const marker = markerRefs.current[stop.id];\n                    if (marker) {\n                        marker.openPopup();\n                    }\n                } catch (err) {\n                    console.error(\"Error setting selected stop:\", err);\n                    // Make sure loading overlay is hidden if there's an error\n                    setIsPathLoading(false);\n                }\n            }, 500); // Increased timeout for more reliable clearing\n        } catch (err) {\n            console.error(\"Error in handleStopSelect:\", err);\n            // Make sure loading overlay is hidden if there's an error\n            setIsPathLoading(false);\n        }\n    };\n\n    // Calculate distance between two coordinates using Haversine formula\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        // Ensure all coordinates are valid numbers\n        if (isNaN(lat1) || isNaN(lon1) || isNaN(lat2) || isNaN(lon2)) {\n            return Infinity; // Return a very large distance for invalid coordinates\n        }\n        \n        try {\n            const R = 6371e3; // Earth's radius in meters\n            const φ1 = lat1 * Math.PI / 180;\n            const φ2 = lat2 * Math.PI / 180;\n            const Δφ = (lat2 - lat1) * Math.PI / 180;\n            const Δλ = (lon2 - lon1) * Math.PI / 180;\n            \n            const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n                    Math.cos(φ1) * Math.cos(φ2) *\n                    Math.sin(Δλ/2) * Math.sin(Δλ/2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n            \n            return R * c; // Distance in meters\n        } catch (error) {\n            console.error(\"Error calculating distance:\", error);\n            return Infinity; // Return a very large distance if calculation fails\n        }\n    };\n    \n    // Format distance for display\n    const formatDistance = (meters) => {\n        if (meters < 1000) {\n            return `${Math.round(meters)} meters`;\n        } else {\n            return `${(meters / 1000).toFixed(2)} km`;\n        }\n    };\n    \n    // Modified function to handle location search using Nominatim API\n    const handleLocationSearch = async () => {\n        if (!locationQuery.trim()) {\n            setLocationError(\"Please enter a location to search\");\n            return;\n        }\n        \n        try {\n            setLocationSearching(true);\n            setLocationError(null);\n            \n            // Clear any existing routes\n            clearExistingRoutes();\n            \n            // Reset previous location results\n            setLocationResults([]);\n            setShowLocationResults(false);\n            \n            // Use OpenStreetMap's Nominatim API for geocoding\n            const response = await axios.get(`https://nominatim.openstreetmap.org/search`, {\n                params: {\n                    q: locationQuery,\n                    format: 'json',\n                    limit: 5, // Increased limit to get multiple results\n                    addressdetails: 1 // Get address details for better display\n                },\n                headers: {\n                    'Accept-Language': 'en-US,en;q=0.9',\n                    'User-Agent': 'KGP_Bus_Application' // Identify your application to the API\n                }\n            });\n            \n            // Check if any results were found\n            if (response.data && response.data.length > 0) {\n                //console.log('Location search results:', response.data);\n                \n                // Store all location results\n                setLocationResults(response.data);\n                setShowLocationResults(true);\n                \n                // If only one result, select it automatically\n                if (response.data.length === 1) {\n                    handleLocationSelect(response.data[0]);\n                }\n            } else {\n                setLocationError(\"No location found with that name. Try being more specific.\");\n            }\n        } catch (error) {\n            console.error(\"Error searching for location:\", error);\n            setLocationError(\"Failed to search location. Please try again later.\");\n        } finally {\n            setLocationSearching(false);\n        }\n    };\n    \n    // New function to handle selection of a location result\n    const handleLocationSelect = (location) => {\n        const lat = parseFloat(location.lat);\n        const lng = parseFloat(location.lon);\n        \n        // Update coordinates\n        setCoordinates({\n            latitude: lat.toFixed(6),\n            longitude: lng.toFixed(6)\n        });\n        \n        // Update search marker\n        setSearchMarker([lat, lng]);\n        \n        // Center map on the selected location\n        setMapCenter([lat, lng]);\n        setZoom(15);\n        \n        // Hide location results after selection\n        setShowLocationResults(false);\n        \n        //console.log(`Selected location: ${location.display_name} at ${lat}, ${lng}`);\n    };\n\n    return (\n        <div className=\"bus-stop-search\">\n            {/* Enhanced full-page loading overlay for OSRM loading */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Please wait, routes are being fetched...</div>\n                </div>\n            )}\n            \n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Search Bus Stops</h2>\n                    \n                    {/* Location search box */}\n                    <div className=\"location-search-container\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"location-search\">Search by Location Name:</label>\n                            <div className=\"search-input-group\">\n                                <input\n                                    type=\"text\"\n                                    id=\"location-search\"\n                                    className=\"form-control\"\n                                    placeholder=\"TATA Sports Complex\"\n                                    value={locationQuery}\n                                    onChange={(e) => setLocationQuery(e.target.value)}\n                                    onKeyPress={(e) => e.key === 'Enter' && handleLocationSearch()}\n                                />\n                                <button \n                                    className=\"location-search-btn\"\n                                    onClick={handleLocationSearch}\n                                    disabled={locationSearching}\n                                >\n                                    {locationSearching ? 'Searching...' : 'Find'}\n                                </button>\n                            </div>\n                            {locationError && <div className=\"error-message\">{locationError}</div>}\n                            <p className=\"help-text\">Enter a location name, address, or landmark to search</p>\n                            \n                            {/* New location results display */}\n                            {showLocationResults && locationResults.length > 0 && (\n                                <div className=\"location-results\">\n                                    <h4>Select a location:</h4>\n                                    <div className=\"results-list\">\n                                        {locationResults.map((location, index) => (\n                                            <div \n                                                key={index} \n                                                className=\"result-item location-result-item\"\n                                                onClick={() => handleLocationSelect(location)}\n                                            >\n                                                <div className=\"result-index\">{index + 1}</div>\n                                                <div className=\"result-details\">\n                                                    <h4>{location.name || location.display_name.split(',')[0]}</h4>\n                                                    <p className=\"location-address\">\n                                                        {location.display_name}\n                                                    </p>\n                                                    <p className=\"coordinates\">\n                                                        {parseFloat(location.lat).toFixed(6)}, {parseFloat(location.lon).toFixed(6)}\n                                                    </p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    \n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"latitude\">Latitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"latitude\" \n                                name=\"latitude\" \n                                value={coordinates.latitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 22.3190\"\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"longitude\">Longitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"longitude\" \n                                name=\"longitude\" \n                                value={coordinates.longitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 87.3091\"\n                            />\n                        </div>\n                        \n                        <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n                        \n                        <button \n                            className=\"search-btn\"\n                            onClick={handleSearch}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"location-panel-bottom\">\n                    {hasSearched && searchResults.length > 0 && (\n                        <div className=\"search-results\">\n                            <h3>Nearest Bus Stops</h3>\n                            <div className=\"results-list\">\n                                {searchResults.map((stop, index) => (\n                                    <div \n                                        key={stop.id} \n                                        className=\"result-item\"\n                                        onClick={() => handleStopSelect(stop)}\n                                    >\n                                        <div className=\"result-index\">{index + 1}</div>\n                                        <div className=\"result-details\">\n                                            <h4>{stop.name}</h4>\n                                            <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                                            <p className=\"coordinates\">\n                                                {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                    \n                    {hasSearched && searchResults.length === 0 && (\n                        <div className=\"no-results\">\n                            <p>No bus stops found near the selected location.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            \n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={zoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={(ref) => {\n                        // Store reference to the map for route clearing\n                        if (ref) {\n                            mapRef.current = { _leaflet_map: ref };\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <MapController center={mapCenter} zoom={zoom} />\n                    <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} clearExistingRoutes={clearExistingRoutes} setSelectedStop={setSelectedStop} />\n                    \n                    {/* Display user location */}\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Your Location</strong><br />\n                                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Always display search marker */}\n                    {searchMarker && (\n                        <Marker position={searchMarker} icon={searchMarkerIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Search Location</strong><br />\n                                    {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Display all bus stops */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={busStopIcon}\n                            ref={(ref) => registerMarker(stop.id, ref)}\n                        >\n                            <Popup>\n                                <div>\n                                    <strong>{stop.name}</strong><br />\n                                    {searchMarker && (\n                                        <span>\n                                            Distance: {formatDistance(\n                                                calculateDistance(\n                                                    searchMarker[0], searchMarker[1],\n                                                    stop.latitude, stop.longitude\n                                                )\n                                            )}\n                                        </span>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Add routing control for selected bus stop with forced re-creation and a longer random key */}\n                    {searchMarker && selectedStop && (\n                        <RoutingControl\n                            key={`route-${selectedStop.id}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`}\n                            startPoint={searchMarker}\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={4}\n                            setIsPathLoading={setIsPathLoading}\n                        />\n                    )}\n                    \n                    {/* Button inside map container for centering on user location */}\n                    <div className=\"map-controls\">\n                        <LocationButton\n                            userLocation={userLocation}\n                            onClick={handleCenterOnUser}\n                        />\n                    </div>\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\n// Updated component to handle map clicks and clear routes\nconst MapEvents = ({ setCoordinates, setSearchMarker, clearExistingRoutes, setSelectedStop }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            \n            // Clear any existing routes before setting new coordinates\n            if (typeof clearExistingRoutes === 'function') {\n                clearExistingRoutes();\n            }\n            \n            // Reset selected stop when clicking on a new location\n            if (typeof setSelectedStop === 'function') {\n                setSelectedStop(null);\n            }\n            \n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n            setSearchMarker([lat, lng]); // Update marker immediately\n        }\n    });\n    \n    return null;\n};\n\nexport default BusStopSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}