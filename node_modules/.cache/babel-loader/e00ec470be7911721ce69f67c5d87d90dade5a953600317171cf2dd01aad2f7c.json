{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/user.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../css/user.css';\nimport BusTracking from './BusTracking';\nimport BusStopsView from './SearchBus';\nimport BusStopSearch from './BusStopSearch';\nimport api from '../../utils/api'; // Import the api utility instead of axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const [userLocation, setUserLocation] = useState(null);\n  const [authError, setAuthError] = useState(null);\n  // Use location state to determine active tab if available\n  const [activeTab, setActiveTab] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.activeTab) || 'searchStops');\n  // Pass selected bus info from navigation state if available\n  const [selectedBus, setSelectedBus] = useState(((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.selectedBus) || null);\n  const navigate = useNavigate();\n\n  // Effect to handle incoming navigation with state\n  useEffect(() => {\n    if (location.state) {\n      if (location.state.activeTab) {\n        setActiveTab(location.state.activeTab);\n      }\n      if (location.state.selectedBus) {\n        setSelectedBus(location.state.selectedBus);\n      }\n    }\n  }, [location.state]);\n\n  // Function to check if JWT token is expired\n  const checkTokenExpiration = useCallback(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (!token) {\n      setAuthError('You must be logged in to access this feature');\n      return false;\n    }\n    try {\n      // JWT tokens are split into three parts by dots\n      const payload = token.split('.')[1];\n      // Decode the base64 encoded payload\n      const decodedPayload = JSON.parse(atob(payload));\n\n      // Check if token has expired\n      if (decodedPayload.exp && decodedPayload.exp * 1000 < Date.now()) {\n        // Token has expired\n        localStorage.removeItem('jwtToken'); // Remove the expired token\n        alert('Session timed out. Please login again.');\n        navigate('/login'); // Redirect to login page\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Error checking token expiration:', error);\n      setAuthError('Authentication error. Please login again.');\n      return false;\n    }\n  }, [navigate]);\n\n  // Function to update user location in the database - use api instead of axios\n  const updateUserLocationInDB = useCallback(async () => {\n    if (!userLocation) return;\n    const token = localStorage.getItem('jwtToken');\n    if (!token) return;\n    try {\n      await api.post('/bus_stops/updateLocation', {\n        latitude: userLocation[0],\n        longitude: userLocation[1]\n      });\n      console.log('User location updated in the database');\n    } catch (error) {\n      console.error('Error updating user location:', error);\n    }\n  }, [userLocation]);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation([latitude, longitude]);\n      }, err => {\n        console.error(\"Geolocation error:\", err.message);\n        // Fall back to default location\n        setUserLocation([22.3149, 87.3104]);\n      });\n    }\n  }, []);\n\n  // Update user location in the database every 10 minutes\n  useEffect(() => {\n    // Only proceed if user is authenticated and location is available\n    if (!localStorage.getItem('jwtToken') || !userLocation) return;\n\n    // Update location immediately when component mounts\n    updateUserLocationInDB();\n\n    // Set up interval to update location every 10 minutes\n    const locationInterval = setInterval(() => {\n      // Get fresh location before updating\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setUserLocation([latitude, longitude]);\n          updateUserLocationInDB();\n        }, err => {\n          console.error(\"Geolocation refresh error:\", err.message);\n          // Use existing location if fresh location can't be obtained\n          updateUserLocationInDB();\n        });\n      } else {\n        // If geolocation is not available, update with existing location\n        updateUserLocationInDB();\n      }\n    }, 10 * 60 * 1000); // 10 minutes in milliseconds\n\n    // Clean up interval on component unmount\n    return () => {\n      clearInterval(locationInterval);\n    };\n  }, [userLocation, updateUserLocationInDB]);\n\n  // Check if user is logged in and set up token expiration check\n  useEffect(() => {\n    // Initial check\n    const isValid = checkTokenExpiration();\n    if (!isValid) {\n      return;\n    }\n\n    // Set up periodic token check (every 5 minutes)\n    const intervalId = setInterval(() => {\n      checkTokenExpiration();\n    }, 5 * 60 * 1000); // 5 minutes in milliseconds\n\n    // Clean up on component unmount\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [checkTokenExpiration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-panel\",\n      children: [authError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/login',\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'searchStops' ? 'active' : ''}`,\n          onClick: () => setActiveTab('searchStops'),\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'busStops' ? 'active' : ''}`,\n          onClick: () => setActiveTab('busStops'),\n          children: \"Search Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'trackBus' ? 'active' : ''}`,\n          onClick: () => setActiveTab('trackBus'),\n          children: \"Track Bus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: activeTab === 'busStops' ? /*#__PURE__*/_jsxDEV(BusStopsView, {\n        userLocation: userLocation,\n        setUserLocation: setUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }, this) : activeTab === 'trackBus' ? /*#__PURE__*/_jsxDEV(BusTracking, {\n        userLocation: userLocation,\n        preselectedBus: selectedBus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(BusStopSearch, {\n        userLocation: userLocation,\n        setUserLocation: setUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"tisG6U22fcClcet7VuYgratLsKE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","useLocation","BusTracking","BusStopsView","BusStopSearch","api","jsxDEV","_jsxDEV","User","_s","_location$state","_location$state2","location","userLocation","setUserLocation","authError","setAuthError","activeTab","setActiveTab","state","selectedBus","setSelectedBus","navigate","checkTokenExpiration","token","localStorage","getItem","payload","split","decodedPayload","JSON","parse","atob","exp","Date","now","removeItem","alert","error","console","updateUserLocationInDB","post","latitude","longitude","log","navigator","geolocation","getCurrentPosition","position","coords","err","message","locationInterval","setInterval","clearInterval","isValid","intervalId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","href","preselectedBus","_c","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/user.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport '../../css/user.css';\nimport BusTracking from './BusTracking';\nimport BusStopsView from './SearchBus';\nimport BusStopSearch from './BusStopSearch';\nimport api from '../../utils/api'; // Import the api utility instead of axios\n\nconst User = () => {\n    const location = useLocation();\n    const [userLocation, setUserLocation] = useState(null);\n    const [authError, setAuthError] = useState(null);\n    // Use location state to determine active tab if available\n    const [activeTab, setActiveTab] = useState(\n        location.state?.activeTab || 'searchStops'\n    );\n    // Pass selected bus info from navigation state if available\n    const [selectedBus, setSelectedBus] = useState(\n        location.state?.selectedBus || null\n    );\n    const navigate = useNavigate();\n\n    // Effect to handle incoming navigation with state\n    useEffect(() => {\n        if (location.state) {\n            if (location.state.activeTab) {\n                setActiveTab(location.state.activeTab);\n            }\n            if (location.state.selectedBus) {\n                setSelectedBus(location.state.selectedBus);\n            }\n        }\n    }, [location.state]);\n\n    // Function to check if JWT token is expired\n    const checkTokenExpiration = useCallback(() => {\n        const token = localStorage.getItem('jwtToken');\n        \n        if (!token) {\n            setAuthError('You must be logged in to access this feature');\n            return false;\n        }\n\n        try {\n            // JWT tokens are split into three parts by dots\n            const payload = token.split('.')[1];\n            // Decode the base64 encoded payload\n            const decodedPayload = JSON.parse(atob(payload));\n            \n            // Check if token has expired\n            if (decodedPayload.exp && decodedPayload.exp * 1000 < Date.now()) {\n                // Token has expired\n                localStorage.removeItem('jwtToken'); // Remove the expired token\n                alert('Session timed out. Please login again.');\n                navigate('/login'); // Redirect to login page\n                return false;\n            }\n            \n            return true;\n        } catch (error) {\n            console.error('Error checking token expiration:', error);\n            setAuthError('Authentication error. Please login again.');\n            return false;\n        }\n    }, [navigate]);\n\n    // Function to update user location in the database - use api instead of axios\n    const updateUserLocationInDB = useCallback(async () => {\n        if (!userLocation) return;\n        \n        const token = localStorage.getItem('jwtToken');\n        if (!token) return;\n        \n        try {\n            await api.post('/bus_stops/updateLocation', {\n                latitude: userLocation[0],\n                longitude: userLocation[1]\n            });\n            console.log('User location updated in the database');\n        } catch (error) {\n            console.error('Error updating user location:', error);\n        }\n    }, [userLocation]);\n\n    // Get user's location\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setUserLocation([latitude, longitude]);\n                },\n                (err) => {\n                    console.error(\"Geolocation error:\", err.message);\n                    // Fall back to default location\n                    setUserLocation([22.3149, 87.3104]);\n                }\n            );\n        }\n    }, []);\n\n    // Update user location in the database every 10 minutes\n    useEffect(() => {\n        // Only proceed if user is authenticated and location is available\n        if (!localStorage.getItem('jwtToken') || !userLocation) return;\n        \n        // Update location immediately when component mounts\n        updateUserLocationInDB();\n        \n        // Set up interval to update location every 10 minutes\n        const locationInterval = setInterval(() => {\n            // Get fresh location before updating\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        setUserLocation([latitude, longitude]);\n                        updateUserLocationInDB();\n                    },\n                    (err) => {\n                        console.error(\"Geolocation refresh error:\", err.message);\n                        // Use existing location if fresh location can't be obtained\n                        updateUserLocationInDB();\n                    }\n                );\n            } else {\n                // If geolocation is not available, update with existing location\n                updateUserLocationInDB();\n            }\n        }, 10 * 60 * 1000); // 10 minutes in milliseconds\n        \n        // Clean up interval on component unmount\n        return () => {\n            clearInterval(locationInterval);\n        };\n    }, [userLocation, updateUserLocationInDB]);\n\n    // Check if user is logged in and set up token expiration check\n    useEffect(() => {\n        // Initial check\n        const isValid = checkTokenExpiration();\n        \n        if (!isValid) {\n            return;\n        }\n        \n        // Set up periodic token check (every 5 minutes)\n        const intervalId = setInterval(() => {\n            checkTokenExpiration();\n        }, 5 * 60 * 1000); // 5 minutes in milliseconds\n        \n        // Clean up on component unmount\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [checkTokenExpiration]);\n\n    return (\n        <div className=\"user-container\">\n            <div className=\"header-panel\">                \n                {authError && (\n                    <div className=\"auth-error-message\">\n                        <p>{authError}</p>\n                        <button onClick={() => window.location.href = '/login'}>\n                            Go to Login\n                        </button>\n                    </div>\n                )}\n                \n                <div className=\"tab-navigation\">\n                    <button \n                        className={`tab-button ${activeTab === 'searchStops' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('searchStops')}\n                    >\n                        Search Bus Stops\n                    </button>\n                    <button \n                        className={`tab-button ${activeTab === 'busStops' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('busStops')}\n                    >\n                        Search Buses\n                    </button>\n                    <button \n                        className={`tab-button ${activeTab === 'trackBus' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('trackBus')}\n                    >\n                        Track Bus\n                    </button>\n                </div>\n            </div>\n            \n            <div className=\"content-area\">\n                {activeTab === 'busStops' ? (\n                    <BusStopsView userLocation={userLocation} setUserLocation={setUserLocation} />\n                ) : activeTab === 'trackBus' ? (\n                    <BusTracking userLocation={userLocation} preselectedBus={selectedBus} />\n                ) : (\n                    <BusStopSearch userLocation={userLocation} setUserLocation={setUserLocation} />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,oBAAoB;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,YAAY,MAAM,aAAa;AACtC,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,GAAG,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA;EACf,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EAChD;EACA,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CACtC,EAAAa,eAAA,GAAAE,QAAQ,CAACO,KAAK,cAAAT,eAAA,uBAAdA,eAAA,CAAgBO,SAAS,KAAI,aACjC,CAAC;EACD;EACA,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGxB,QAAQ,CAC1C,EAAAc,gBAAA,GAAAC,QAAQ,CAACO,KAAK,cAAAR,gBAAA,uBAAdA,gBAAA,CAAgBS,WAAW,KAAI,IACnC,CAAC;EACD,MAAME,QAAQ,GAAGtB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACZ,IAAIc,QAAQ,CAACO,KAAK,EAAE;MAChB,IAAIP,QAAQ,CAACO,KAAK,CAACF,SAAS,EAAE;QAC1BC,YAAY,CAACN,QAAQ,CAACO,KAAK,CAACF,SAAS,CAAC;MAC1C;MACA,IAAIL,QAAQ,CAACO,KAAK,CAACC,WAAW,EAAE;QAC5BC,cAAc,CAACT,QAAQ,CAACO,KAAK,CAACC,WAAW,CAAC;MAC9C;IACJ;EACJ,CAAC,EAAE,CAACR,QAAQ,CAACO,KAAK,CAAC,CAAC;;EAEpB;EACA,MAAMI,oBAAoB,GAAGxB,WAAW,CAAC,MAAM;IAC3C,MAAMyB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE9C,IAAI,CAACF,KAAK,EAAE;MACRR,YAAY,CAAC,8CAA8C,CAAC;MAC5D,OAAO,KAAK;IAChB;IAEA,IAAI;MACA;MACA,MAAMW,OAAO,GAAGH,KAAK,CAACI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnC;MACA,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC;;MAEhD;MACA,IAAIE,cAAc,CAACI,GAAG,IAAIJ,cAAc,CAACI,GAAG,GAAG,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;QAC9D;QACAV,YAAY,CAACW,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;QACrCC,KAAK,CAAC,wCAAwC,CAAC;QAC/Cf,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpB,OAAO,KAAK;MAChB;MAEA,OAAO,IAAI;IACf,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxDtB,YAAY,CAAC,2CAA2C,CAAC;MACzD,OAAO,KAAK;IAChB;EACJ,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMkB,sBAAsB,GAAGzC,WAAW,CAAC,YAAY;IACnD,IAAI,CAACc,YAAY,EAAE;IAEnB,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC9C,IAAI,CAACF,KAAK,EAAE;IAEZ,IAAI;MACA,MAAMnB,GAAG,CAACoC,IAAI,CAAC,2BAA2B,EAAE;QACxCC,QAAQ,EAAE7B,YAAY,CAAC,CAAC,CAAC;QACzB8B,SAAS,EAAE9B,YAAY,CAAC,CAAC;MAC7B,CAAC,CAAC;MACF0B,OAAO,CAACK,GAAG,CAAC,uCAAuC,CAAC;IACxD,CAAC,CAAC,OAAON,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC,EAAE,CAACzB,YAAY,CAAC,CAAC;;EAElB;EACAf,SAAS,CAAC,MAAM;IACZ,IAAI+C,SAAS,CAACC,WAAW,EAAE;MACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,QAAQ,IAAK;QACV,MAAM;UAAEN,QAAQ;UAAEC;QAAU,CAAC,GAAGK,QAAQ,CAACC,MAAM;QAC/CnC,eAAe,CAAC,CAAC4B,QAAQ,EAAEC,SAAS,CAAC,CAAC;MAC1C,CAAC,EACAO,GAAG,IAAK;QACLX,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEY,GAAG,CAACC,OAAO,CAAC;QAChD;QACArC,eAAe,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;MACvC,CACJ,CAAC;IACL;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhB,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAAC2B,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,CAACb,YAAY,EAAE;;IAExD;IACA2B,sBAAsB,CAAC,CAAC;;IAExB;IACA,MAAMY,gBAAgB,GAAGC,WAAW,CAAC,MAAM;MACvC;MACA,IAAIR,SAAS,CAACC,WAAW,EAAE;QACvBD,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACnCC,QAAQ,IAAK;UACV,MAAM;YAAEN,QAAQ;YAAEC;UAAU,CAAC,GAAGK,QAAQ,CAACC,MAAM;UAC/CnC,eAAe,CAAC,CAAC4B,QAAQ,EAAEC,SAAS,CAAC,CAAC;UACtCH,sBAAsB,CAAC,CAAC;QAC5B,CAAC,EACAU,GAAG,IAAK;UACLX,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEY,GAAG,CAACC,OAAO,CAAC;UACxD;UACAX,sBAAsB,CAAC,CAAC;QAC5B,CACJ,CAAC;MACL,CAAC,MAAM;QACH;QACAA,sBAAsB,CAAC,CAAC;MAC5B;IACJ,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEpB;IACA,OAAO,MAAM;MACTc,aAAa,CAACF,gBAAgB,CAAC;IACnC,CAAC;EACL,CAAC,EAAE,CAACvC,YAAY,EAAE2B,sBAAsB,CAAC,CAAC;;EAE1C;EACA1C,SAAS,CAAC,MAAM;IACZ;IACA,MAAMyD,OAAO,GAAGhC,oBAAoB,CAAC,CAAC;IAEtC,IAAI,CAACgC,OAAO,EAAE;MACV;IACJ;;IAEA;IACA,MAAMC,UAAU,GAAGH,WAAW,CAAC,MAAM;MACjC9B,oBAAoB,CAAC,CAAC;IAC1B,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEnB;IACA,OAAO,MAAM;MACT+B,aAAa,CAACE,UAAU,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,CAACjC,oBAAoB,CAAC,CAAC;EAE1B,oBACIhB,OAAA;IAAKkD,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BnD,OAAA;MAAKkD,SAAS,EAAC,cAAc;MAAAC,QAAA,GACxB3C,SAAS,iBACNR,OAAA;QAAKkD,SAAS,EAAC,oBAAoB;QAAAC,QAAA,gBAC/BnD,OAAA;UAAAmD,QAAA,EAAI3C;QAAS;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBvD,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACpD,QAAQ,CAACqD,IAAI,GAAG,QAAS;UAAAP,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,eAEDvD,OAAA;QAAKkD,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BnD,OAAA;UACIkD,SAAS,EAAE,cAAcxC,SAAS,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;UACvE8C,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,aAAa,CAAE;UAAAwC,QAAA,EAC9C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvD,OAAA;UACIkD,SAAS,EAAE,cAAcxC,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACpE8C,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,UAAU,CAAE;UAAAwC,QAAA,EAC3C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTvD,OAAA;UACIkD,SAAS,EAAE,cAAcxC,SAAS,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;UACpE8C,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,UAAU,CAAE;UAAAwC,QAAA,EAC3C;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENvD,OAAA;MAAKkD,SAAS,EAAC,cAAc;MAAAC,QAAA,EACxBzC,SAAS,KAAK,UAAU,gBACrBV,OAAA,CAACJ,YAAY;QAACU,YAAY,EAAEA,YAAa;QAACC,eAAe,EAAEA;MAAgB;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAC9E7C,SAAS,KAAK,UAAU,gBACxBV,OAAA,CAACL,WAAW;QAACW,YAAY,EAAEA,YAAa;QAACqD,cAAc,EAAE9C;MAAY;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExEvD,OAAA,CAACH,aAAa;QAACS,YAAY,EAAEA,YAAa;QAACC,eAAe,EAAEA;MAAgB;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACjF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACrD,EAAA,CAlMID,IAAI;EAAA,QACWP,WAAW,EAWXD,WAAW;AAAA;AAAAmE,EAAA,GAZ1B3D,IAAI;AAoMV,eAAeA,IAAI;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}