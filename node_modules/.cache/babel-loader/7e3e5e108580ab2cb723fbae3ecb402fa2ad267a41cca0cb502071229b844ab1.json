{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api, { getApiUrl } from '../../utils/api2.js';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 30 * 1000; // 30 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to recenter map when needed\nfunction MapUpdater({\n  center,\n  zoom\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n}\n\n// Custom component to create routes that follow roads - completely rewritten for stability\n_s(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapUpdater;\nfunction RoadBasedRoutes({\n  stops\n}) {\n  _s2();\n  const map = useMap();\n  const controlRef = useRef(null);\n  const routeLayerGroupRef = useRef(null);\n\n  // A safer cleanup function we can call anytime\n  const cleanup = useCallback(() => {\n    if (controlRef.current) {\n      try {\n        // Always remove from map first\n        if (map) map.removeControl(controlRef.current);\n      } catch (e) {\n        console.warn(\"Error removing control:\", e);\n      }\n      controlRef.current = null;\n    }\n\n    // Also clean up any manual route layers\n    if (routeLayerGroupRef.current) {\n      try {\n        routeLayerGroupRef.current.clearLayers();\n        if (map) map.removeLayer(routeLayerGroupRef.current);\n      } catch (e) {\n        console.warn(\"Error removing route layer group:\", e);\n      }\n      routeLayerGroupRef.current = null;\n    }\n  }, [map]);\n\n  // Set up once - create a fresh layer group on each re-render\n  useEffect(() => {\n    // Create a fresh layer group for routes\n    cleanup();\n    if (map) {\n      try {\n        routeLayerGroupRef.current = L.layerGroup().addTo(map);\n        console.log(\"Route layer group created and added to map\");\n      } catch (e) {\n        console.warn(\"Error creating layer group:\", e);\n      }\n    }\n    return cleanup; // Clean up on unmount\n  }, [map, cleanup]);\n\n  // Handle route creation/updates\n  useEffect(() => {\n    // Skip if no map or insufficient stops\n    if (!map || !stops || stops.length < 2) {\n      console.log(\"Not enough conditions for route drawing:\", {\n        hasMap: !!map,\n        stopsCount: (stops === null || stops === void 0 ? void 0 : stops.length) || 0\n      });\n      return;\n    }\n\n    // Clear any existing routes first, but keep the layer group\n    if (routeLayerGroupRef.current) {\n      routeLayerGroupRef.current.clearLayers();\n    }\n\n    // Get waypoints from stops\n    const waypoints = [];\n    const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\n    console.log(\"Drawing routes for ordered stops:\", orderedStops);\n\n    // Find the actual stop data using the global stops data\n    for (const routeStop of orderedStops) {\n      var _window$stopsData;\n      const stopData = (_window$stopsData = window.stopsData) === null || _window$stopsData === void 0 ? void 0 : _window$stopsData.find(s => s.id === routeStop.bus_stop_id);\n      if (stopData) {\n        const lat = parseFloat(stopData.latitude);\n        const lng = parseFloat(stopData.longitude);\n        if (!isNaN(lat) && !isNaN(lng)) {\n          waypoints.push(L.latLng(lat, lng));\n        }\n      }\n    }\n    console.log(\"Generated waypoints:\", waypoints.length);\n\n    // Only create route if we have at least 2 valid waypoints\n    if (waypoints.length < 2) {\n      console.log(\"Not enough valid waypoints for route\");\n      return;\n    }\n\n    // Create OSRM routes\n    try {\n      // Create separate routing controls for each segment to number them\n      for (let i = 0; i < waypoints.length - 1; i++) {\n        const segmentWaypoints = [waypoints[i], waypoints[i + 1]];\n        const segmentIndex = i + 1; // for numbering\n\n        const segmentControl = L.Routing.control({\n          waypoints: segmentWaypoints,\n          routeWhileDragging: false,\n          showAlternatives: false,\n          fitSelectedRoutes: false,\n          show: false,\n          // Don't show the routing UI\n          lineOptions: {\n            styles: [{\n              color: '#3388ff',\n              opacity: 0.7,\n              weight: 5\n            }],\n            extendToWaypoints: false,\n            missingRouteTolerance: 10\n          },\n          createMarker: () => null,\n          // No markers from routing\n          addWaypoints: false,\n          serviceUrl: 'https://router.project-osrm.org/route/v1'\n        });\n\n        // Add to map immediately\n        segmentControl.addTo(map);\n\n        // Handle route found for this segment\n        segmentControl.on('routesfound', function (e) {\n          if (e.routes && e.routes.length > 0) {\n            console.log(`Route segment ${segmentIndex} found:`, e.routes[0]);\n\n            // Add the segment number marker at the midpoint of the route\n            const coordinates = e.routes[0].coordinates;\n            if (coordinates && coordinates.length > 0) {\n              const midIndex = Math.floor(coordinates.length / 2);\n              const midPoint = coordinates[midIndex];\n              const marker = L.marker([midPoint.lat, midPoint.lng], {\n                icon: L.divIcon({\n                  html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid black; font-weight: bold;\">${segmentIndex}</div>`,\n                  className: 'route-segment-label',\n                  iconSize: [24, 24],\n                  iconAnchor: [12, 12]\n                })\n              });\n              if (routeLayerGroupRef.current) {\n                routeLayerGroupRef.current.addLayer(marker);\n              }\n            }\n          }\n        });\n\n        // Store in the routeLayerGroup to help with cleanup\n        if (routeLayerGroupRef.current) {\n          routeLayerGroupRef.current.addLayer(segmentControl);\n        }\n      }\n\n      // Also create one control for the entire route (thinner line)\n      const entireRouteControl = L.Routing.control({\n        waypoints: waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{\n            color: '#cc0000',\n            opacity: 0.6,\n            weight: 3\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10\n        },\n        createMarker: () => null,\n        addWaypoints: false,\n        serviceUrl: 'https://router.project-osrm.org/route/v1'\n      });\n      entireRouteControl.addTo(map);\n      if (routeLayerGroupRef.current) {\n        routeLayerGroupRef.current.addLayer(entireRouteControl);\n      }\n    } catch (error) {\n      console.error(\"Error creating OSRM routing:\", error);\n\n      // Fallback: Create simple lines between points if OSRM fails\n      if (routeLayerGroupRef.current) {\n        const fallbackRoute = L.polyline(waypoints, {\n          color: '#ff0000',\n          weight: 4,\n          opacity: 0.7,\n          dashArray: '10, 10'\n        });\n        routeLayerGroupRef.current.addLayer(fallbackRoute);\n\n        // Add segment numbers even with fallback\n        for (let i = 0; i < waypoints.length - 1; i++) {\n          const midPoint = [(waypoints[i].lat + waypoints[i + 1].lat) / 2, (waypoints[i].lng + waypoints[i + 1].lng) / 2];\n          const marker = L.marker(midPoint, {\n            icon: L.divIcon({\n              html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid red; font-weight: bold;\">${i + 1}</div>`,\n              className: 'route-segment-label',\n              iconSize: [24, 24],\n              iconAnchor: [12, 12]\n            })\n          });\n          routeLayerGroupRef.current.addLayer(marker);\n        }\n      }\n    }\n  }, [map, stops, cleanup]);\n  return null;\n}\n_s2(RoadBasedRoutes, \"zsIWQ/hAGQo9wEg4ijPQXdlU+3s=\", false, function () {\n  return [useMap];\n});\n_c2 = RoadBasedRoutes;\nfunction RouteManagement({\n  user\n}) {\n  _s3();\n  var _getBusById, _getBusById2;\n  const [buses, setBuses] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\n  const [zoom, setZoom] = useState(15);\n  const mapRef = useRef(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [routes, setRoutes] = useState([]);\n  const [useDirectRoutes, setUseDirectRoutes] = useState(true); // New state to control direct vs OSRM routes\n  const [showMapDebug, setShowMapDebug] = useState(false); // New state for debugging\n\n  const [formData, setFormData] = useState({\n    bus_id: '',\n    stops: []\n  });\n  const [isAddingStop, setIsAddingStop] = useState(false);\n  const [currentStopOrder, setCurrentStopOrder] = useState(1);\n  useEffect(() => {\n    // Initialize window-level stopsData and configuration flag\n    window.enableOSRM = true; // Set to true to use ORSM routes by default\n    configureRoutingMachine();\n\n    // Add a global diagnostics object to help with debugging\n    window.routeDiagnostics = {\n      stops: [],\n      waypoints: [],\n      logState: () => {\n        var _window$stopsData2;\n        console.log(\"Current Map State:\", {\n          stops: ((_window$stopsData2 = window.stopsData) === null || _window$stopsData2 === void 0 ? void 0 : _window$stopsData2.length) || 0,\n          selectedBus,\n          routeStops: formData.stops.length,\n          mapInitialized: !!mapRef.current\n        });\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError('');\n\n        // Fetch buses\n        try {\n          const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 10000\n          });\n          setBuses(busesResponse.data);\n          console.log(\"Buses loaded for routes:\", busesResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch buses: ' + err.message);\n          console.error(\"Error fetching buses for routes:\", err);\n          setBuses([{\n            id: 'mock1',\n            name: 'Demo Bus 1'\n          }]); // Fallback data\n        }\n\n        // Fetch stops\n        try {\n          const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 100\n          });\n          setStops(stopsResponse.data);\n          console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch stops: ' + err.message);\n          console.error(\"Error fetching stops for routes:\", err);\n          setStops([{\n            id: 'mock1',\n            name: 'Demo Stop',\n            latitude: 22.3190,\n            longitude: 87.3091\n          }]); // Fallback data\n        }\n\n        // Fetch routes and update your state\n        try {\n          const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 1000\n          });\n          // Using the fetched routes data\n          const fetchedRoutes = routesResponse.data;\n          setRoutes(fetchedRoutes);\n          console.log(\"Routes loaded:\", fetchedRoutes.length);\n        } catch (err) {\n          setError('Failed to fetch routes: ' + err.message);\n          console.error(\"Error fetching routes:\", err);\n          // Using default empty array for routes\n          setRoutes([]);\n        }\n      } catch (err) {\n        setError('Error fetching data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [user.token, refreshTrigger]);\n  useEffect(() => {\n    if (stops && stops.length > 0) {\n      window.stopsData = stops;\n    }\n  }, [stops]);\n  const handleBusSelect = async busId => {\n    try {\n      setSelectedBus(busId);\n      setLoading(true);\n      setError('');\n      try {\n        const response = await axios.get(getApiUrl(api.endpoints.adminRouteById(busId)), {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        const busRoutes = response.data;\n        console.log('Routes loaded for bus', busId, busRoutes);\n        setFormData({\n          bus_id: busId,\n          stops: busRoutes\n        });\n\n        // Set current stop order for adding new stops\n        setCurrentStopOrder(busRoutes && busRoutes.length > 0 ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1 : 1);\n\n        // Find stop coordinates to center map\n        if (busRoutes && busRoutes.length > 0) {\n          fitRouteOnMap(busRoutes);\n        }\n      } catch (err) {\n        setError('Error fetching route data: ' + err.message);\n        console.error(\"Error fetching routes for bus:\", err);\n      }\n    } catch (err) {\n      setError('Error preparing bus route view: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddStop = async stopId => {\n    try {\n      setError('');\n      const stop = stops.find(s => s.id === stopId);\n      if (!stop) {\n        throw new Error(\"Stop not found\");\n      }\n\n      // Create new route stop entry\n      const newRoute = {\n        bus_id: selectedBus,\n        bus_stop_id: stopId,\n        stop_order: currentStopOrder\n      };\n      const response = await axios.post(getApiUrl(api.endpoints.adminAddRoute), newRoute, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      if (response.data && response.data.id) {\n        // Use the complete object returned from API\n        setFormData(prev => ({\n          ...prev,\n          stops: [...prev.stops, response.data]\n        }));\n        setRoutes(prev => [...prev, response.data]);\n        setCurrentStopOrder(currentStopOrder + 1);\n\n        // Update the map to show the new route\n        fitRouteOnMap([...formData.stops, response.data]);\n      }\n      setIsAddingStop(false);\n    } catch (err) {\n      setError('Failed to add stop to route: ' + err.message);\n      console.error(\"Error adding stop to route:\", err);\n    }\n  };\n  const handleRemoveStop = async routeId => {\n    if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\n      return;\n    }\n    try {\n      await axios.delete(getApiUrl(api.endpoints.adminDeleteRoute(routeId)), {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n\n      // Update local state\n      const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\n      setFormData(prev => ({\n        ...prev,\n        stops: updatedStops\n      }));\n      setRoutes(prev => prev.filter(route => route.id !== routeId));\n\n      // Update the map\n      fitRouteOnMap(updatedStops);\n    } catch (err) {\n      setError('Error removing stop: ' + err.message);\n      console.error(\"Error removing stop from route:\", err);\n    }\n  };\n  const reorderStop = async (routeId, currentOrder, newOrder) => {\n    if (currentOrder === newOrder) return;\n    try {\n      const reorderedStops = [...formData.stops];\n\n      // Find stops that need order changes\n      const stopToMove = reorderedStops.find(s => s.id === routeId);\n\n      // Skip if stop not found\n      if (!stopToMove) return;\n\n      // Update the order\n      stopToMove.stop_order = newOrder;\n\n      // Reorder other stops to maintain sequence\n      reorderedStops.forEach(stop => {\n        if (stop.id !== routeId) {\n          if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\n            // Moving down - shift others up\n            stop.stop_order -= 1;\n          } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\n            // Moving up - shift others down\n            stop.stop_order += 1;\n          }\n        }\n      });\n\n      // Update in the database - use the correct API endpoint\n      const updateResponse = await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(routeId)), {\n        stop_order: newOrder\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      console.log('Route updated successfully:', updateResponse.data);\n\n      // Update other affected stops in the database\n      for (const stop of reorderedStops) {\n        if (stop.id !== routeId && (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder || currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder)) {\n          await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(stop.id)), {\n            stop_order: stop.stop_order\n          }, {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            }\n          });\n        }\n      }\n\n      // Update local state with reordered stops\n      setFormData(prev => ({\n        ...prev,\n        stops: reorderedStops\n      }));\n\n      // Update routes state\n      setRoutes(prev => {\n        const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\n        return [...updatedRoutes, ...reorderedStops];\n      });\n\n      // Refresh UI after all updates are done\n      setRefreshTrigger(prev => prev + 1);\n    } catch (err) {\n      setError('Error reordering stops: ' + err.message);\n      console.error(\"Error reordering stops:\", err);\n    }\n  };\n  const fitRouteOnMap = routeStops => {\n    if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\n\n    // Get all stop coordinates, ensuring we have proper numeric values\n    const stopPositions = routeStops.map(routeStop => {\n      const stop = stops.find(s => s.id === routeStop.bus_stop_id);\n      if (!stop) return null;\n      const lat = parseFloat(stop.latitude);\n      const lng = parseFloat(stop.longitude);\n      if (isNaN(lat) || isNaN(lng)) return null;\n      return [lat, lng];\n    }).filter(Boolean);\n    if (stopPositions.length === 0) return;\n    if (stopPositions.length === 1) {\n      // If only one stop, center on it\n      setMapCenter(stopPositions[0]);\n      setZoom(16);\n    } else {\n      // Calculate bounds for multiple stops\n      const minLat = Math.min(...stopPositions.map(pos => pos[0]));\n      const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\n      const minLng = Math.min(...stopPositions.map(pos => pos[1]));\n      const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\n\n      // Center the map on the middle of the route\n      setMapCenter([minLat + (maxLat - minLat) / 2, minLng + (maxLng - minLng) / 2]);\n\n      // Calculate zoom level based on distance\n      const latDiff = maxLat - minLat;\n      const lngDiff = maxLng - minLng;\n      const maxDiff = Math.max(latDiff, lngDiff);\n\n      // Simple zoom calculation, adjust as needed\n      if (maxDiff < 0.005) setZoom(16);else if (maxDiff < 0.01) setZoom(15);else if (maxDiff < 0.02) setZoom(14);else setZoom(13);\n    }\n  };\n  const getStopById = stopId => {\n    return stops.find(stop => stop.id === stopId);\n  };\n  const getBusById = busId => {\n    return buses.find(bus => bus.id === busId);\n  };\n\n  // Add stop marker icon based on whether it's start, middle, or end\n  const getStopIcon = (stopOrder, totalStops) => {\n    const iconUrl = stopOrder === 1 ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' : stopOrder === totalStops ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' : 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png';\n    return L.icon({\n      iconUrl,\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41]\n    });\n  };\n  if (loading && !buses.length && !stops.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading route data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: () => setRefreshTrigger(prev => prev + 1),\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'Refresh Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.enableOSRM = !window.enableOSRM;\n          setUseDirectRoutes(!useDirectRoutes);\n          setRefreshTrigger(prev => prev + 1);\n        },\n        children: useDirectRoutes ? \"Try OSRM Routes\" : \"Use Direct Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowMapDebug(!showMapDebug),\n        children: showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 13\n    }, this), showMapDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        padding: '10px',\n        backgroundColor: '#f0f0f0',\n        margin: '10px 0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Route Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Buses Loaded: \", buses.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stops Loaded: \", stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Bus: \", selectedBus ? (_getBusById = getBusById(selectedBus)) === null || _getBusById === void 0 ? void 0 : _getBusById.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Route Stops: \", formData.stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Map Center: \", mapCenter.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.routeDiagnostics.logState();\n          console.log(\"Current formData:\", formData);\n        },\n        children: \"Log Debug Info to Console\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-management-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Bus to Manage Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-list\",\n          children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBus === bus.id ? 'selected' : '',\n            onClick: () => handleBusSelect(bus.id),\n            children: bus.name\n          }, bus.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 17\n      }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Route for \", (_getBusById2 = getBusById(selectedBus)) === null || _getBusById2 === void 0 ? void 0 : _getBusById2.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 25\n        }, this), formData.stops.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No stops assigned to this route. Add stops below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"route-stops-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 729,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stop Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...formData.stops].sort((a, b) => a.stop_order - b.stop_order).map(routeStop => {\n              const stop = getStopById(routeStop.bus_stop_id);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: routeStop.stop_order\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 741,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stop ? stop.name : 'Unknown Stop'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order - 1),\n                    disabled: routeStop.stop_order === 1,\n                    children: \"\\u2191\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 744,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order + 1),\n                    disabled: routeStop.stop_order === formData.stops.length,\n                    children: \"\\u2193\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRemoveStop(routeStop.id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 53\n                }, this)]\n              }, routeStop.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-stop-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAddingStop(!isAddingStop),\n            className: \"add-stop-button\",\n            children: isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 29\n          }, this), isAddingStop && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-stops\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a stop to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stops-grid\",\n              children: stops.filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id)).map(stop => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddStop(stop.id),\n                className: \"stop-option\",\n                children: stop.name\n              }, stop.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 790,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-map-container\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoom,\n          className: \"map-container map-container-large\",\n          ref: mapRef,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapUpdater, {\n            center: mapCenter,\n            zoom: zoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 818,\n            columnNumber: 25\n          }, this), selectedBus && formData.stops && formData.stops.length >= 2 && /*#__PURE__*/_jsxDEV(RoadBasedRoutes, {\n            stops: formData.stops\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 29\n          }, this), stops.map(stop => {\n            // Check if this stop is in the selected bus's route\n            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\n            const isInRoute = !!routeStopInfo;\n            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\n            const totalStops = formData.stops.length;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [stop.latitude, stop.longitude],\n              icon: isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default(),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: stop.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 73\n                  }, this), isInRoute ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"in-route\",\n                    children: [\"Stop #\", stopOrder, \" in route\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 845,\n                      columnNumber: 79\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleRemoveStop(routeStopInfo.id),\n                      children: \"Remove from Route\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 844,\n                    columnNumber: 49\n                  }, this) : selectedBus && isAddingStop && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddStop(stop.id),\n                    children: \"Add to Route\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 852,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 840,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 37\n              }, this)\n            }, stop.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 33\n            }, this);\n          })]\n        }, `map-${selectedBus || 'default'}-${refreshTrigger}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 21\n        }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-status\",\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Route Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 868,\n              columnNumber: 33\n            }, this), \" \", formData.stops.length < 2 ? \"Add at least 2 stops to create a route\" : `Route with ${formData.stops.length} stops`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 658,\n    columnNumber: 9\n  }, this);\n}\n_s3(RouteManagement, \"dY7BKqoRKzMz9/gWFkJMBLsl5LY=\");\n_c3 = RouteManagement;\nexport default RouteManagement;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapUpdater\");\n$RefreshReg$(_c2, \"RoadBasedRoutes\");\n$RefreshReg$(_c3, \"RouteManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","MapContainer","TileLayer","Marker","Popup","useMap","L","api","getApiUrl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","configureRoutingMachine","Routing","Itinerary","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","MapUpdater","center","zoom","_s","map","setView","getZoom","_c","RoadBasedRoutes","stops","_s2","controlRef","routeLayerGroupRef","cleanup","current","removeControl","clearLayers","layerGroup","addTo","log","length","hasMap","stopsCount","waypoints","orderedStops","sort","a","b","stop_order","routeStop","_window$stopsData","stopData","window","stopsData","find","s","id","bus_stop_id","lat","parseFloat","latitude","lng","longitude","isNaN","push","latLng","i","segmentWaypoints","segmentIndex","segmentControl","control","routeWhileDragging","showAlternatives","fitSelectedRoutes","show","lineOptions","styles","color","opacity","weight","extendToWaypoints","missingRouteTolerance","createMarker","addWaypoints","serviceUrl","on","routes","coordinates","midIndex","Math","floor","midPoint","marker","icon","divIcon","html","className","iconSize","iconAnchor","addLayer","entireRouteControl","error","fallbackRoute","polyline","dashArray","_c2","RouteManagement","user","_s3","_getBusById","_getBusById2","buses","setBuses","loading","setLoading","setError","selectedBus","setSelectedBus","mapCenter","setMapCenter","setZoom","mapRef","refreshTrigger","setRefreshTrigger","setRoutes","useDirectRoutes","setUseDirectRoutes","showMapDebug","setShowMapDebug","formData","setFormData","bus_id","isAddingStop","setIsAddingStop","currentStopOrder","setCurrentStopOrder","enableOSRM","routeDiagnostics","logState","_window$stopsData2","routeStops","mapInitialized","fetchData","busesResponse","get","endpoints","adminBuses","headers","Authorization","token","data","err","message","name","stopsResponse","adminStops","setStops","routesResponse","adminRoutes","fetchedRoutes","handleBusSelect","busId","response","adminRouteById","busRoutes","max","stop","fitRouteOnMap","handleAddStop","stopId","Error","newRoute","post","adminAddRoute","prev","handleRemoveStop","routeId","confirm","delete","adminDeleteRoute","updatedStops","filter","route","reorderStop","currentOrder","newOrder","reorderedStops","stopToMove","forEach","updateResponse","put","adminUpdateRoute","updatedRoutes","r","some","stopPositions","Boolean","minLat","min","pos","maxLat","minLng","maxLng","latDiff","lngDiff","maxDiff","getStopById","getBusById","bus","getStopIcon","stopOrder","totalStops","popupAnchor","shadowSize","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","padding","backgroundColor","margin","borderRadius","join","ref","attribution","url","routeStopInfo","isInRoute","position","textAlign","marginTop","_c3","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'; \r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\r\nimport api, { getApiUrl } from '../../utils/api2.js';\r\n\r\n// Fix for default marker icon in Leaflet with React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\r\n    iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\r\n    shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\r\n});\r\n\r\n\r\nfunction configureRoutingMachine() {\r\n    if (typeof L !== 'undefined' && L.Routing) {\r\n        // Modify the global routing options\r\n        L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\r\n        L.Routing.timeout = 30 * 1000; // 30 seconds timeout\r\n\r\n        // Override the error handling globally\r\n        if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\r\n            L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\r\n                console.warn(\"Handled routing error:\", e);\r\n                // No UI updates or errors thrown\r\n            };\r\n        }\r\n\r\n        // Fix issues with the layer removal\r\n        if (L.Routing.Line && L.Routing.Line.prototype) {\r\n            const originalClearLines = L.Routing.Line.prototype._clearLines;\r\n            L.Routing.Line.prototype._clearLines = function () {\r\n                try {\r\n                    // Safety check before calling the original function\r\n                    if (this._map && this._route && this._route._layers) {\r\n                        originalClearLines.call(this);\r\n                    }\r\n                } catch (e) {\r\n                    console.warn(\"Protected from _clearLines error:\", e);\r\n                    // Manual cleanup as fallback\r\n                    if (this._map && this._route) {\r\n                        try {\r\n                            this._map.removeLayer(this._route);\r\n                        } catch (e) {\r\n                            console.warn(\"Also failed with manual cleanup:\", e);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Component to recenter map when needed\r\nfunction MapUpdater({ center, zoom }) {\r\n    const map = useMap();\r\n\r\n    useEffect(() => {\r\n        if (center) {\r\n            map.setView(center, zoom || map.getZoom());\r\n        }\r\n    }, [center, zoom, map]);\r\n\r\n    return null;\r\n}\r\n\r\n\r\n// Custom component to create routes that follow roads - completely rewritten for stability\r\nfunction RoadBasedRoutes({ stops }) {\r\n    const map = useMap();\r\n    const controlRef = useRef(null);\r\n    const routeLayerGroupRef = useRef(null);\r\n    \r\n    // A safer cleanup function we can call anytime\r\n    const cleanup = useCallback(() => {\r\n        if (controlRef.current) {\r\n            try {\r\n                // Always remove from map first\r\n                if (map) map.removeControl(controlRef.current);\r\n            } catch (e) {\r\n                console.warn(\"Error removing control:\", e);\r\n            }\r\n            controlRef.current = null;\r\n        }\r\n\r\n        // Also clean up any manual route layers\r\n        if (routeLayerGroupRef.current) {\r\n            try {\r\n                routeLayerGroupRef.current.clearLayers();\r\n                if (map) map.removeLayer(routeLayerGroupRef.current);\r\n            } catch (e) {\r\n                console.warn(\"Error removing route layer group:\", e);\r\n            }\r\n            routeLayerGroupRef.current = null;\r\n        }\r\n    }, [map]);\r\n\r\n    // Set up once - create a fresh layer group on each re-render\r\n    useEffect(() => {\r\n        // Create a fresh layer group for routes\r\n        cleanup();\r\n        if (map) {\r\n            try {\r\n                routeLayerGroupRef.current = L.layerGroup().addTo(map);\r\n                console.log(\"Route layer group created and added to map\");\r\n            } catch (e) {\r\n                console.warn(\"Error creating layer group:\", e);\r\n            }\r\n        }\r\n\r\n        return cleanup; // Clean up on unmount\r\n    }, [map, cleanup]);\r\n\r\n    // Handle route creation/updates\r\n    useEffect(() => {\r\n        // Skip if no map or insufficient stops\r\n        if (!map || !stops || stops.length < 2) {\r\n            console.log(\"Not enough conditions for route drawing:\", {\r\n                hasMap: !!map,\r\n                stopsCount: stops?.length || 0\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Clear any existing routes first, but keep the layer group\r\n        if (routeLayerGroupRef.current) {\r\n            routeLayerGroupRef.current.clearLayers();\r\n        }\r\n\r\n        // Get waypoints from stops\r\n        const waypoints = [];\r\n        const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\r\n\r\n        console.log(\"Drawing routes for ordered stops:\", orderedStops);\r\n\r\n        // Find the actual stop data using the global stops data\r\n        for (const routeStop of orderedStops) {\r\n            const stopData = window.stopsData?.find(s => s.id === routeStop.bus_stop_id);\r\n            if (stopData) {\r\n                const lat = parseFloat(stopData.latitude);\r\n                const lng = parseFloat(stopData.longitude);\r\n                if (!isNaN(lat) && !isNaN(lng)) {\r\n                    waypoints.push(L.latLng(lat, lng));\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"Generated waypoints:\", waypoints.length);\r\n\r\n        // Only create route if we have at least 2 valid waypoints\r\n        if (waypoints.length < 2) {\r\n            console.log(\"Not enough valid waypoints for route\");\r\n            return;\r\n        }\r\n\r\n        // Create OSRM routes\r\n        try {\r\n            // Create separate routing controls for each segment to number them\r\n            for (let i = 0; i < waypoints.length - 1; i++) {\r\n                const segmentWaypoints = [waypoints[i], waypoints[i + 1]];\r\n                const segmentIndex = i + 1; // for numbering\r\n                \r\n                const segmentControl = L.Routing.control({\r\n                    waypoints: segmentWaypoints,\r\n                    routeWhileDragging: false,\r\n                    showAlternatives: false,\r\n                    fitSelectedRoutes: false,\r\n                    show: false, // Don't show the routing UI\r\n                    lineOptions: {\r\n                        styles: [{ color: '#3388ff', opacity: 0.7, weight: 5 }],\r\n                        extendToWaypoints: false,\r\n                        missingRouteTolerance: 10\r\n                    },\r\n                    createMarker: () => null, // No markers from routing\r\n                    addWaypoints: false,\r\n                    serviceUrl: 'https://router.project-osrm.org/route/v1',\r\n                });\r\n\r\n                // Add to map immediately\r\n                segmentControl.addTo(map);\r\n\r\n                // Handle route found for this segment\r\n                segmentControl.on('routesfound', function(e) {\r\n                    if (e.routes && e.routes.length > 0) {\r\n                        console.log(`Route segment ${segmentIndex} found:`, e.routes[0]);\r\n                        \r\n                        // Add the segment number marker at the midpoint of the route\r\n                        const coordinates = e.routes[0].coordinates;\r\n                        if (coordinates && coordinates.length > 0) {\r\n                            const midIndex = Math.floor(coordinates.length / 2);\r\n                            const midPoint = coordinates[midIndex];\r\n                            \r\n                            const marker = L.marker([midPoint.lat, midPoint.lng], {\r\n                                icon: L.divIcon({\r\n                                    html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid black; font-weight: bold;\">${segmentIndex}</div>`,\r\n                                    className: 'route-segment-label',\r\n                                    iconSize: [24, 24],\r\n                                    iconAnchor: [12, 12]\r\n                                })\r\n                            });\r\n                            \r\n                            if (routeLayerGroupRef.current) {\r\n                                routeLayerGroupRef.current.addLayer(marker);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Store in the routeLayerGroup to help with cleanup\r\n                if (routeLayerGroupRef.current) {\r\n                    routeLayerGroupRef.current.addLayer(segmentControl);\r\n                }\r\n            }\r\n            \r\n            // Also create one control for the entire route (thinner line)\r\n            const entireRouteControl = L.Routing.control({\r\n                waypoints: waypoints,\r\n                routeWhileDragging: false,\r\n                showAlternatives: false,\r\n                fitSelectedRoutes: false,\r\n                show: false,\r\n                lineOptions: {\r\n                    styles: [{ color: '#cc0000', opacity: 0.6, weight: 3 }],\r\n                    extendToWaypoints: true,\r\n                    missingRouteTolerance: 10\r\n                },\r\n                createMarker: () => null,\r\n                addWaypoints: false,\r\n                serviceUrl: 'https://router.project-osrm.org/route/v1'\r\n            });\r\n            \r\n            entireRouteControl.addTo(map);\r\n            \r\n            if (routeLayerGroupRef.current) {\r\n                routeLayerGroupRef.current.addLayer(entireRouteControl);\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error(\"Error creating OSRM routing:\", error);\r\n            \r\n            // Fallback: Create simple lines between points if OSRM fails\r\n            if (routeLayerGroupRef.current) {\r\n                const fallbackRoute = L.polyline(waypoints, {\r\n                    color: '#ff0000',\r\n                    weight: 4,\r\n                    opacity: 0.7,\r\n                    dashArray: '10, 10'\r\n                });\r\n                \r\n                routeLayerGroupRef.current.addLayer(fallbackRoute);\r\n                \r\n                // Add segment numbers even with fallback\r\n                for (let i = 0; i < waypoints.length - 1; i++) {\r\n                    const midPoint = [\r\n                        (waypoints[i].lat + waypoints[i + 1].lat) / 2,\r\n                        (waypoints[i].lng + waypoints[i + 1].lng) / 2\r\n                    ];\r\n                    \r\n                    const marker = L.marker(midPoint, {\r\n                        icon: L.divIcon({\r\n                            html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid red; font-weight: bold;\">${i + 1}</div>`,\r\n                            className: 'route-segment-label',\r\n                            iconSize: [24, 24],\r\n                            iconAnchor: [12, 12]\r\n                        })\r\n                    });\r\n                    \r\n                    routeLayerGroupRef.current.addLayer(marker);\r\n                }\r\n            }\r\n        }\r\n    }, [map, stops, cleanup]);\r\n\r\n    return null;\r\n}\r\n\r\nfunction RouteManagement({ user }) {\r\n    const [buses, setBuses] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [selectedBus, setSelectedBus] = useState(null);\r\n    const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\r\n    const [zoom, setZoom] = useState(15);\r\n    const mapRef = useRef(null);\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n    const [routes, setRoutes] = useState([]);\r\n    const [useDirectRoutes, setUseDirectRoutes] = useState(true); // New state to control direct vs OSRM routes\r\n    const [showMapDebug, setShowMapDebug] = useState(false); // New state for debugging\r\n\r\n    const [formData, setFormData] = useState({\r\n        bus_id: '',\r\n        stops: []\r\n    });\r\n\r\n    const [isAddingStop, setIsAddingStop] = useState(false);\r\n    const [currentStopOrder, setCurrentStopOrder] = useState(1);\r\n\r\n    useEffect(() => {\r\n        // Initialize window-level stopsData and configuration flag\r\n        window.enableOSRM = true; // Set to true to use ORSM routes by default\r\n        configureRoutingMachine();\r\n        \r\n        // Add a global diagnostics object to help with debugging\r\n        window.routeDiagnostics = {\r\n            stops: [],\r\n            waypoints: [],\r\n            logState: () => {\r\n                console.log(\"Current Map State:\", {\r\n                    stops: window.stopsData?.length || 0,\r\n                    selectedBus,\r\n                    routeStops: formData.stops.length,\r\n                    mapInitialized: !!mapRef.current\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError('');\r\n\r\n                // Fetch buses\r\n                try {\r\n                    const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 10000\r\n                    });\r\n                    setBuses(busesResponse.data);\r\n                    console.log(\"Buses loaded for routes:\", busesResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch buses: ' + err.message);\r\n                    console.error(\"Error fetching buses for routes:\", err);\r\n                    setBuses([{ id: 'mock1', name: 'Demo Bus 1' }]); // Fallback data\r\n                }\r\n\r\n                // Fetch stops\r\n                try {\r\n                    const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 100\r\n                    });\r\n                    setStops(stopsResponse.data);\r\n                    console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch stops: ' + err.message);\r\n                    console.error(\"Error fetching stops for routes:\", err);\r\n                    setStops([{\r\n                        id: 'mock1',\r\n                        name: 'Demo Stop',\r\n                        latitude: 22.3190,\r\n                        longitude: 87.3091\r\n                    }]); // Fallback data\r\n                }\r\n\r\n                // Fetch routes and update your state\r\n                try {\r\n                    const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 1000\r\n                    });\r\n                    // Using the fetched routes data\r\n                    const fetchedRoutes = routesResponse.data;\r\n                    setRoutes(fetchedRoutes);\r\n                    console.log(\"Routes loaded:\", fetchedRoutes.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch routes: ' + err.message);\r\n                    console.error(\"Error fetching routes:\", err);\r\n                    // Using default empty array for routes\r\n                    setRoutes([]);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching data: ' + err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [user.token, refreshTrigger]);\r\n\r\n    useEffect(() => {\r\n        if (stops && stops.length > 0) {\r\n            window.stopsData = stops;\r\n        }\r\n    }, [stops]);\r\n\r\n\r\n    const handleBusSelect = async (busId) => {\r\n        try {\r\n            setSelectedBus(busId);\r\n            setLoading(true);\r\n            setError('');\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    getApiUrl(api.endpoints.adminRouteById(busId)),\r\n                    { headers: { Authorization: `Bearer ${user.token}` } }\r\n                );\r\n\r\n                const busRoutes = response.data;\r\n                console.log('Routes loaded for bus', busId, busRoutes);\r\n\r\n                setFormData({\r\n                    bus_id: busId,\r\n                    stops: busRoutes\r\n                });\r\n\r\n                // Set current stop order for adding new stops\r\n                setCurrentStopOrder(\r\n                    busRoutes && busRoutes.length > 0\r\n                        ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1\r\n                        : 1\r\n                );\r\n\r\n                // Find stop coordinates to center map\r\n                if (busRoutes && busRoutes.length > 0) {\r\n                    fitRouteOnMap(busRoutes);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching route data: ' + err.message);\r\n                console.error(\"Error fetching routes for bus:\", err);\r\n            }\r\n        } catch (err) {\r\n            setError('Error preparing bus route view: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddStop = async (stopId) => {\r\n        try {\r\n            setError('');\r\n            const stop = stops.find(s => s.id === stopId);\r\n            if (!stop) {\r\n                throw new Error(\"Stop not found\");\r\n            }\r\n\r\n            // Create new route stop entry\r\n            const newRoute = {\r\n                bus_id: selectedBus,\r\n                bus_stop_id: stopId,\r\n                stop_order: currentStopOrder\r\n            };\r\n\r\n            const response = await axios.post(\r\n                getApiUrl(api.endpoints.adminAddRoute),\r\n                newRoute,\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            if (response.data && response.data.id) {\r\n                // Use the complete object returned from API\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    stops: [...prev.stops, response.data]\r\n                }));\r\n\r\n                setRoutes(prev => [...prev, response.data]);\r\n                setCurrentStopOrder(currentStopOrder + 1);\r\n\r\n                // Update the map to show the new route\r\n                fitRouteOnMap([...formData.stops, response.data]);\r\n            }\r\n\r\n            setIsAddingStop(false);\r\n        } catch (err) {\r\n            setError('Failed to add stop to route: ' + err.message);\r\n            console.error(\"Error adding stop to route:\", err);\r\n        }\r\n    };\r\n\r\n    const handleRemoveStop = async (routeId) => {\r\n        if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.delete(\r\n                getApiUrl(api.endpoints.adminDeleteRoute(routeId)),\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            // Update local state\r\n            const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\r\n\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: updatedStops\r\n            }));\r\n\r\n            setRoutes(prev => prev.filter(route => route.id !== routeId));\r\n\r\n            // Update the map\r\n            fitRouteOnMap(updatedStops);\r\n\r\n        } catch (err) {\r\n            setError('Error removing stop: ' + err.message);\r\n            console.error(\"Error removing stop from route:\", err);\r\n        }\r\n    };\r\n\r\n    const reorderStop = async (routeId, currentOrder, newOrder) => {\r\n        if (currentOrder === newOrder) return;\r\n\r\n        try {\r\n            const reorderedStops = [...formData.stops];\r\n\r\n            // Find stops that need order changes\r\n            const stopToMove = reorderedStops.find(s => s.id === routeId);\r\n\r\n            // Skip if stop not found\r\n            if (!stopToMove) return;\r\n\r\n            // Update the order\r\n            stopToMove.stop_order = newOrder;\r\n\r\n            // Reorder other stops to maintain sequence\r\n            reorderedStops.forEach(stop => {\r\n                if (stop.id !== routeId) {\r\n                    if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\r\n                        // Moving down - shift others up\r\n                        stop.stop_order -= 1;\r\n                    } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\r\n                        // Moving up - shift others down\r\n                        stop.stop_order += 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Update in the database - use the correct API endpoint\r\n            const updateResponse = await axios.put(\r\n                getApiUrl(api.endpoints.adminUpdateRoute(routeId)),\r\n                { stop_order: newOrder },\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n            \r\n            console.log('Route updated successfully:', updateResponse.data);\r\n\r\n            // Update other affected stops in the database\r\n            for (const stop of reorderedStops) {\r\n                if (stop.id !== routeId &&\r\n                    ((currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) ||\r\n                        (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder))) {\r\n                    await axios.put(\r\n                        getApiUrl(api.endpoints.adminUpdateRoute(stop.id)),\r\n                        { stop_order: stop.stop_order },\r\n                        { headers: { Authorization: `Bearer ${user.token}` } }\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Update local state with reordered stops\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: reorderedStops\r\n            }));\r\n\r\n            // Update routes state\r\n            setRoutes(prev => {\r\n                const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\r\n                return [...updatedRoutes, ...reorderedStops];\r\n            });\r\n            \r\n            // Refresh UI after all updates are done\r\n            setRefreshTrigger(prev => prev + 1);\r\n\r\n        } catch (err) {\r\n            setError('Error reordering stops: ' + err.message);\r\n            console.error(\"Error reordering stops:\", err);\r\n        }\r\n    };\r\n\r\n    const fitRouteOnMap = (routeStops) => {\r\n        if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\r\n\r\n        // Get all stop coordinates, ensuring we have proper numeric values\r\n        const stopPositions = routeStops.map(routeStop => {\r\n            const stop = stops.find(s => s.id === routeStop.bus_stop_id);\r\n            if (!stop) return null;\r\n\r\n            const lat = parseFloat(stop.latitude);\r\n            const lng = parseFloat(stop.longitude);\r\n            if (isNaN(lat) || isNaN(lng)) return null;\r\n\r\n            return [lat, lng];\r\n        }).filter(Boolean);\r\n\r\n        if (stopPositions.length === 0) return;\r\n\r\n        if (stopPositions.length === 1) {\r\n            // If only one stop, center on it\r\n            setMapCenter(stopPositions[0]);\r\n            setZoom(16);\r\n        } else {\r\n            // Calculate bounds for multiple stops\r\n            const minLat = Math.min(...stopPositions.map(pos => pos[0]));\r\n            const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\r\n            const minLng = Math.min(...stopPositions.map(pos => pos[1]));\r\n            const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\r\n\r\n            // Center the map on the middle of the route\r\n            setMapCenter([\r\n                minLat + (maxLat - minLat) / 2,\r\n                minLng + (maxLng - minLng) / 2\r\n            ]);\r\n\r\n            // Calculate zoom level based on distance\r\n            const latDiff = maxLat - minLat;\r\n            const lngDiff = maxLng - minLng;\r\n            const maxDiff = Math.max(latDiff, lngDiff);\r\n\r\n            // Simple zoom calculation, adjust as needed\r\n            if (maxDiff < 0.005) setZoom(16);\r\n            else if (maxDiff < 0.01) setZoom(15);\r\n            else if (maxDiff < 0.02) setZoom(14);\r\n            else setZoom(13);\r\n        }\r\n    };\r\n\r\n    const getStopById = (stopId) => {\r\n        return stops.find(stop => stop.id === stopId);\r\n    };\r\n\r\n    const getBusById = (busId) => {\r\n        return buses.find(bus => bus.id === busId);\r\n    };\r\n\r\n    // Add stop marker icon based on whether it's start, middle, or end\r\n    const getStopIcon = (stopOrder, totalStops) => {\r\n        const iconUrl = stopOrder === 1 ?\r\n            'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' :\r\n            (stopOrder === totalStops ?\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' :\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png');\r\n\r\n        return L.icon({\r\n            iconUrl,\r\n            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41]\r\n        });\r\n    };\r\n\r\n    if (loading && !buses.length && !stops.length) {\r\n        return <div>Loading route data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"route-management\">\r\n            <h2>Route Management</h2>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <div className=\"action-buttons\">\r\n                <button\r\n                    className=\"refresh-button\"\r\n                    onClick={() => setRefreshTrigger(prev => prev + 1)}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? 'Refreshing...' : 'Refresh Data'}\r\n                </button>\r\n                \r\n                <button\r\n                    onClick={() => {\r\n                        window.enableOSRM = !window.enableOSRM;\r\n                        setUseDirectRoutes(!useDirectRoutes);\r\n                        setRefreshTrigger(prev => prev + 1);\r\n                    }}\r\n                >\r\n                    {useDirectRoutes ? \"Try OSRM Routes\" : \"Use Direct Routes\"}\r\n                </button>\r\n                \r\n                <button onClick={() => setShowMapDebug(!showMapDebug)}>\r\n                    {showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"}\r\n                </button>\r\n            </div>\r\n            \r\n            {showMapDebug && (\r\n                <div className=\"debug-info\" style={{padding: '10px', backgroundColor: '#f0f0f0', margin: '10px 0', borderRadius: '5px'}}>\r\n                    <h4>Route Debug Information</h4>\r\n                    <p>Buses Loaded: {buses.length}</p>\r\n                    <p>Stops Loaded: {stops.length}</p>\r\n                    <p>Selected Bus: {selectedBus ? getBusById(selectedBus)?.name : 'None'}</p>\r\n                    <p>Route Stops: {formData.stops.length}</p>\r\n                    <p>Map Center: {mapCenter.join(', ')}</p>\r\n                    <button onClick={() => {\r\n                        window.routeDiagnostics.logState();\r\n                        console.log(\"Current formData:\", formData);\r\n                    }}>\r\n                        Log Debug Info to Console\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"route-management-content\">\r\n                <div className=\"bus-selector\">\r\n                    <h3>Select Bus to Manage Route</h3>\r\n                    <div className=\"bus-list\">\r\n                        {buses.map(bus => (\r\n                            <button\r\n                                key={bus.id}\r\n                                className={selectedBus === bus.id ? 'selected' : ''}\r\n                                onClick={() => handleBusSelect(bus.id)}\r\n                            >\r\n                                {bus.name}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedBus && (\r\n                    <div className=\"route-editor\">\r\n                        <h3>Route for {getBusById(selectedBus)?.name}</h3>\r\n\r\n                        {formData.stops.length === 0 ? (\r\n                            <p>No stops assigned to this route. Add stops below.</p>\r\n                        ) : (\r\n                            <table className=\"route-stops-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Order</th>\r\n                                        <th>Stop Name</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {[...formData.stops]\r\n                                        .sort((a, b) => a.stop_order - b.stop_order)\r\n                                        .map(routeStop => {\r\n                                            const stop = getStopById(routeStop.bus_stop_id);\r\n                                            return (\r\n                                                <tr key={routeStop.id}>\r\n                                                    <td>{routeStop.stop_order}</td>\r\n                                                    <td>{stop ? stop.name : 'Unknown Stop'}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order - 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === 1}\r\n                                                        >\r\n                                                            ↑\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order + 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === formData.stops.length}\r\n                                                        >\r\n                                                            ↓\r\n                                                        </button>\r\n                                                        <button onClick={() => handleRemoveStop(routeStop.id)}>\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n\r\n                        <div className=\"add-stop-section\">\r\n                            <button\r\n                                onClick={() => setIsAddingStop(!isAddingStop)}\r\n                                className=\"add-stop-button\"\r\n                            >\r\n                                {isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'}\r\n                            </button>\r\n\r\n                            {isAddingStop && (\r\n                                <div className=\"available-stops\">\r\n                                    <h4>Select a stop to add:</h4>\r\n                                    <div className=\"stops-grid\">\r\n                                        {stops\r\n                                            .filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id))\r\n                                            .map(stop => (\r\n                                                <button\r\n                                                    key={stop.id}\r\n                                                    onClick={() => handleAddStop(stop.id)}\r\n                                                    className=\"stop-option\"\r\n                                                >\r\n                                                    {stop.name}\r\n                                                </button>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"route-map-container\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoom}\r\n                        className=\"map-container map-container-large\"\r\n                        ref={mapRef}\r\n                        key={`map-${selectedBus || 'default'}-${refreshTrigger}`}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        <MapUpdater center={mapCenter} zoom={zoom} />\r\n\r\n                        {/* Add our road-based routes component */}\r\n                        {selectedBus && formData.stops && formData.stops.length >= 2 && (\r\n                            <RoadBasedRoutes stops={formData.stops} />\r\n                        )}\r\n\r\n                        {/* Display all stops on the map */}\r\n                        {stops.map(stop => {\r\n                            // Check if this stop is in the selected bus's route\r\n                            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\r\n                            const isInRoute = !!routeStopInfo;\r\n                            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\r\n                            const totalStops = formData.stops.length;\r\n\r\n                            return (\r\n                                <Marker\r\n                                    key={stop.id}\r\n                                    position={[stop.latitude, stop.longitude]}\r\n                                    icon={isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default()}\r\n                                >\r\n                                    <Popup>\r\n                                        <div>\r\n                                            <strong>{stop.name}</strong><br />\r\n\r\n                                            {isInRoute ? (\r\n                                                <span className=\"in-route\">\r\n                                                    Stop #{stopOrder} in route<br />\r\n                                                    <button onClick={() => handleRemoveStop(routeStopInfo.id)}>\r\n                                                        Remove from Route\r\n                                                    </button>\r\n                                                </span>\r\n                                            ) : (\r\n                                                selectedBus && isAddingStop && (\r\n                                                    <button onClick={() => handleAddStop(stop.id)}>\r\n                                                        Add to Route\r\n                                                    </button>\r\n                                                )\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                </Marker>\r\n                            );\r\n                        })}\r\n                    </MapContainer>\r\n                    \r\n                    {/* Route status indicator */}\r\n                    {selectedBus && (\r\n                        <div className=\"route-status\" style={{textAlign: 'center', marginTop: '10px'}}>\r\n                            <p>\r\n                                <strong>Route Status:</strong> {formData.stops.length < 2 \r\n                                    ? \"Add at least 2 stops to create a route\" \r\n                                    : `Route with ${formData.stops.length} stops`}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteManagement;\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAC9E,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAChC,OAAO,0DAA0D;AACjE,OAAOC,GAAG,IAAIC,SAAS,QAAQ,qBAAqB;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOJ,CAAC,CAACK,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3CR,CAAC,CAACK,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EACxBC,aAAa,EAAE,gEAAgE;EAC/EC,OAAO,EAAE,6DAA6D;EACtEC,SAAS,EAAE;AACf,CAAC,CAAC;AAGF,SAASC,uBAAuBA,CAAA,EAAG;EAC/B,IAAI,OAAOb,CAAC,KAAK,WAAW,IAAIA,CAAC,CAACc,OAAO,EAAE;IACvC;IACAd,CAAC,CAACc,OAAO,CAACC,SAAS,CAACR,SAAS,CAACS,OAAO,CAACC,kBAAkB,GAAG,KAAK;IAChEjB,CAAC,CAACc,OAAO,CAACI,OAAO,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;;IAE/B;IACA,IAAIlB,CAAC,CAACc,OAAO,CAACK,YAAY,IAAInB,CAAC,CAACc,OAAO,CAACK,YAAY,CAACZ,SAAS,EAAE;MAC5DP,CAAC,CAACc,OAAO,CAACK,YAAY,CAACZ,SAAS,CAACa,oBAAoB,GAAG,UAAUC,CAAC,EAAE;QACjEC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEF,CAAC,CAAC;QACzC;MACJ,CAAC;IACL;;IAEA;IACA,IAAIrB,CAAC,CAACc,OAAO,CAACU,IAAI,IAAIxB,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,EAAE;MAC5C,MAAMkB,kBAAkB,GAAGzB,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,CAACmB,WAAW;MAC/D1B,CAAC,CAACc,OAAO,CAACU,IAAI,CAACjB,SAAS,CAACmB,WAAW,GAAG,YAAY;QAC/C,IAAI;UACA;UACA,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACC,MAAM,IAAI,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE;YACjDJ,kBAAkB,CAACK,IAAI,CAAC,IAAI,CAAC;UACjC;QACJ,CAAC,CAAC,OAAOT,CAAC,EAAE;UACRC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;UACpD;UACA,IAAI,IAAI,CAACM,IAAI,IAAI,IAAI,CAACC,MAAM,EAAE;YAC1B,IAAI;cACA,IAAI,CAACD,IAAI,CAACI,WAAW,CAAC,IAAI,CAACH,MAAM,CAAC;YACtC,CAAC,CAAC,OAAOP,CAAC,EAAE;cACRC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEF,CAAC,CAAC;YACvD;UACJ;QACJ;MACJ,CAAC;IACL;EACJ;AACJ;;AAGA;AACA,SAASW,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EAClC,MAAMC,GAAG,GAAGrC,MAAM,CAAC,CAAC;EAEpBR,SAAS,CAAC,MAAM;IACZ,IAAI0C,MAAM,EAAE;MACRG,GAAG,CAACC,OAAO,CAACJ,MAAM,EAAEC,IAAI,IAAIE,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACL,MAAM,EAAEC,IAAI,EAAEE,GAAG,CAAC,CAAC;EAEvB,OAAO,IAAI;AACf;;AAGA;AAAAD,EAAA,CAbSH,UAAU;EAAA,QACHjC,MAAM;AAAA;AAAAwC,EAAA,GADbP,UAAU;AAcnB,SAASQ,eAAeA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,GAAA;EAChC,MAAMN,GAAG,GAAGrC,MAAM,CAAC,CAAC;EACpB,MAAM4C,UAAU,GAAGnD,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMoD,kBAAkB,GAAGpD,MAAM,CAAC,IAAI,CAAC;;EAEvC;EACA,MAAMqD,OAAO,GAAGpD,WAAW,CAAC,MAAM;IAC9B,IAAIkD,UAAU,CAACG,OAAO,EAAE;MACpB,IAAI;QACA;QACA,IAAIV,GAAG,EAAEA,GAAG,CAACW,aAAa,CAACJ,UAAU,CAACG,OAAO,CAAC;MAClD,CAAC,CAAC,OAAOzB,CAAC,EAAE;QACRC,OAAO,CAACC,IAAI,CAAC,yBAAyB,EAAEF,CAAC,CAAC;MAC9C;MACAsB,UAAU,CAACG,OAAO,GAAG,IAAI;IAC7B;;IAEA;IACA,IAAIF,kBAAkB,CAACE,OAAO,EAAE;MAC5B,IAAI;QACAF,kBAAkB,CAACE,OAAO,CAACE,WAAW,CAAC,CAAC;QACxC,IAAIZ,GAAG,EAAEA,GAAG,CAACL,WAAW,CAACa,kBAAkB,CAACE,OAAO,CAAC;MACxD,CAAC,CAAC,OAAOzB,CAAC,EAAE;QACRC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;MACxD;MACAuB,kBAAkB,CAACE,OAAO,GAAG,IAAI;IACrC;EACJ,CAAC,EAAE,CAACV,GAAG,CAAC,CAAC;;EAET;EACA7C,SAAS,CAAC,MAAM;IACZ;IACAsD,OAAO,CAAC,CAAC;IACT,IAAIT,GAAG,EAAE;MACL,IAAI;QACAQ,kBAAkB,CAACE,OAAO,GAAG9C,CAAC,CAACiD,UAAU,CAAC,CAAC,CAACC,KAAK,CAACd,GAAG,CAAC;QACtDd,OAAO,CAAC6B,GAAG,CAAC,4CAA4C,CAAC;MAC7D,CAAC,CAAC,OAAO9B,CAAC,EAAE;QACRC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEF,CAAC,CAAC;MAClD;IACJ;IAEA,OAAOwB,OAAO,CAAC,CAAC;EACpB,CAAC,EAAE,CAACT,GAAG,EAAES,OAAO,CAAC,CAAC;;EAElB;EACAtD,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,CAAC6C,GAAG,IAAI,CAACK,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;MACpC9B,OAAO,CAAC6B,GAAG,CAAC,0CAA0C,EAAE;QACpDE,MAAM,EAAE,CAAC,CAACjB,GAAG;QACbkB,UAAU,EAAE,CAAAb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,MAAM,KAAI;MACjC,CAAC,CAAC;MACF;IACJ;;IAEA;IACA,IAAIR,kBAAkB,CAACE,OAAO,EAAE;MAC5BF,kBAAkB,CAACE,OAAO,CAACE,WAAW,CAAC,CAAC;IAC5C;;IAEA;IACA,MAAMO,SAAS,GAAG,EAAE;IACpB,MAAMC,YAAY,GAAG,CAAC,GAAGf,KAAK,CAAC,CAACgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC;IAE3EtC,OAAO,CAAC6B,GAAG,CAAC,mCAAmC,EAAEK,YAAY,CAAC;;IAE9D;IACA,KAAK,MAAMK,SAAS,IAAIL,YAAY,EAAE;MAAA,IAAAM,iBAAA;MAClC,MAAMC,QAAQ,IAAAD,iBAAA,GAAGE,MAAM,CAACC,SAAS,cAAAH,iBAAA,uBAAhBA,iBAAA,CAAkBI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,SAAS,CAACQ,WAAW,CAAC;MAC5E,IAAIN,QAAQ,EAAE;QACV,MAAMO,GAAG,GAAGC,UAAU,CAACR,QAAQ,CAACS,QAAQ,CAAC;QACzC,MAAMC,GAAG,GAAGF,UAAU,CAACR,QAAQ,CAACW,SAAS,CAAC;QAC1C,IAAI,CAACC,KAAK,CAACL,GAAG,CAAC,IAAI,CAACK,KAAK,CAACF,GAAG,CAAC,EAAE;UAC5BlB,SAAS,CAACqB,IAAI,CAAC5E,CAAC,CAAC6E,MAAM,CAACP,GAAG,EAAEG,GAAG,CAAC,CAAC;QACtC;MACJ;IACJ;IAEAnD,OAAO,CAAC6B,GAAG,CAAC,sBAAsB,EAAEI,SAAS,CAACH,MAAM,CAAC;;IAErD;IACA,IAAIG,SAAS,CAACH,MAAM,GAAG,CAAC,EAAE;MACtB9B,OAAO,CAAC6B,GAAG,CAAC,sCAAsC,CAAC;MACnD;IACJ;;IAEA;IACA,IAAI;MACA;MACA,KAAK,IAAI2B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,SAAS,CAACH,MAAM,GAAG,CAAC,EAAE0B,CAAC,EAAE,EAAE;QAC3C,MAAMC,gBAAgB,GAAG,CAACxB,SAAS,CAACuB,CAAC,CAAC,EAAEvB,SAAS,CAACuB,CAAC,GAAG,CAAC,CAAC,CAAC;QACzD,MAAME,YAAY,GAAGF,CAAC,GAAG,CAAC,CAAC,CAAC;;QAE5B,MAAMG,cAAc,GAAGjF,CAAC,CAACc,OAAO,CAACoE,OAAO,CAAC;UACrC3B,SAAS,EAAEwB,gBAAgB;UAC3BI,kBAAkB,EAAE,KAAK;UACzBC,gBAAgB,EAAE,KAAK;UACvBC,iBAAiB,EAAE,KAAK;UACxBC,IAAI,EAAE,KAAK;UAAE;UACbC,WAAW,EAAE;YACTC,MAAM,EAAE,CAAC;cAAEC,KAAK,EAAE,SAAS;cAAEC,OAAO,EAAE,GAAG;cAAEC,MAAM,EAAE;YAAE,CAAC,CAAC;YACvDC,iBAAiB,EAAE,KAAK;YACxBC,qBAAqB,EAAE;UAC3B,CAAC;UACDC,YAAY,EAAEA,CAAA,KAAM,IAAI;UAAE;UAC1BC,YAAY,EAAE,KAAK;UACnBC,UAAU,EAAE;QAChB,CAAC,CAAC;;QAEF;QACAf,cAAc,CAAC/B,KAAK,CAACd,GAAG,CAAC;;QAEzB;QACA6C,cAAc,CAACgB,EAAE,CAAC,aAAa,EAAE,UAAS5E,CAAC,EAAE;UACzC,IAAIA,CAAC,CAAC6E,MAAM,IAAI7E,CAAC,CAAC6E,MAAM,CAAC9C,MAAM,GAAG,CAAC,EAAE;YACjC9B,OAAO,CAAC6B,GAAG,CAAC,iBAAiB6B,YAAY,SAAS,EAAE3D,CAAC,CAAC6E,MAAM,CAAC,CAAC,CAAC,CAAC;;YAEhE;YACA,MAAMC,WAAW,GAAG9E,CAAC,CAAC6E,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW;YAC3C,IAAIA,WAAW,IAAIA,WAAW,CAAC/C,MAAM,GAAG,CAAC,EAAE;cACvC,MAAMgD,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,WAAW,CAAC/C,MAAM,GAAG,CAAC,CAAC;cACnD,MAAMmD,QAAQ,GAAGJ,WAAW,CAACC,QAAQ,CAAC;cAEtC,MAAMI,MAAM,GAAGxG,CAAC,CAACwG,MAAM,CAAC,CAACD,QAAQ,CAACjC,GAAG,EAAEiC,QAAQ,CAAC9B,GAAG,CAAC,EAAE;gBAClDgC,IAAI,EAAEzG,CAAC,CAAC0G,OAAO,CAAC;kBACZC,IAAI,EAAE,uHAAuH3B,YAAY,QAAQ;kBACjJ4B,SAAS,EAAE,qBAAqB;kBAChCC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;kBAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;gBACvB,CAAC;cACL,CAAC,CAAC;cAEF,IAAIlE,kBAAkB,CAACE,OAAO,EAAE;gBAC5BF,kBAAkB,CAACE,OAAO,CAACiE,QAAQ,CAACP,MAAM,CAAC;cAC/C;YACJ;UACJ;QACJ,CAAC,CAAC;;QAEF;QACA,IAAI5D,kBAAkB,CAACE,OAAO,EAAE;UAC5BF,kBAAkB,CAACE,OAAO,CAACiE,QAAQ,CAAC9B,cAAc,CAAC;QACvD;MACJ;;MAEA;MACA,MAAM+B,kBAAkB,GAAGhH,CAAC,CAACc,OAAO,CAACoE,OAAO,CAAC;QACzC3B,SAAS,EAAEA,SAAS;QACpB4B,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE,KAAK;QACvBC,iBAAiB,EAAE,KAAK;QACxBC,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE;UACTC,MAAM,EAAE,CAAC;YAAEC,KAAK,EAAE,SAAS;YAAEC,OAAO,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAE,CAAC,CAAC;UACvDC,iBAAiB,EAAE,IAAI;UACvBC,qBAAqB,EAAE;QAC3B,CAAC;QACDC,YAAY,EAAEA,CAAA,KAAM,IAAI;QACxBC,YAAY,EAAE,KAAK;QACnBC,UAAU,EAAE;MAChB,CAAC,CAAC;MAEFgB,kBAAkB,CAAC9D,KAAK,CAACd,GAAG,CAAC;MAE7B,IAAIQ,kBAAkB,CAACE,OAAO,EAAE;QAC5BF,kBAAkB,CAACE,OAAO,CAACiE,QAAQ,CAACC,kBAAkB,CAAC;MAC3D;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ3F,OAAO,CAAC2F,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;;MAEpD;MACA,IAAIrE,kBAAkB,CAACE,OAAO,EAAE;QAC5B,MAAMoE,aAAa,GAAGlH,CAAC,CAACmH,QAAQ,CAAC5D,SAAS,EAAE;UACxCkC,KAAK,EAAE,SAAS;UAChBE,MAAM,EAAE,CAAC;UACTD,OAAO,EAAE,GAAG;UACZ0B,SAAS,EAAE;QACf,CAAC,CAAC;QAEFxE,kBAAkB,CAACE,OAAO,CAACiE,QAAQ,CAACG,aAAa,CAAC;;QAElD;QACA,KAAK,IAAIpC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGvB,SAAS,CAACH,MAAM,GAAG,CAAC,EAAE0B,CAAC,EAAE,EAAE;UAC3C,MAAMyB,QAAQ,GAAG,CACb,CAAChD,SAAS,CAACuB,CAAC,CAAC,CAACR,GAAG,GAAGf,SAAS,CAACuB,CAAC,GAAG,CAAC,CAAC,CAACR,GAAG,IAAI,CAAC,EAC7C,CAACf,SAAS,CAACuB,CAAC,CAAC,CAACL,GAAG,GAAGlB,SAAS,CAACuB,CAAC,GAAG,CAAC,CAAC,CAACL,GAAG,IAAI,CAAC,CAChD;UAED,MAAM+B,MAAM,GAAGxG,CAAC,CAACwG,MAAM,CAACD,QAAQ,EAAE;YAC9BE,IAAI,EAAEzG,CAAC,CAAC0G,OAAO,CAAC;cACZC,IAAI,EAAE,qHAAqH7B,CAAC,GAAG,CAAC,QAAQ;cACxI8B,SAAS,EAAE,qBAAqB;cAChCC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;cAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;YACvB,CAAC;UACL,CAAC,CAAC;UAEFlE,kBAAkB,CAACE,OAAO,CAACiE,QAAQ,CAACP,MAAM,CAAC;QAC/C;MACJ;IACJ;EACJ,CAAC,EAAE,CAACpE,GAAG,EAAEK,KAAK,EAAEI,OAAO,CAAC,CAAC;EAEzB,OAAO,IAAI;AACf;AAACH,GAAA,CA9MQF,eAAe;EAAA,QACRzC,MAAM;AAAA;AAAAsH,GAAA,GADb7E,eAAe;AAgNxB,SAAS8E,eAAeA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,GAAA;EAAA,IAAAC,WAAA,EAAAC,YAAA;EAC/B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtI,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuI,OAAO,EAAEC,UAAU,CAAC,GAAGxI,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC2H,KAAK,EAAEc,QAAQ,CAAC,GAAGzI,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC0I,WAAW,EAAEC,cAAc,CAAC,GAAG3I,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC4I,SAAS,EAAEC,YAAY,CAAC,GAAG7I,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAChE,MAAM,CAAC4C,IAAI,EAAEkG,OAAO,CAAC,GAAG9I,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM+I,MAAM,GAAG7I,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM,CAAC8I,cAAc,EAAEC,iBAAiB,CAAC,GAAGjJ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC4G,MAAM,EAAEsC,SAAS,CAAC,GAAGlJ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACmJ,eAAe,EAAEC,kBAAkB,CAAC,GAAGpJ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACqJ,YAAY,EAAEC,eAAe,CAAC,GAAGtJ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEzD,MAAM,CAACuJ,QAAQ,EAAEC,WAAW,CAAC,GAAGxJ,QAAQ,CAAC;IACrCyJ,MAAM,EAAE,EAAE;IACVtG,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAM,CAACuG,YAAY,EAAEC,eAAe,CAAC,GAAG3J,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4J,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG7J,QAAQ,CAAC,CAAC,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZ;IACAyE,MAAM,CAACoF,UAAU,GAAG,IAAI,CAAC,CAAC;IAC1BvI,uBAAuB,CAAC,CAAC;;IAEzB;IACAmD,MAAM,CAACqF,gBAAgB,GAAG;MACtB5G,KAAK,EAAE,EAAE;MACTc,SAAS,EAAE,EAAE;MACb+F,QAAQ,EAAEA,CAAA,KAAM;QAAA,IAAAC,kBAAA;QACZjI,OAAO,CAAC6B,GAAG,CAAC,oBAAoB,EAAE;UAC9BV,KAAK,EAAE,EAAA8G,kBAAA,GAAAvF,MAAM,CAACC,SAAS,cAAAsF,kBAAA,uBAAhBA,kBAAA,CAAkBnG,MAAM,KAAI,CAAC;UACpC4E,WAAW;UACXwB,UAAU,EAAEX,QAAQ,CAACpG,KAAK,CAACW,MAAM;UACjCqG,cAAc,EAAE,CAAC,CAACpB,MAAM,CAACvF;QAC7B,CAAC,CAAC;MACN;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENvD,SAAS,CAAC,MAAM;IACZ,MAAMmK,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA5B,UAAU,CAAC,IAAI,CAAC;QAChBC,QAAQ,CAAC,EAAE,CAAC;;QAEZ;QACA,IAAI;UACA,MAAM4B,aAAa,GAAG,MAAMjK,KAAK,CAACkK,GAAG,CAAC1J,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAACC,UAAU,CAAC,EAAE;YACvEC,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;YAAG,CAAC;YAClD/I,OAAO,EAAE;UACb,CAAC,CAAC;UACF0G,QAAQ,CAAC+B,aAAa,CAACO,IAAI,CAAC;UAC5B5I,OAAO,CAAC6B,GAAG,CAAC,0BAA0B,EAAEwG,aAAa,CAACO,IAAI,CAAC9G,MAAM,CAAC;QACtE,CAAC,CAAC,OAAO+G,GAAG,EAAE;UACVpC,QAAQ,CAAC,yBAAyB,GAAGoC,GAAG,CAACC,OAAO,CAAC;UACjD9I,OAAO,CAAC2F,KAAK,CAAC,kCAAkC,EAAEkD,GAAG,CAAC;UACtDvC,QAAQ,CAAC,CAAC;YAAExD,EAAE,EAAE,OAAO;YAAEiG,IAAI,EAAE;UAAa,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD;;QAEA;QACA,IAAI;UACA,MAAMC,aAAa,GAAG,MAAM5K,KAAK,CAACkK,GAAG,CAAC1J,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAACU,UAAU,CAAC,EAAE;YACvER,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;YAAG,CAAC;YAClD/I,OAAO,EAAE;UACb,CAAC,CAAC;UACFsJ,QAAQ,CAACF,aAAa,CAACJ,IAAI,CAAC;UAC5B5I,OAAO,CAAC6B,GAAG,CAAC,0BAA0B,EAAEmH,aAAa,CAACJ,IAAI,CAAC9G,MAAM,CAAC;QACtE,CAAC,CAAC,OAAO+G,GAAG,EAAE;UACVpC,QAAQ,CAAC,yBAAyB,GAAGoC,GAAG,CAACC,OAAO,CAAC;UACjD9I,OAAO,CAAC2F,KAAK,CAAC,kCAAkC,EAAEkD,GAAG,CAAC;UACtDK,QAAQ,CAAC,CAAC;YACNpG,EAAE,EAAE,OAAO;YACXiG,IAAI,EAAE,WAAW;YACjB7F,QAAQ,EAAE,OAAO;YACjBE,SAAS,EAAE;UACf,CAAC,CAAC,CAAC,CAAC,CAAC;QACT;;QAEA;QACA,IAAI;UACA,MAAM+F,cAAc,GAAG,MAAM/K,KAAK,CAACkK,GAAG,CAAC1J,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAACa,WAAW,CAAC,EAAE;YACzEX,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;YAAG,CAAC;YAClD/I,OAAO,EAAE;UACb,CAAC,CAAC;UACF;UACA,MAAMyJ,aAAa,GAAGF,cAAc,CAACP,IAAI;UACzC1B,SAAS,CAACmC,aAAa,CAAC;UACxBrJ,OAAO,CAAC6B,GAAG,CAAC,gBAAgB,EAAEwH,aAAa,CAACvH,MAAM,CAAC;QACvD,CAAC,CAAC,OAAO+G,GAAG,EAAE;UACVpC,QAAQ,CAAC,0BAA0B,GAAGoC,GAAG,CAACC,OAAO,CAAC;UAClD9I,OAAO,CAAC2F,KAAK,CAAC,wBAAwB,EAAEkD,GAAG,CAAC;UAC5C;UACA3B,SAAS,CAAC,EAAE,CAAC;QACjB;MACJ,CAAC,CAAC,OAAO2B,GAAG,EAAE;QACVpC,QAAQ,CAAC,uBAAuB,GAAGoC,GAAG,CAACC,OAAO,CAAC;MACnD,CAAC,SAAS;QACNtC,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED4B,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACnC,IAAI,CAAC0C,KAAK,EAAE3B,cAAc,CAAC,CAAC;EAEhC/I,SAAS,CAAC,MAAM;IACZ,IAAIkD,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;MAC3BY,MAAM,CAACC,SAAS,GAAGxB,KAAK;IAC5B;EACJ,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAGX,MAAMmI,eAAe,GAAG,MAAOC,KAAK,IAAK;IACrC,IAAI;MACA5C,cAAc,CAAC4C,KAAK,CAAC;MACrB/C,UAAU,CAAC,IAAI,CAAC;MAChBC,QAAQ,CAAC,EAAE,CAAC;MAEZ,IAAI;QACA,MAAM+C,QAAQ,GAAG,MAAMpL,KAAK,CAACkK,GAAG,CAC5B1J,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAACkB,cAAc,CAACF,KAAK,CAAC,CAAC,EAC9C;UAAEd,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;UAAG;QAAE,CACzD,CAAC;QAED,MAAMe,SAAS,GAAGF,QAAQ,CAACZ,IAAI;QAC/B5I,OAAO,CAAC6B,GAAG,CAAC,uBAAuB,EAAE0H,KAAK,EAAEG,SAAS,CAAC;QAEtDlC,WAAW,CAAC;UACRC,MAAM,EAAE8B,KAAK;UACbpI,KAAK,EAAEuI;QACX,CAAC,CAAC;;QAEF;QACA7B,mBAAmB,CACf6B,SAAS,IAAIA,SAAS,CAAC5H,MAAM,GAAG,CAAC,GAC3BiD,IAAI,CAAC4E,GAAG,CAAC,GAAGD,SAAS,CAAC5I,GAAG,CAAC8I,IAAI,IAAIA,IAAI,CAACtH,UAAU,CAAC,CAAC,GAAG,CAAC,GACvD,CACV,CAAC;;QAED;QACA,IAAIoH,SAAS,IAAIA,SAAS,CAAC5H,MAAM,GAAG,CAAC,EAAE;UACnC+H,aAAa,CAACH,SAAS,CAAC;QAC5B;MACJ,CAAC,CAAC,OAAOb,GAAG,EAAE;QACVpC,QAAQ,CAAC,6BAA6B,GAAGoC,GAAG,CAACC,OAAO,CAAC;QACrD9I,OAAO,CAAC2F,KAAK,CAAC,gCAAgC,EAAEkD,GAAG,CAAC;MACxD;IACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;MACVpC,QAAQ,CAAC,kCAAkC,GAAGoC,GAAG,CAACC,OAAO,CAAC;IAC9D,CAAC,SAAS;MACNtC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMsD,aAAa,GAAG,MAAOC,MAAM,IAAK;IACpC,IAAI;MACAtD,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAMmD,IAAI,GAAGzI,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKiH,MAAM,CAAC;MAC7C,IAAI,CAACH,IAAI,EAAE;QACP,MAAM,IAAII,KAAK,CAAC,gBAAgB,CAAC;MACrC;;MAEA;MACA,MAAMC,QAAQ,GAAG;QACbxC,MAAM,EAAEf,WAAW;QACnB3D,WAAW,EAAEgH,MAAM;QACnBzH,UAAU,EAAEsF;MAChB,CAAC;MAED,MAAM4B,QAAQ,GAAG,MAAMpL,KAAK,CAAC8L,IAAI,CAC7BtL,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAAC4B,aAAa,CAAC,EACtCF,QAAQ,EACR;QAAExB,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;QAAG;MAAE,CACzD,CAAC;MAED,IAAIa,QAAQ,CAACZ,IAAI,IAAIY,QAAQ,CAACZ,IAAI,CAAC9F,EAAE,EAAE;QACnC;QACA0E,WAAW,CAAC4C,IAAI,KAAK;UACjB,GAAGA,IAAI;UACPjJ,KAAK,EAAE,CAAC,GAAGiJ,IAAI,CAACjJ,KAAK,EAAEqI,QAAQ,CAACZ,IAAI;QACxC,CAAC,CAAC,CAAC;QAEH1B,SAAS,CAACkD,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEZ,QAAQ,CAACZ,IAAI,CAAC,CAAC;QAC3Cf,mBAAmB,CAACD,gBAAgB,GAAG,CAAC,CAAC;;QAEzC;QACAiC,aAAa,CAAC,CAAC,GAAGtC,QAAQ,CAACpG,KAAK,EAAEqI,QAAQ,CAACZ,IAAI,CAAC,CAAC;MACrD;MAEAjB,eAAe,CAAC,KAAK,CAAC;IAC1B,CAAC,CAAC,OAAOkB,GAAG,EAAE;MACVpC,QAAQ,CAAC,+BAA+B,GAAGoC,GAAG,CAACC,OAAO,CAAC;MACvD9I,OAAO,CAAC2F,KAAK,CAAC,6BAA6B,EAAEkD,GAAG,CAAC;IACrD;EACJ,CAAC;EAED,MAAMwB,gBAAgB,GAAG,MAAOC,OAAO,IAAK;IACxC,IAAI,CAAC5H,MAAM,CAAC6H,OAAO,CAAC,2DAA2D,CAAC,EAAE;MAC9E;IACJ;IAEA,IAAI;MACA,MAAMnM,KAAK,CAACoM,MAAM,CACd5L,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAACkC,gBAAgB,CAACH,OAAO,CAAC,CAAC,EAClD;QAAE7B,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;QAAG;MAAE,CACzD,CAAC;;MAED;MACA,MAAM+B,YAAY,GAAGnD,QAAQ,CAACpG,KAAK,CAACwJ,MAAM,CAACf,IAAI,IAAIA,IAAI,CAAC9G,EAAE,KAAKwH,OAAO,CAAC;MAEvE9C,WAAW,CAAC4C,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPjJ,KAAK,EAAEuJ;MACX,CAAC,CAAC,CAAC;MAEHxD,SAAS,CAACkD,IAAI,IAAIA,IAAI,CAACO,MAAM,CAACC,KAAK,IAAIA,KAAK,CAAC9H,EAAE,KAAKwH,OAAO,CAAC,CAAC;;MAE7D;MACAT,aAAa,CAACa,YAAY,CAAC;IAE/B,CAAC,CAAC,OAAO7B,GAAG,EAAE;MACVpC,QAAQ,CAAC,uBAAuB,GAAGoC,GAAG,CAACC,OAAO,CAAC;MAC/C9I,OAAO,CAAC2F,KAAK,CAAC,iCAAiC,EAAEkD,GAAG,CAAC;IACzD;EACJ,CAAC;EAED,MAAMgC,WAAW,GAAG,MAAAA,CAAOP,OAAO,EAAEQ,YAAY,EAAEC,QAAQ,KAAK;IAC3D,IAAID,YAAY,KAAKC,QAAQ,EAAE;IAE/B,IAAI;MACA,MAAMC,cAAc,GAAG,CAAC,GAAGzD,QAAQ,CAACpG,KAAK,CAAC;;MAE1C;MACA,MAAM8J,UAAU,GAAGD,cAAc,CAACpI,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKwH,OAAO,CAAC;;MAE7D;MACA,IAAI,CAACW,UAAU,EAAE;;MAEjB;MACAA,UAAU,CAAC3I,UAAU,GAAGyI,QAAQ;;MAEhC;MACAC,cAAc,CAACE,OAAO,CAACtB,IAAI,IAAI;QAC3B,IAAIA,IAAI,CAAC9G,EAAE,KAAKwH,OAAO,EAAE;UACrB,IAAIQ,YAAY,GAAGC,QAAQ,IAAInB,IAAI,CAACtH,UAAU,GAAGwI,YAAY,IAAIlB,IAAI,CAACtH,UAAU,IAAIyI,QAAQ,EAAE;YAC1F;YACAnB,IAAI,CAACtH,UAAU,IAAI,CAAC;UACxB,CAAC,MAAM,IAAIwI,YAAY,GAAGC,QAAQ,IAAInB,IAAI,CAACtH,UAAU,IAAIyI,QAAQ,IAAInB,IAAI,CAACtH,UAAU,GAAGwI,YAAY,EAAE;YACjG;YACAlB,IAAI,CAACtH,UAAU,IAAI,CAAC;UACxB;QACJ;MACJ,CAAC,CAAC;;MAEF;MACA,MAAM6I,cAAc,GAAG,MAAM/M,KAAK,CAACgN,GAAG,CAClCxM,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAAC8C,gBAAgB,CAACf,OAAO,CAAC,CAAC,EAClD;QAAEhI,UAAU,EAAEyI;MAAS,CAAC,EACxB;QAAEtC,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;QAAG;MAAE,CACzD,CAAC;MAED3I,OAAO,CAAC6B,GAAG,CAAC,6BAA6B,EAAEsJ,cAAc,CAACvC,IAAI,CAAC;;MAE/D;MACA,KAAK,MAAMgB,IAAI,IAAIoB,cAAc,EAAE;QAC/B,IAAIpB,IAAI,CAAC9G,EAAE,KAAKwH,OAAO,KACjBQ,YAAY,GAAGC,QAAQ,IAAInB,IAAI,CAACtH,UAAU,GAAGwI,YAAY,IAAIlB,IAAI,CAACtH,UAAU,IAAIyI,QAAQ,IACrFD,YAAY,GAAGC,QAAQ,IAAInB,IAAI,CAACtH,UAAU,IAAIyI,QAAQ,IAAInB,IAAI,CAACtH,UAAU,GAAGwI,YAAa,CAAC,EAAE;UACjG,MAAM1M,KAAK,CAACgN,GAAG,CACXxM,SAAS,CAACD,GAAG,CAAC4J,SAAS,CAAC8C,gBAAgB,CAACzB,IAAI,CAAC9G,EAAE,CAAC,CAAC,EAClD;YAAER,UAAU,EAAEsH,IAAI,CAACtH;UAAW,CAAC,EAC/B;YAAEmG,OAAO,EAAE;cAAEC,aAAa,EAAE,UAAUzC,IAAI,CAAC0C,KAAK;YAAG;UAAE,CACzD,CAAC;QACL;MACJ;;MAEA;MACAnB,WAAW,CAAC4C,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPjJ,KAAK,EAAE6J;MACX,CAAC,CAAC,CAAC;;MAEH;MACA9D,SAAS,CAACkD,IAAI,IAAI;QACd,MAAMkB,aAAa,GAAGlB,IAAI,CAACO,MAAM,CAACY,CAAC,IAAI,CAACP,cAAc,CAACQ,IAAI,CAAC3I,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKyI,CAAC,CAACzI,EAAE,CAAC,CAAC;QAChF,OAAO,CAAC,GAAGwI,aAAa,EAAE,GAAGN,cAAc,CAAC;MAChD,CAAC,CAAC;;MAEF;MACA/D,iBAAiB,CAACmD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;IAEvC,CAAC,CAAC,OAAOvB,GAAG,EAAE;MACVpC,QAAQ,CAAC,0BAA0B,GAAGoC,GAAG,CAACC,OAAO,CAAC;MAClD9I,OAAO,CAAC2F,KAAK,CAAC,yBAAyB,EAAEkD,GAAG,CAAC;IACjD;EACJ,CAAC;EAED,MAAMgB,aAAa,GAAI3B,UAAU,IAAK;IAClC,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACpG,MAAM,KAAK,CAAC,IAAI,CAACiF,MAAM,CAACvF,OAAO,EAAE;;IAE/D;IACA,MAAMiK,aAAa,GAAGvD,UAAU,CAACpH,GAAG,CAACyB,SAAS,IAAI;MAC9C,MAAMqH,IAAI,GAAGzI,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKP,SAAS,CAACQ,WAAW,CAAC;MAC5D,IAAI,CAAC6G,IAAI,EAAE,OAAO,IAAI;MAEtB,MAAM5G,GAAG,GAAGC,UAAU,CAAC2G,IAAI,CAAC1G,QAAQ,CAAC;MACrC,MAAMC,GAAG,GAAGF,UAAU,CAAC2G,IAAI,CAACxG,SAAS,CAAC;MACtC,IAAIC,KAAK,CAACL,GAAG,CAAC,IAAIK,KAAK,CAACF,GAAG,CAAC,EAAE,OAAO,IAAI;MAEzC,OAAO,CAACH,GAAG,EAAEG,GAAG,CAAC;IACrB,CAAC,CAAC,CAACwH,MAAM,CAACe,OAAO,CAAC;IAElB,IAAID,aAAa,CAAC3J,MAAM,KAAK,CAAC,EAAE;IAEhC,IAAI2J,aAAa,CAAC3J,MAAM,KAAK,CAAC,EAAE;MAC5B;MACA+E,YAAY,CAAC4E,aAAa,CAAC,CAAC,CAAC,CAAC;MAC9B3E,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,MAAM;MACH;MACA,MAAM6E,MAAM,GAAG5G,IAAI,CAAC6G,GAAG,CAAC,GAAGH,aAAa,CAAC3K,GAAG,CAAC+K,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMC,MAAM,GAAG/G,IAAI,CAAC4E,GAAG,CAAC,GAAG8B,aAAa,CAAC3K,GAAG,CAAC+K,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAME,MAAM,GAAGhH,IAAI,CAAC6G,GAAG,CAAC,GAAGH,aAAa,CAAC3K,GAAG,CAAC+K,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMG,MAAM,GAAGjH,IAAI,CAAC4E,GAAG,CAAC,GAAG8B,aAAa,CAAC3K,GAAG,CAAC+K,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5D;MACAhF,YAAY,CAAC,CACT8E,MAAM,GAAG,CAACG,MAAM,GAAGH,MAAM,IAAI,CAAC,EAC9BI,MAAM,GAAG,CAACC,MAAM,GAAGD,MAAM,IAAI,CAAC,CACjC,CAAC;;MAEF;MACA,MAAME,OAAO,GAAGH,MAAM,GAAGH,MAAM;MAC/B,MAAMO,OAAO,GAAGF,MAAM,GAAGD,MAAM;MAC/B,MAAMI,OAAO,GAAGpH,IAAI,CAAC4E,GAAG,CAACsC,OAAO,EAAEC,OAAO,CAAC;;MAE1C;MACA,IAAIC,OAAO,GAAG,KAAK,EAAErF,OAAO,CAAC,EAAE,CAAC,CAAC,KAC5B,IAAIqF,OAAO,GAAG,IAAI,EAAErF,OAAO,CAAC,EAAE,CAAC,CAAC,KAChC,IAAIqF,OAAO,GAAG,IAAI,EAAErF,OAAO,CAAC,EAAE,CAAC,CAAC,KAChCA,OAAO,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMsF,WAAW,GAAIrC,MAAM,IAAK;IAC5B,OAAO5I,KAAK,CAACyB,IAAI,CAACgH,IAAI,IAAIA,IAAI,CAAC9G,EAAE,KAAKiH,MAAM,CAAC;EACjD,CAAC;EAED,MAAMsC,UAAU,GAAI9C,KAAK,IAAK;IAC1B,OAAOlD,KAAK,CAACzD,IAAI,CAAC0J,GAAG,IAAIA,GAAG,CAACxJ,EAAE,KAAKyG,KAAK,CAAC;EAC9C,CAAC;;EAED;EACA,MAAMgD,WAAW,GAAGA,CAACC,SAAS,EAAEC,UAAU,KAAK;IAC3C,MAAMpN,OAAO,GAAGmN,SAAS,KAAK,CAAC,GAC3B,qGAAqG,GACpGA,SAAS,KAAKC,UAAU,GACrB,mGAAmG,GACnG,oGAAqG;IAE7G,OAAO/N,CAAC,CAACyG,IAAI,CAAC;MACV9F,OAAO;MACPC,SAAS,EAAE,+EAA+E;MAC1FiG,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MACpBkH,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;MACrBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;IACvB,CAAC,CAAC;EACN,CAAC;EAED,IAAIpG,OAAO,IAAI,CAACF,KAAK,CAACvE,MAAM,IAAI,CAACX,KAAK,CAACW,MAAM,EAAE;IAC3C,oBAAOhD,OAAA;MAAA8N,QAAA,EAAK;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC3C;EAEA,oBACIlO,OAAA;IAAKwG,SAAS,EAAC,kBAAkB;IAAAsH,QAAA,gBAC7B9N,OAAA;MAAA8N,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxBrH,KAAK,iBAAI7G,OAAA;MAAKwG,SAAS,EAAC,eAAe;MAAAsH,QAAA,EAAEjH;IAAK;MAAAkH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtDlO,OAAA;MAAKwG,SAAS,EAAC,gBAAgB;MAAAsH,QAAA,gBAC3B9N,OAAA;QACIwG,SAAS,EAAC,gBAAgB;QAC1B2H,OAAO,EAAEA,CAAA,KAAMhG,iBAAiB,CAACmD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAE;QACnD8C,QAAQ,EAAE3G,OAAQ;QAAAqG,QAAA,EAEjBrG,OAAO,GAAG,eAAe,GAAG;MAAc;QAAAsG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eAETlO,OAAA;QACImO,OAAO,EAAEA,CAAA,KAAM;UACXvK,MAAM,CAACoF,UAAU,GAAG,CAACpF,MAAM,CAACoF,UAAU;UACtCV,kBAAkB,CAAC,CAACD,eAAe,CAAC;UACpCF,iBAAiB,CAACmD,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;QACvC,CAAE;QAAAwC,QAAA,EAEDzF,eAAe,GAAG,iBAAiB,GAAG;MAAmB;QAAA0F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eAETlO,OAAA;QAAQmO,OAAO,EAAEA,CAAA,KAAM3F,eAAe,CAAC,CAACD,YAAY,CAAE;QAAAuF,QAAA,EACjDvF,YAAY,GAAG,iBAAiB,GAAG;MAAiB;QAAAwF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EAEL3F,YAAY,iBACTvI,OAAA;MAAKwG,SAAS,EAAC,YAAY;MAAC6H,KAAK,EAAE;QAACC,OAAO,EAAE,MAAM;QAAEC,eAAe,EAAE,SAAS;QAAEC,MAAM,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAK,CAAE;MAAAX,QAAA,gBACpH9N,OAAA;QAAA8N,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChClO,OAAA;QAAA8N,QAAA,GAAG,gBAAc,EAACvG,KAAK,CAACvE,MAAM;MAAA;QAAA+K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnClO,OAAA;QAAA8N,QAAA,GAAG,gBAAc,EAACzL,KAAK,CAACW,MAAM;MAAA;QAAA+K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnClO,OAAA;QAAA8N,QAAA,GAAG,gBAAc,EAAClG,WAAW,IAAAP,WAAA,GAAGkG,UAAU,CAAC3F,WAAW,CAAC,cAAAP,WAAA,uBAAvBA,WAAA,CAAyB4C,IAAI,GAAG,MAAM;MAAA;QAAA8D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ElO,OAAA;QAAA8N,QAAA,GAAG,eAAa,EAACrF,QAAQ,CAACpG,KAAK,CAACW,MAAM;MAAA;QAAA+K,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3ClO,OAAA;QAAA8N,QAAA,GAAG,cAAY,EAAChG,SAAS,CAAC4G,IAAI,CAAC,IAAI,CAAC;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzClO,OAAA;QAAQmO,OAAO,EAAEA,CAAA,KAAM;UACnBvK,MAAM,CAACqF,gBAAgB,CAACC,QAAQ,CAAC,CAAC;UAClChI,OAAO,CAAC6B,GAAG,CAAC,mBAAmB,EAAE0F,QAAQ,CAAC;QAC9C,CAAE;QAAAqF,QAAA,EAAC;MAEH;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,eAEDlO,OAAA;MAAKwG,SAAS,EAAC,0BAA0B;MAAAsH,QAAA,gBACrC9N,OAAA;QAAKwG,SAAS,EAAC,cAAc;QAAAsH,QAAA,gBACzB9N,OAAA;UAAA8N,QAAA,EAAI;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnClO,OAAA;UAAKwG,SAAS,EAAC,UAAU;UAAAsH,QAAA,EACpBvG,KAAK,CAACvF,GAAG,CAACwL,GAAG,iBACVxN,OAAA;YAEIwG,SAAS,EAAEoB,WAAW,KAAK4F,GAAG,CAACxJ,EAAE,GAAG,UAAU,GAAG,EAAG;YACpDmK,OAAO,EAAEA,CAAA,KAAM3D,eAAe,CAACgD,GAAG,CAACxJ,EAAE,CAAE;YAAA8J,QAAA,EAEtCN,GAAG,CAACvD;UAAI,GAJJuD,GAAG,CAACxJ,EAAE;YAAA+J,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKP,CACX;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAELtG,WAAW,iBACR5H,OAAA;QAAKwG,SAAS,EAAC,cAAc;QAAAsH,QAAA,gBACzB9N,OAAA;UAAA8N,QAAA,GAAI,YAAU,GAAAxG,YAAA,GAACiG,UAAU,CAAC3F,WAAW,CAAC,cAAAN,YAAA,uBAAvBA,YAAA,CAAyB2C,IAAI;QAAA;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAEjDzF,QAAQ,CAACpG,KAAK,CAACW,MAAM,KAAK,CAAC,gBACxBhD,OAAA;UAAA8N,QAAA,EAAG;QAAiD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,gBAExDlO,OAAA;UAAOwG,SAAS,EAAC,mBAAmB;UAAAsH,QAAA,gBAChC9N,OAAA;YAAA8N,QAAA,eACI9N,OAAA;cAAA8N,QAAA,gBACI9N,OAAA;gBAAA8N,QAAA,EAAI;cAAK;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACdlO,OAAA;gBAAA8N,QAAA,EAAI;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAClBlO,OAAA;gBAAA8N,QAAA,EAAI;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eACRlO,OAAA;YAAA8N,QAAA,EACK,CAAC,GAAGrF,QAAQ,CAACpG,KAAK,CAAC,CACfgB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACE,UAAU,GAAGD,CAAC,CAACC,UAAU,CAAC,CAC3CxB,GAAG,CAACyB,SAAS,IAAI;cACd,MAAMqH,IAAI,GAAGwC,WAAW,CAAC7J,SAAS,CAACQ,WAAW,CAAC;cAC/C,oBACIjE,OAAA;gBAAA8N,QAAA,gBACI9N,OAAA;kBAAA8N,QAAA,EAAKrK,SAAS,CAACD;gBAAU;kBAAAuK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC/BlO,OAAA;kBAAA8N,QAAA,EAAKhD,IAAI,GAAGA,IAAI,CAACb,IAAI,GAAG;gBAAc;kBAAA8D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eAC5ClO,OAAA;kBAAA8N,QAAA,gBACI9N,OAAA;oBACImO,OAAO,EAAEA,CAAA,KAAMpC,WAAW,CACtBtI,SAAS,CAACO,EAAE,EACZP,SAAS,CAACD,UAAU,EACpBC,SAAS,CAACD,UAAU,GAAG,CAC3B,CAAE;oBACF4K,QAAQ,EAAE3K,SAAS,CAACD,UAAU,KAAK,CAAE;oBAAAsK,QAAA,EACxC;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTlO,OAAA;oBACImO,OAAO,EAAEA,CAAA,KAAMpC,WAAW,CACtBtI,SAAS,CAACO,EAAE,EACZP,SAAS,CAACD,UAAU,EACpBC,SAAS,CAACD,UAAU,GAAG,CAC3B,CAAE;oBACF4K,QAAQ,EAAE3K,SAAS,CAACD,UAAU,KAAKiF,QAAQ,CAACpG,KAAK,CAACW,MAAO;oBAAA8K,QAAA,EAC5D;kBAED;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTlO,OAAA;oBAAQmO,OAAO,EAAEA,CAAA,KAAM5C,gBAAgB,CAAC9H,SAAS,CAACO,EAAE,CAAE;oBAAA8J,QAAA,EAAC;kBAEvD;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACT,CAAC;cAAA,GA3BAzK,SAAS,CAACO,EAAE;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OA4BjB,CAAC;YAEb,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACV,eAEDlO,OAAA;UAAKwG,SAAS,EAAC,kBAAkB;UAAAsH,QAAA,gBAC7B9N,OAAA;YACImO,OAAO,EAAEA,CAAA,KAAMtF,eAAe,CAAC,CAACD,YAAY,CAAE;YAC9CpC,SAAS,EAAC,iBAAiB;YAAAsH,QAAA,EAE1BlF,YAAY,GAAG,oBAAoB,GAAG;UAAmB;YAAAmF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD,CAAC,EAERtF,YAAY,iBACT5I,OAAA;YAAKwG,SAAS,EAAC,iBAAiB;YAAAsH,QAAA,gBAC5B9N,OAAA;cAAA8N,QAAA,EAAI;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC9BlO,OAAA;cAAKwG,SAAS,EAAC,YAAY;cAAAsH,QAAA,EACtBzL,KAAK,CACDwJ,MAAM,CAACf,IAAI,IAAI,CAACrC,QAAQ,CAACpG,KAAK,CAACqK,IAAI,CAAC3I,CAAC,IAAIA,CAAC,CAACE,WAAW,KAAK6G,IAAI,CAAC9G,EAAE,CAAC,CAAC,CACpEhC,GAAG,CAAC8I,IAAI,iBACL9K,OAAA;gBAEImO,OAAO,EAAEA,CAAA,KAAMnD,aAAa,CAACF,IAAI,CAAC9G,EAAE,CAAE;gBACtCwC,SAAS,EAAC,aAAa;gBAAAsH,QAAA,EAEtBhD,IAAI,CAACb;cAAI,GAJLa,IAAI,CAAC9G,EAAE;gBAAA+J,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAKR,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,eAEDlO,OAAA;QAAKwG,SAAS,EAAC,qBAAqB;QAAAsH,QAAA,gBAChC9N,OAAA,CAACT,YAAY;UACTsC,MAAM,EAAEiG,SAAU;UAClBhG,IAAI,EAAEA,IAAK;UACX0E,SAAS,EAAC,mCAAmC;UAC7CmI,GAAG,EAAE1G,MAAO;UAAA6F,QAAA,gBAGZ9N,OAAA,CAACR,SAAS;YACNoP,WAAW,EAAC,yFAAyF;YACrGC,GAAG,EAAC;UAAoD;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3D,CAAC,eAEFlO,OAAA,CAAC4B,UAAU;YAACC,MAAM,EAAEiG,SAAU;YAAChG,IAAI,EAAEA;UAAK;YAAAiM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAG5CtG,WAAW,IAAIa,QAAQ,CAACpG,KAAK,IAAIoG,QAAQ,CAACpG,KAAK,CAACW,MAAM,IAAI,CAAC,iBACxDhD,OAAA,CAACoC,eAAe;YAACC,KAAK,EAAEoG,QAAQ,CAACpG;UAAM;YAAA0L,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC5C,EAGA7L,KAAK,CAACL,GAAG,CAAC8I,IAAI,IAAI;YACf;YACA,MAAMgE,aAAa,GAAGlH,WAAW,IAAIa,QAAQ,CAACpG,KAAK,CAACyB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACE,WAAW,KAAK6G,IAAI,CAAC9G,EAAE,CAAC;YACxF,MAAM+K,SAAS,GAAG,CAAC,CAACD,aAAa;YACjC,MAAMpB,SAAS,GAAGqB,SAAS,GAAGD,aAAa,CAACtL,UAAU,GAAG,IAAI;YAC7D,MAAMmK,UAAU,GAAGlF,QAAQ,CAACpG,KAAK,CAACW,MAAM;YAExC,oBACIhD,OAAA,CAACP,MAAM;cAEHuP,QAAQ,EAAE,CAAClE,IAAI,CAAC1G,QAAQ,EAAE0G,IAAI,CAACxG,SAAS,CAAE;cAC1C+B,IAAI,EAAE0I,SAAS,GAAGtB,WAAW,CAACC,SAAS,EAAEC,UAAU,CAAC,GAAG,IAAI/N,CAAC,CAACK,IAAI,CAACC,OAAO,CAAC,CAAE;cAAA4N,QAAA,eAE5E9N,OAAA,CAACN,KAAK;gBAAAoO,QAAA,eACF9N,OAAA;kBAAA8N,QAAA,gBACI9N,OAAA;oBAAA8N,QAAA,EAAShD,IAAI,CAACb;kBAAI;oBAAA8D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS,CAAC,eAAAlO,OAAA;oBAAA+N,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,EAEjCa,SAAS,gBACN/O,OAAA;oBAAMwG,SAAS,EAAC,UAAU;oBAAAsH,QAAA,GAAC,QACjB,EAACJ,SAAS,EAAC,WAAS,eAAA1N,OAAA;sBAAA+N,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAK,CAAC,eAChClO,OAAA;sBAAQmO,OAAO,EAAEA,CAAA,KAAM5C,gBAAgB,CAACuD,aAAa,CAAC9K,EAAE,CAAE;sBAAA8J,QAAA,EAAC;oBAE3D;sBAAAC,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAQ,CAAC;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACP,CAAC,GAEPtG,WAAW,IAAIgB,YAAY,iBACvB5I,OAAA;oBAAQmO,OAAO,EAAEA,CAAA,KAAMnD,aAAa,CAACF,IAAI,CAAC9G,EAAE,CAAE;oBAAA8J,QAAA,EAAC;kBAE/C;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAEf;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAvBHpD,IAAI,CAAC9G,EAAE;cAAA+J,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAwBR,CAAC;UAEjB,CAAC,CAAC;QAAA,GAlDG,OAAOtG,WAAW,IAAI,SAAS,IAAIM,cAAc,EAAE;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmD9C,CAAC,EAGdtG,WAAW,iBACR5H,OAAA;UAAKwG,SAAS,EAAC,cAAc;UAAC6H,KAAK,EAAE;YAACY,SAAS,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAM,CAAE;UAAApB,QAAA,eAC1E9N,OAAA;YAAA8N,QAAA,gBACI9N,OAAA;cAAA8N,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACzF,QAAQ,CAACpG,KAAK,CAACW,MAAM,GAAG,CAAC,GACnD,wCAAwC,GACxC,cAAcyF,QAAQ,CAACpG,KAAK,CAACW,MAAM,QAAQ;UAAA;YAAA+K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC9G,GAAA,CAplBQF,eAAe;AAAAiI,GAAA,GAAfjI,eAAe;AAslBxB,eAAeA,eAAe;AAAC,IAAA/E,EAAA,EAAA8E,GAAA,EAAAkI,GAAA;AAAAC,YAAA,CAAAjN,EAAA;AAAAiN,YAAA,CAAAnI,GAAA;AAAAmI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}