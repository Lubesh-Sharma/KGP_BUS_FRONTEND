{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 10 * 1000; // 10 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to handle routing between points\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const directLineRef = useRef(null); // Reference for direct line\n\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Configure routing machine when component mounts\n    configureRoutingMachine();\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    // Remove existing direct line if it exists\n    if (directLineRef.current && map) {\n      map.removeLayer(directLineRef.current);\n      directLineRef.current = null;\n    }\n\n    // Clear previous routing if it exists\n    if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n      map.removeControl(routingControlRef.current);\n      routingControlRef.current = null;\n    }\n\n    // Set a timeout for OSRM routing - if it takes too long, show direct path\n    const routingTimeout = setTimeout(() => {\n      if (setIsPathLoading) {\n        setIsPathLoading(false);\n\n        // Create direct line between points\n        const directLine = L.polyline([[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10' // Dashed line to indicate it's not a routed path\n        });\n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      }\n    }, 8000); // 8 second timeout\n\n    try {\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{\n            color,\n            opacity: 0.7,\n            weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        createMarker: () => null,\n        // No markers from routing\n        serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n      });\n\n      // Add listeners to handle loading state\n      routingControl.on('routesfound', () => {\n        clearTimeout(routingTimeout); // Clear timeout when route is found\n        setTimeout(() => setIsPathLoading(false), 300); // Short delay to ensure UI is updated\n      });\n      routingControl.on('routingerror', () => {\n        clearTimeout(routingTimeout); // Clear timeout on error\n        console.warn(\"Routing error occurred\");\n        setIsPathLoading(false);\n\n        // Create direct line on routing error\n        const directLine = L.polyline([[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10' // Dashed line\n        });\n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      });\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n      return () => {\n        clearTimeout(routingTimeout);\n\n        // Cleanup: remove the control if it exists on the map\n        if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n          map.removeControl(routingControlRef.current);\n        }\n\n        // Cleanup: remove direct line if it exists\n        if (directLineRef.current && map) {\n          map.removeLayer(directLineRef.current);\n        }\n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      clearTimeout(routingTimeout);\n      console.error(\"Error setting up routing:\", error);\n      setIsPathLoading(false);\n\n      // Create direct line on routing setup error\n      if (map) {\n        const directLine = L.polyline([[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10'\n        });\n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      }\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"P8xDelYeAtQ773rHgLSE7X9FAsk=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Component to handle map clicks\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst MapClickHandler = ({\n  setCoordinates\n}) => {\n  _s3();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n    }\n  });\n  return null;\n};\n\n// Button to center on user's location\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n};\n_c4 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s4();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  // Initialize searchMarker with current coordinates or map center\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation); // Also update the search marker when user location changes\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      // The API returns { statusCode, data, message } structure\n      if (response.data && response.data.data) {\n        return response.data.data; // Return just the array of bus stops\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      setError(null);\n      setSearchMarker([lat, lng]);\n\n      // Calculate distance from specified point to all bus stops\n      const results = busStops.map(stop => {\n        // Calculate distance in meters using Haversine formula\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      });\n\n      // Sort by distance (closest first)\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n\n      // Center map on search marker\n      setMapCenter([lat, lng]);\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n\n  // Handle click on search result item\n  const handleStopSelect = stop => {\n    // Set the map center and zoom\n    setMapCenter([stop.latitude, stop.longitude]);\n    setZoom(18);\n\n    // Set the selected stop for routing\n    setSelectedStop(stop);\n\n    // Open the popup for this marker\n    const marker = markerRefs.current[stop.id];\n    if (marker) {\n      marker.openPopup();\n    }\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in meters\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading route. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 67\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 25\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 69\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 25\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 65\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 25\n        }, this)), userLocation && selectedStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: userLocation,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 13\n    }, this), hasSearched && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results-footer\",\n      children: searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Nearest Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"results-list\",\n          children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-item\",\n            onClick: () => handleStopSelect(stop),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-index\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-details\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"distance\",\n                children: [\"Distance: \", formatDistance(stop.distance)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"coordinates\",\n                children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 41\n            }, this)]\n          }, stop.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-results\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No bus stops found near the selected location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 624,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 458,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated component to handle map clicks\n_s4(BusStopSearch, \"iYt+tryRu6QH2Sb6yofk78FMhwc=\");\n_c5 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker\n}) => {\n  _s5();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]); // Update marker immediately\n    }\n  });\n  return null;\n};\n_s5(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c6 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"LocationButton\");\n$RefreshReg$(_c5, \"BusStopSearch\");\n$RefreshReg$(_c6, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","axios","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","_s","map","routingControlRef","directLineRef","current","hasLayer","removeControl","routingTimeout","setTimeout","directLine","polyline","opacity","dashArray","addTo","routingControl","control","waypoints","latLng","routeWhileDragging","showAlternatives","addWaypoints","fitSelectedRoutes","show","lineOptions","styles","extendToWaypoints","missingRouteTolerance","createMarker","serviceUrl","on","clearTimeout","error","_c","MapController","center","zoom","_s2","setView","getZoom","_c2","MapClickHandler","setCoordinates","_s3","click","lat","lng","latlng","latitude","toFixed","longitude","_c3","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","BusStopSearch","setUserLocation","_s4","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","coordinates","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","mapRef","markerRefs","registerMarker","id","markerRef","fetchBusStops","log","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","stop","parseFloat","err","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","results","distance","calculateDistance","sortedResults","sort","a","b","handleStopSelect","marker","openPopup","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","htmlFor","type","onChange","placeholder","style","height","width","ref","attribution","url","MapEvents","position","icon","length","index","_c5","_s5","_c6","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 10 * 1000; // 10 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to handle routing between points\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading }) => {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const directLineRef = useRef(null); // Reference for direct line\n\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Configure routing machine when component mounts\n    configureRoutingMachine();\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n    \n    // Remove existing direct line if it exists\n    if (directLineRef.current && map) {\n      map.removeLayer(directLineRef.current);\n      directLineRef.current = null;\n    }\n\n    // Clear previous routing if it exists\n    if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n      map.removeControl(routingControlRef.current);\n      routingControlRef.current = null;\n    }\n\n    // Set a timeout for OSRM routing - if it takes too long, show direct path\n    const routingTimeout = setTimeout(() => {\n      if (setIsPathLoading) {\n        setIsPathLoading(false);\n        \n        // Create direct line between points\n        const directLine = L.polyline([\n          [startPoint[0], startPoint[1]],\n          [endPoint[0], endPoint[1]]\n        ], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10' // Dashed line to indicate it's not a routed path\n        });\n        \n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      }\n    }, 8000); // 8 second timeout\n\n    try {\n      const routingControl = L.Routing.control({\n        waypoints: [\n          L.latLng(startPoint[0], startPoint[1]),\n          L.latLng(endPoint[0], endPoint[1])\n        ],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{ color, opacity: 0.7, weight }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        createMarker: () => null, // No markers from routing\n        serviceUrl: 'https://router.project-osrm.org/route/v1' // Explicitly set OSRM service\n      });\n\n      // Add listeners to handle loading state\n      routingControl.on('routesfound', () => {\n        clearTimeout(routingTimeout); // Clear timeout when route is found\n        setTimeout(() => setIsPathLoading(false), 300); // Short delay to ensure UI is updated\n      });\n      \n      routingControl.on('routingerror', () => {\n        clearTimeout(routingTimeout); // Clear timeout on error\n        console.warn(\"Routing error occurred\");\n        setIsPathLoading(false);\n        \n        // Create direct line on routing error\n        const directLine = L.polyline([\n          [startPoint[0], startPoint[1]],\n          [endPoint[0], endPoint[1]]\n        ], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10' // Dashed line\n        });\n        \n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      });\n\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n\n      return () => {\n        clearTimeout(routingTimeout);\n        \n        // Cleanup: remove the control if it exists on the map\n        if (routingControlRef.current && map && map.hasLayer(routingControlRef.current)) {\n          map.removeControl(routingControlRef.current);\n        }\n        \n        // Cleanup: remove direct line if it exists\n        if (directLineRef.current && map) {\n          map.removeLayer(directLineRef.current);\n        }\n        \n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      clearTimeout(routingTimeout);\n      console.error(\"Error setting up routing:\", error);\n      setIsPathLoading(false);\n      \n      // Create direct line on routing setup error\n      if (map) {\n        const directLine = L.polyline([\n          [startPoint[0], startPoint[1]],\n          [endPoint[0], endPoint[1]]\n        ], {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '10, 10'\n        });\n        \n        directLine.addTo(map);\n        directLineRef.current = directLine;\n      }\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n\n  return null;\n};\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (center) {\n            map.setView(center, zoom || map.getZoom());\n        }\n    }, [map, center, zoom]);\n    \n    return null;\n};\n\n// Component to handle map clicks\nconst MapClickHandler = ({ setCoordinates }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n        }\n    });\n    \n    return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n    return (\n        <button \n            className=\"location-button\" \n            onClick={onClick}\n            disabled={!userLocation}\n            title=\"Center map on your location\"\n        >\n            <i className=\"fas fa-location-arrow\"></i> Your Current Location\n        </button>\n    );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n    const [busStops, setBusStops] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n    const [zoom, setZoom] = useState(15);\n    const [coordinates, setCoordinates] = useState({\n        latitude: '',\n        longitude: ''\n    });\n    // Initialize searchMarker with current coordinates or map center\n    const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n    const [selectedStop, setSelectedStop] = useState(null);\n    \n    const mapRef = useRef(null);\n    const markerRefs = useRef({});\n    \n    // Register marker references for later access\n    const registerMarker = (id, markerRef) => {\n        if (markerRef) {\n            markerRefs.current[id] = markerRef;\n        }\n    };\n\n    // Initialize coordinates with user's location as soon as it's available\n    useEffect(() => {\n        if (userLocation) {\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n            setMapCenter(userLocation);\n            setSearchMarker(userLocation); // Also update the search marker when user location changes\n        }\n    }, [userLocation]);\n    \n    // Fetch all bus stops directly from the database\n    const fetchBusStops = async () => {\n        try {\n            console.log('Fetching bus stops from API');\n            const response = await api.get('/bus_stops/getAllBusStops');\n            console.log('Raw API response:', response.data);\n            \n            // Extract the actual bus stops array from the response\n            // The API returns { statusCode, data, message } structure\n            if (response.data && response.data.data) {\n                return response.data.data; // Return just the array of bus stops\n            } else {\n                console.error('Invalid response format:', response.data);\n                return [];\n            }\n        } catch (error) {\n            console.error('Error fetching bus stops from database:', error);\n            throw error;\n        }\n    };\n    \n    // Load bus stops on component mount\n    useEffect(() => {\n        const loadBusStops = async () => {\n            try {\n                setLoading(true);\n                const data = await fetchBusStops();\n                \n                // Ensure data is an array before mapping\n                const busStopsArray = Array.isArray(data) ? data : [];\n                \n                // Clean and format the data\n                const cleanedData = busStopsArray.map(stop => ({\n                    ...stop,\n                    latitude: parseFloat(stop.latitude),\n                    longitude: parseFloat(stop.longitude)\n                }));\n                \n                setBusStops(cleanedData);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error loading bus stops:\", err);\n                setError(\"Failed to load bus stops. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadBusStops();\n    }, []);\n    \n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCoordinates(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    \n    // Center map on user location with maximum zoom\n    const handleCenterOnUser = () => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n            setZoom(19); // Maximum zoom\n\n            // Also update the coordinate inputs to match user location\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n        }\n    };\n    \n    // Function to search for nearby bus stops\n    const handleSearch = () => {\n        try {\n            const lat = parseFloat(coordinates.latitude);\n            const lng = parseFloat(coordinates.longitude);\n            \n            // Validate coordinates\n            if (isNaN(lat) || isNaN(lng) || \n                lat < -90 || lat > 90 || \n                lng < -180 || lng > 180) {\n                setError(\"Please enter valid coordinates\");\n                return;\n            }\n            \n            setError(null);\n            setSearchMarker([lat, lng]);\n            \n            // Calculate distance from specified point to all bus stops\n            const results = busStops.map(stop => {\n                // Calculate distance in meters using Haversine formula\n                const distance = calculateDistance(\n                    lat, lng,\n                    stop.latitude, stop.longitude\n                );\n                \n                return {\n                    ...stop,\n                    distance: distance\n                };\n            });\n            \n            // Sort by distance (closest first)\n            const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n            setSearchResults(sortedResults);\n            setHasSearched(true);\n            \n            // Center map on search marker\n            setMapCenter([lat, lng]);\n            setZoom(16);\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            setError(\"An error occurred during search\");\n        }\n    };\n    \n    // Handle click on search result item\n    const handleStopSelect = (stop) => {\n        // Set the map center and zoom\n        setMapCenter([stop.latitude, stop.longitude]);\n        setZoom(18);\n        \n        // Set the selected stop for routing\n        setSelectedStop(stop);\n        \n        // Open the popup for this marker\n        const marker = markerRefs.current[stop.id];\n        if (marker) {\n            marker.openPopup();\n        }\n    };\n    \n    // Calculate distance between two coordinates using Haversine formula\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        const R = 6371e3; // Earth's radius in meters\n        const φ1 = lat1 * Math.PI / 180;\n        const φ2 = lat2 * Math.PI / 180;\n        const Δφ = (lat2 - lat1) * Math.PI / 180;\n        const Δλ = (lon2 - lon1) * Math.PI / 180;\n        \n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n                Math.cos(φ1) * Math.cos(φ2) *\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n        \n        return R * c; // Distance in meters\n    };\n    \n    // Format distance for display\n    const formatDistance = (meters) => {\n        if (meters < 1000) {\n            return `${Math.round(meters)} meters`;\n        } else {\n            return `${(meters / 1000).toFixed(2)} km`;\n        }\n    };\n    \n    return (\n        <div className=\"bus-stop-search\">\n            {/* Full-page loading overlay for OSRM loading - now covers entire screen */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Loading route. Please wait...</div>\n                </div>\n            )}\n            \n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Search Bus Stops</h2>\n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"latitude\">Latitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"latitude\" \n                                name=\"latitude\" \n                                value={coordinates.latitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 22.3190\"\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"longitude\">Longitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"longitude\" \n                                name=\"longitude\" \n                                value={coordinates.longitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 87.3091\"\n                            />\n                        </div>\n                        \n                        <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n                        \n                        <button \n                            className=\"search-btn\"\n                            onClick={handleSearch}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n                        </button>\n                    </div>\n                </div>\n                \n                {/* Removed the search results from here */}\n            </div>\n            \n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={zoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={mapRef}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <MapController center={mapCenter} zoom={zoom} />\n                    <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} />\n                    \n                    {/* Display user location */}\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Your Location</strong><br />\n                                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Always display search marker */}\n                    {searchMarker && (\n                        <Marker position={searchMarker} icon={searchMarkerIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Search Location</strong><br />\n                                    {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Display all bus stops */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={busStopIcon}\n                            ref={(ref) => registerMarker(stop.id, ref)}\n                        >\n                            <Popup>\n                                <div>\n                                    <strong>{stop.name}</strong><br />\n                                    {searchMarker && (\n                                        <span>\n                                            Distance: {formatDistance(\n                                                calculateDistance(\n                                                    searchMarker[0], searchMarker[1],\n                                                    stop.latitude, stop.longitude\n                                                )\n                                            )}\n                                        </span>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Add routing control for selected bus stop */}\n                    {userLocation && selectedStop && (\n                        <RoutingControl\n                            startPoint={userLocation}\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={4}\n                            setIsPathLoading={setIsPathLoading}\n                        />\n                    )}\n                    \n                    {/* Button inside map container for centering on user location */}\n                    <div className=\"map-controls\">\n                        <LocationButton\n                            userLocation={userLocation}\n                            onClick={handleCenterOnUser}\n                        />\n                    </div>\n                </MapContainer>\n            </div>\n            \n            {/* New component: Search results moved to the bottom */}\n            {hasSearched && (\n                <div className=\"search-results-footer\">\n                    {searchResults.length > 0 ? (\n                        <div className=\"search-results\">\n                            <h3>Nearest Bus Stops</h3>\n                            <div className=\"results-list\">\n                                {searchResults.map((stop, index) => (\n                                    <div \n                                        key={stop.id} \n                                        className=\"result-item\"\n                                        onClick={() => handleStopSelect(stop)}\n                                    >\n                                        <div className=\"result-index\">{index + 1}</div>\n                                        <div className=\"result-details\">\n                                            <h4>{stop.name}</h4>\n                                            <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                                            <p className=\"coordinates\">\n                                                {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"no-results\">\n                            <p>No bus stops found near the selected location.</p>\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n};\n\n// Updated component to handle map clicks\nconst MapEvents = ({ setCoordinates, setSearchMarker }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n            setSearchMarker([lat, lng]); // Update marker immediately\n        }\n    });\n    \n    return null;\n};\n\nexport default BusStopSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}