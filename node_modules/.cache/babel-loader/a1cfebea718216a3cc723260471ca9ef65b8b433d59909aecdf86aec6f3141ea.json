{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api, { getApiUrl } from '../../utils/api2.js';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 30 * 1000; // 30 seconds timeout\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Component to recenter map when needed\nfunction MapUpdater({\n  center,\n  zoom\n}) {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n}\n\n// Custom component to create routes that follow roads - completely rewritten for stability\n_s(MapUpdater, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapUpdater;\nfunction RoadBasedRoutes({\n  stops\n}) {\n  _s2();\n  const map = useMap();\n  const controlRef = useRef(null);\n  const routeLayerGroupRef = useRef(null);\n\n  // A safer cleanup function we can call anytime\n  const cleanup = useCallback(() => {\n    if (controlRef.current) {\n      try {\n        // Always remove from map first\n        if (map) map.removeControl(controlRef.current);\n      } catch (e) {\n        console.warn(\"Error removing control:\", e);\n      }\n      controlRef.current = null;\n    }\n\n    // Also clean up any manual route layers\n    if (routeLayerGroupRef.current) {\n      try {\n        routeLayerGroupRef.current.clearLayers();\n        if (map) map.removeLayer(routeLayerGroupRef.current);\n      } catch (e) {\n        console.warn(\"Error removing route layer group:\", e);\n      }\n      routeLayerGroupRef.current = null;\n    }\n  }, [map]);\n\n  // Set up once - create a fresh layer group on each re-render\n  useEffect(() => {\n    // Create a fresh layer group for routes\n    cleanup();\n    if (map) {\n      try {\n        routeLayerGroupRef.current = L.layerGroup().addTo(map);\n        console.log(\"Route layer group created and added to map\");\n      } catch (e) {\n        console.warn(\"Error creating layer group:\", e);\n      }\n    }\n    return cleanup; // Clean up on unmount\n  }, [map, cleanup]);\n\n  // Handle route creation/updates\n  useEffect(() => {\n    // Skip if no map or insufficient stops\n    if (!map || !stops || stops.length < 2) {\n      console.log(\"Not enough conditions for route drawing:\", {\n        hasMap: !!map,\n        stopsCount: (stops === null || stops === void 0 ? void 0 : stops.length) || 0\n      });\n      return;\n    }\n\n    // Clear any existing routes first, but keep the layer group\n    if (routeLayerGroupRef.current) {\n      routeLayerGroupRef.current.clearLayers();\n    }\n\n    // Get waypoints from stops\n    const waypoints = [];\n    const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\n    console.log(\"Drawing routes for ordered stops:\", orderedStops);\n\n    // Find the actual stop data using the global stops data\n    for (const routeStop of orderedStops) {\n      var _window$stopsData;\n      const stopData = (_window$stopsData = window.stopsData) === null || _window$stopsData === void 0 ? void 0 : _window$stopsData.find(s => s.id === routeStop.bus_stop_id);\n      if (stopData) {\n        const lat = parseFloat(stopData.latitude);\n        const lng = parseFloat(stopData.longitude);\n        if (!isNaN(lat) && !isNaN(lng)) {\n          waypoints.push(L.latLng(lat, lng));\n        }\n      }\n    }\n    console.log(\"Generated waypoints:\", waypoints.length);\n\n    // Only create route if we have at least 2 valid waypoints\n    if (waypoints.length < 2) {\n      console.log(\"Not enough valid waypoints for route\");\n      return;\n    }\n\n    // Always create direct lines first - this is the most reliable\n    createDirectRoutes(waypoints);\n\n    // Optional: Try the OSRM routing (might fail due to rate limits/errors)\n    try {\n      if (window.enableOSRM !== false) {\n        // Global flag to disable OSRM attempts\n        const control = L.Routing.control({\n          waypoints,\n          routeWhileDragging: false,\n          showAlternatives: false,\n          fitSelectedRoutes: false,\n          show: false,\n          // Don't show the routing interface\n          lineOptions: {\n            styles: [{\n              color: '#3388ff',\n              opacity: 0.7,\n              weight: 5\n            }],\n            extendToWaypoints: false,\n            missingRouteTolerance: 10\n          },\n          createMarker: () => null,\n          // No markers from routing\n          addWaypoints: false,\n          serviceUrl: 'https://router.project-osrm.org/route/v1'\n        });\n\n        // Handle errors silently and keep the fallback routes\n        control.on('routingerror', function (e) {\n          console.warn(\"Routing error:\", e);\n          // Fallback routes are already created\n        });\n        control.on('routesfound', function (e) {\n          console.log(\"Routes found via OSRM:\", e.routes.length);\n          // Keep the direct routes - OSRM is unreliable\n        });\n\n        // Store the reference\n        controlRef.current = control;\n\n        // Force a safer way to add the control\n        setTimeout(() => {\n          if (map && controlRef.current) {\n            try {\n              controlRef.current.addTo(map);\n            } catch (e) {\n              console.warn(\"Error adding route control:\", e);\n              // Fallback routes are already created\n            }\n          }\n        }, 200);\n      }\n    } catch (error) {\n      console.error(\"Error creating routing control:\", error);\n      // Fallback routes are already created\n    }\n\n    // Function to draw direct lines between waypoints\n    function createDirectRoutes(waypoints) {\n      // Check if we have the layer group and waypoints\n      if (!routeLayerGroupRef.current) {\n        console.warn(\"No layer group available for direct routes\");\n        routeLayerGroupRef.current = L.layerGroup().addTo(map);\n      }\n      if ((waypoints === null || waypoints === void 0 ? void 0 : waypoints.length) >= 2) {\n        console.log(\"Creating direct routes between\", waypoints.length, \"waypoints\");\n\n        // Create a more visible polyline for the entire route\n        const entireRoute = L.polyline(waypoints, {\n          color: '#cc0000',\n          // Red color\n          weight: 6,\n          // Thicker line\n          opacity: 0.8,\n          // More opaque\n          smoothFactor: 1 // Smoothing\n        });\n        routeLayerGroupRef.current.addLayer(entireRoute);\n        console.log(\"Added entire route polyline to layer group\");\n\n        // Also add individual segments with different styling\n        for (let i = 0; i < waypoints.length - 1; i++) {\n          const segment = L.polyline([waypoints[i], waypoints[i + 1]], {\n            color: '#0033ff',\n            // Blue \n            weight: 8,\n            // Thicker for visibility\n            opacity: 0.7,\n            // Semi-transparent\n            dashArray: '10, 10' // Dashed line\n          });\n\n          // Add stop order indicator\n          const midPoint = [(waypoints[i].lat + waypoints[i + 1].lat) / 2, (waypoints[i].lng + waypoints[i + 1].lng) / 2];\n          const marker = L.marker(midPoint, {\n            icon: L.divIcon({\n              html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid black; font-weight: bold;\">${i + 1}</div>`,\n              className: 'route-segment-label',\n              iconSize: [24, 24],\n              iconAnchor: [12, 12]\n            })\n          });\n          routeLayerGroupRef.current.addLayer(segment);\n          routeLayerGroupRef.current.addLayer(marker);\n        }\n        console.log(\"Added\", waypoints.length - 1, \"route segments\");\n      } else {\n        console.warn(\"Not enough waypoints for direct routes\");\n      }\n    }\n  }, [map, stops, cleanup, formData.stops.length, selectedBus]);\n  return null;\n}\n_s2(RoadBasedRoutes, \"zsIWQ/hAGQo9wEg4ijPQXdlU+3s=\", false, function () {\n  return [useMap];\n});\n_c2 = RoadBasedRoutes;\nfunction RouteManagement({\n  user\n}) {\n  _s3();\n  var _getBusById, _getBusById2;\n  const [buses, setBuses] = useState([]);\n  const [stops, setStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\n  const [zoom, setZoom] = useState(15);\n  const mapRef = useRef(null);\n  const [refreshTrigger, setRefreshTrigger] = useState(0);\n  const [routes, setRoutes] = useState([]);\n  const [useDirectRoutes, setUseDirectRoutes] = useState(true); // New state to control direct vs OSRM routes\n  const [showMapDebug, setShowMapDebug] = useState(false); // New state for debugging\n\n  const [formData, setFormData] = useState({\n    bus_id: '',\n    stops: []\n  });\n  const [isAddingStop, setIsAddingStop] = useState(false);\n  const [currentStopOrder, setCurrentStopOrder] = useState(1);\n  useEffect(() => {\n    // Initialize window-level stopsData and configuration flag\n    window.enableOSRM = false; // Set to false to use only direct routes\n    configureRoutingMachine();\n\n    // Add a global diagnostics object to help with debugging\n    window.routeDiagnostics = {\n      stops: [],\n      waypoints: [],\n      logState: () => {\n        var _window$stopsData2;\n        console.log(\"Current Map State:\", {\n          stops: ((_window$stopsData2 = window.stopsData) === null || _window$stopsData2 === void 0 ? void 0 : _window$stopsData2.length) || 0,\n          selectedBus,\n          routeStops: formData.stops.length,\n          mapInitialized: !!mapRef.current\n        });\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError('');\n\n        // Fetch buses\n        try {\n          const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 10000\n          });\n          setBuses(busesResponse.data);\n          console.log(\"Buses loaded for routes:\", busesResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch buses: ' + err.message);\n          console.error(\"Error fetching buses for routes:\", err);\n          setBuses([{\n            id: 'mock1',\n            name: 'Demo Bus 1'\n          }]); // Fallback data\n        }\n\n        // Fetch stops\n        try {\n          const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 100\n          });\n          setStops(stopsResponse.data);\n          console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\n        } catch (err) {\n          setError('Failed to fetch stops: ' + err.message);\n          console.error(\"Error fetching stops for routes:\", err);\n          setStops([{\n            id: 'mock1',\n            name: 'Demo Stop',\n            latitude: 22.3190,\n            longitude: 87.3091\n          }]); // Fallback data\n        }\n\n        // Fetch routes and update your state\n        try {\n          const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            },\n            timeout: 1000\n          });\n          // Using the fetched routes data\n          const fetchedRoutes = routesResponse.data;\n          setRoutes(fetchedRoutes);\n          console.log(\"Routes loaded:\", fetchedRoutes.length);\n        } catch (err) {\n          setError('Failed to fetch routes: ' + err.message);\n          console.error(\"Error fetching routes:\", err);\n          // Using default empty array for routes\n          setRoutes([]);\n        }\n      } catch (err) {\n        setError('Error fetching data: ' + err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [user.token, refreshTrigger]);\n  useEffect(() => {\n    if (stops && stops.length > 0) {\n      window.stopsData = stops;\n    }\n  }, [stops]);\n  const handleBusSelect = async busId => {\n    try {\n      setSelectedBus(busId);\n      setLoading(true);\n      setError('');\n      try {\n        const response = await axios.get(getApiUrl(api.endpoints.adminRouteById(busId)), {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        const busRoutes = response.data;\n        console.log('Routes loaded for bus', busId, busRoutes);\n        setFormData({\n          bus_id: busId,\n          stops: busRoutes\n        });\n\n        // Set current stop order for adding new stops\n        setCurrentStopOrder(busRoutes && busRoutes.length > 0 ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1 : 1);\n\n        // Find stop coordinates to center map\n        if (busRoutes && busRoutes.length > 0) {\n          fitRouteOnMap(busRoutes);\n        }\n      } catch (err) {\n        setError('Error fetching route data: ' + err.message);\n        console.error(\"Error fetching routes for bus:\", err);\n      }\n    } catch (err) {\n      setError('Error preparing bus route view: ' + err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddStop = async stopId => {\n    try {\n      setError('');\n      const stop = stops.find(s => s.id === stopId);\n      if (!stop) {\n        throw new Error(\"Stop not found\");\n      }\n\n      // Create new route stop entry\n      const newRoute = {\n        bus_id: selectedBus,\n        bus_stop_id: stopId,\n        stop_order: currentStopOrder\n      };\n      const response = await axios.post(getApiUrl(api.endpoints.adminAddRoute), newRoute, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      if (response.data && response.data.id) {\n        // Use the complete object returned from API\n        setFormData(prev => ({\n          ...prev,\n          stops: [...prev.stops, response.data]\n        }));\n        setRoutes(prev => [...prev, response.data]);\n        setCurrentStopOrder(currentStopOrder + 1);\n\n        // Update the map to show the new route\n        fitRouteOnMap([...formData.stops, response.data]);\n      }\n      setIsAddingStop(false);\n    } catch (err) {\n      setError('Failed to add stop to route: ' + err.message);\n      console.error(\"Error adding stop to route:\", err);\n    }\n  };\n  const handleRemoveStop = async routeId => {\n    if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\n      return;\n    }\n    try {\n      await axios.delete(getApiUrl(api.endpoints.adminDeleteRoute(routeId)), {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n\n      // Update local state\n      const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\n      setFormData(prev => ({\n        ...prev,\n        stops: updatedStops\n      }));\n      setRoutes(prev => prev.filter(route => route.id !== routeId));\n\n      // Update the map\n      fitRouteOnMap(updatedStops);\n    } catch (err) {\n      setError('Error removing stop: ' + err.message);\n      console.error(\"Error removing stop from route:\", err);\n    }\n  };\n  const reorderStop = async (routeId, currentOrder, newOrder) => {\n    if (currentOrder === newOrder) return;\n    try {\n      const reorderedStops = [...formData.stops];\n\n      // Find stops that need order changes\n      const stopToMove = reorderedStops.find(s => s.id === routeId);\n\n      // Skip if stop not found\n      if (!stopToMove) return;\n\n      // Update the order\n      stopToMove.stop_order = newOrder;\n\n      // Reorder other stops to maintain sequence\n      reorderedStops.forEach(stop => {\n        if (stop.id !== routeId) {\n          if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\n            // Moving down - shift others up\n            stop.stop_order -= 1;\n          } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\n            // Moving up - shift others down\n            stop.stop_order += 1;\n          }\n        }\n      });\n\n      // Update in the database - use the correct API endpoint\n      const updateResponse = await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(routeId)), {\n        stop_order: newOrder\n      }, {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      });\n      console.log('Route updated successfully:', updateResponse.data);\n\n      // Update other affected stops in the database\n      for (const stop of reorderedStops) {\n        if (stop.id !== routeId && (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder || currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder)) {\n          await axios.put(getApiUrl(api.endpoints.adminUpdateRoute(stop.id)), {\n            stop_order: stop.stop_order\n          }, {\n            headers: {\n              Authorization: `Bearer ${user.token}`\n            }\n          });\n        }\n      }\n\n      // Update local state with reordered stops\n      setFormData(prev => ({\n        ...prev,\n        stops: reorderedStops\n      }));\n\n      // Update routes state\n      setRoutes(prev => {\n        const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\n        return [...updatedRoutes, ...reorderedStops];\n      });\n\n      // Refresh UI after all updates are done\n      setRefreshTrigger(prev => prev + 1);\n    } catch (err) {\n      setError('Error reordering stops: ' + err.message);\n      console.error(\"Error reordering stops:\", err);\n    }\n  };\n  const fitRouteOnMap = routeStops => {\n    if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\n\n    // Get all stop coordinates, ensuring we have proper numeric values\n    const stopPositions = routeStops.map(routeStop => {\n      const stop = stops.find(s => s.id === routeStop.bus_stop_id);\n      if (!stop) return null;\n      const lat = parseFloat(stop.latitude);\n      const lng = parseFloat(stop.longitude);\n      if (isNaN(lat) || isNaN(lng)) return null;\n      return [lat, lng];\n    }).filter(Boolean);\n    if (stopPositions.length === 0) return;\n    if (stopPositions.length === 1) {\n      // If only one stop, center on it\n      setMapCenter(stopPositions[0]);\n      setZoom(16);\n    } else {\n      // Calculate bounds for multiple stops\n      const minLat = Math.min(...stopPositions.map(pos => pos[0]));\n      const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\n      const minLng = Math.min(...stopPositions.map(pos => pos[1]));\n      const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\n\n      // Center the map on the middle of the route\n      setMapCenter([minLat + (maxLat - minLat) / 2, minLng + (maxLng - minLng) / 2]);\n\n      // Calculate zoom level based on distance\n      const latDiff = maxLat - minLat;\n      const lngDiff = maxLng - minLng;\n      const maxDiff = Math.max(latDiff, lngDiff);\n\n      // Simple zoom calculation, adjust as needed\n      if (maxDiff < 0.005) setZoom(16);else if (maxDiff < 0.01) setZoom(15);else if (maxDiff < 0.02) setZoom(14);else setZoom(13);\n    }\n  };\n  const getStopById = stopId => {\n    return stops.find(stop => stop.id === stopId);\n  };\n  const getBusById = busId => {\n    return buses.find(bus => bus.id === busId);\n  };\n\n  // Add stop marker icon based on whether it's start, middle, or end\n  const getStopIcon = (stopOrder, totalStops) => {\n    const iconUrl = stopOrder === 1 ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' : stopOrder === totalStops ? 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' : 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png';\n    return L.icon({\n      iconUrl,\n      shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n      iconSize: [25, 41],\n      iconAnchor: [12, 41],\n      popupAnchor: [1, -34],\n      shadowSize: [41, 41]\n    });\n  };\n  if (loading && !buses.length && !stops.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading route data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Route Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"refresh-button\",\n        onClick: () => setRefreshTrigger(prev => prev + 1),\n        disabled: loading,\n        children: loading ? 'Refreshing...' : 'Refresh Data'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 664,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.enableOSRM = !window.enableOSRM;\n          setUseDirectRoutes(!useDirectRoutes);\n          setRefreshTrigger(prev => prev + 1);\n        },\n        children: useDirectRoutes ? \"Try OSRM Routes\" : \"Use Direct Routes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowMapDebug(!showMapDebug),\n        children: showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 13\n    }, this), showMapDebug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      style: {\n        padding: '10px',\n        backgroundColor: '#f0f0f0',\n        margin: '10px 0',\n        borderRadius: '5px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Route Debug Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Buses Loaded: \", buses.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Stops Loaded: \", stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Bus: \", selectedBus ? (_getBusById = getBusById(selectedBus)) === null || _getBusById === void 0 ? void 0 : _getBusById.name : 'None']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Route Stops: \", formData.stops.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Map Center: \", mapCenter.join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          window.routeDiagnostics.logState();\n          console.log(\"Current formData:\", formData);\n        },\n        children: \"Log Debug Info to Console\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"route-management-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Select Bus to Manage Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-list\",\n          children: buses.map(bus => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: selectedBus === bus.id ? 'selected' : '',\n            onClick: () => handleBusSelect(bus.id),\n            children: bus.name\n          }, bus.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-editor\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Route for \", (_getBusById2 = getBusById(selectedBus)) === null || _getBusById2 === void 0 ? void 0 : _getBusById2.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 25\n        }, this), formData.stops.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No stops assigned to this route. Add stops below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 725,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"route-stops-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Order\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Stop Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [...formData.stops].sort((a, b) => a.stop_order - b.stop_order).map(routeStop => {\n              const stop = getStopById(routeStop.bus_stop_id);\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: routeStop.stop_order\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 742,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: stop ? stop.name : 'Unknown Stop'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 743,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order - 1),\n                    disabled: routeStop.stop_order === 1,\n                    children: \"\\u2191\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 745,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => reorderStop(routeStop.id, routeStop.stop_order, routeStop.stop_order + 1),\n                    disabled: routeStop.stop_order === formData.stops.length,\n                    children: \"\\u2193\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 755,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleRemoveStop(routeStop.id),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 765,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 744,\n                  columnNumber: 53\n                }, this)]\n              }, routeStop.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 49\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-stop-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsAddingStop(!isAddingStop),\n            className: \"add-stop-button\",\n            children: isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 29\n          }, this), isAddingStop && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"available-stops\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Select a stop to add:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stops-grid\",\n              children: stops.filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id)).map(stop => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAddStop(stop.id),\n                className: \"stop-option\",\n                children: stop.name\n              }, stop.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 791,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"route-map-container\",\n        children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n          center: mapCenter,\n          zoom: zoom,\n          className: \"map-container map-container-large\",\n          ref: mapRef,\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MapUpdater, {\n            center: mapCenter,\n            zoom: zoom\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 25\n          }, this), selectedBus && formData.stops && formData.stops.length >= 2 && /*#__PURE__*/_jsxDEV(RoadBasedRoutes, {\n            stops: formData.stops\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 29\n          }, this), stops.map(stop => {\n            // Check if this stop is in the selected bus's route\n            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\n            const isInRoute = !!routeStopInfo;\n            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\n            const totalStops = formData.stops.length;\n            return /*#__PURE__*/_jsxDEV(Marker, {\n              position: [stop.latitude, stop.longitude],\n              icon: isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default(),\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: stop.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 842,\n                    columnNumber: 73\n                  }, this), isInRoute ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"in-route\",\n                    children: [\"Stop #\", stopOrder, \" in route\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 846,\n                      columnNumber: 79\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleRemoveStop(routeStopInfo.id),\n                      children: \"Remove from Route\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 847,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 845,\n                    columnNumber: 49\n                  }, this) : selectedBus && isAddingStop && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleAddStop(stop.id),\n                    children: \"Add to Route\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 841,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 840,\n                columnNumber: 37\n              }, this)\n            }, stop.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 33\n            }, this);\n          })]\n        }, `map-${selectedBus || 'default'}-${refreshTrigger}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 21\n        }, this), selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"route-status\",\n          style: {\n            textAlign: 'center',\n            marginTop: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Route Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 33\n            }, this), \" \", formData.stops.length < 2 ? \"Add at least 2 stops to create a route\" : `Route with ${formData.stops.length} stops`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 867,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 659,\n    columnNumber: 9\n  }, this);\n}\n_s3(RouteManagement, \"AsHFfeW3hI8TIIS62KG4VlQqJ1U=\");\n_c3 = RouteManagement;\nexport default RouteManagement;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MapUpdater\");\n$RefreshReg$(_c2, \"RoadBasedRoutes\");\n$RefreshReg$(_c3, \"RouteManagement\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","MapContainer","TileLayer","Marker","Popup","useMap","L","api","getApiUrl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","configureRoutingMachine","Routing","Itinerary","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","MapUpdater","center","zoom","_s","map","setView","getZoom","_c","RoadBasedRoutes","stops","_s2","controlRef","routeLayerGroupRef","cleanup","current","removeControl","clearLayers","layerGroup","addTo","log","length","hasMap","stopsCount","waypoints","orderedStops","sort","a","b","stop_order","routeStop","_window$stopsData","stopData","window","stopsData","find","s","id","bus_stop_id","lat","parseFloat","latitude","lng","longitude","isNaN","push","latLng","createDirectRoutes","enableOSRM","control","routeWhileDragging","showAlternatives","fitSelectedRoutes","show","lineOptions","styles","color","opacity","weight","extendToWaypoints","missingRouteTolerance","createMarker","addWaypoints","serviceUrl","on","routes","setTimeout","error","entireRoute","polyline","smoothFactor","addLayer","i","segment","dashArray","midPoint","marker","icon","divIcon","html","className","iconSize","iconAnchor","formData","selectedBus","_c2","RouteManagement","user","_s3","_getBusById","_getBusById2","buses","setBuses","setStops","loading","setLoading","setError","setSelectedBus","mapCenter","setMapCenter","setZoom","mapRef","refreshTrigger","setRefreshTrigger","setRoutes","useDirectRoutes","setUseDirectRoutes","showMapDebug","setShowMapDebug","setFormData","bus_id","isAddingStop","setIsAddingStop","currentStopOrder","setCurrentStopOrder","routeDiagnostics","logState","_window$stopsData2","routeStops","mapInitialized","fetchData","busesResponse","get","endpoints","adminBuses","headers","Authorization","token","data","err","message","name","stopsResponse","adminStops","routesResponse","adminRoutes","fetchedRoutes","handleBusSelect","busId","response","adminRouteById","busRoutes","Math","max","stop","fitRouteOnMap","handleAddStop","stopId","Error","newRoute","post","adminAddRoute","prev","handleRemoveStop","routeId","confirm","delete","adminDeleteRoute","updatedStops","filter","route","reorderStop","currentOrder","newOrder","reorderedStops","stopToMove","forEach","updateResponse","put","adminUpdateRoute","updatedRoutes","r","some","stopPositions","Boolean","minLat","min","pos","maxLat","minLng","maxLng","latDiff","lngDiff","maxDiff","getStopById","getBusById","bus","getStopIcon","stopOrder","totalStops","popupAnchor","shadowSize","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","style","padding","backgroundColor","margin","borderRadius","join","ref","attribution","url","routeStopInfo","isInRoute","position","textAlign","marginTop","_c3","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/admin/RouteManagement.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'; \r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-routing-machine';\r\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\r\nimport api, { getApiUrl } from '../../utils/api2.js';\r\n\r\n// Fix for default marker icon in Leaflet with React\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\r\n    iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\r\n    shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\r\n});\r\n\r\n\r\nfunction configureRoutingMachine() {\r\n    if (typeof L !== 'undefined' && L.Routing) {\r\n        // Modify the global routing options\r\n        L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\r\n        L.Routing.timeout = 30 * 1000; // 30 seconds timeout\r\n\r\n        // Override the error handling globally\r\n        if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\r\n            L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\r\n                console.warn(\"Handled routing error:\", e);\r\n                // No UI updates or errors thrown\r\n            };\r\n        }\r\n\r\n        // Fix issues with the layer removal\r\n        if (L.Routing.Line && L.Routing.Line.prototype) {\r\n            const originalClearLines = L.Routing.Line.prototype._clearLines;\r\n            L.Routing.Line.prototype._clearLines = function () {\r\n                try {\r\n                    // Safety check before calling the original function\r\n                    if (this._map && this._route && this._route._layers) {\r\n                        originalClearLines.call(this);\r\n                    }\r\n                } catch (e) {\r\n                    console.warn(\"Protected from _clearLines error:\", e);\r\n                    // Manual cleanup as fallback\r\n                    if (this._map && this._route) {\r\n                        try {\r\n                            this._map.removeLayer(this._route);\r\n                        } catch (e) {\r\n                            console.warn(\"Also failed with manual cleanup:\", e);\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\n\r\n// Component to recenter map when needed\r\nfunction MapUpdater({ center, zoom }) {\r\n    const map = useMap();\r\n\r\n    useEffect(() => {\r\n        if (center) {\r\n            map.setView(center, zoom || map.getZoom());\r\n        }\r\n    }, [center, zoom, map]);\r\n\r\n    return null;\r\n}\r\n\r\n\r\n// Custom component to create routes that follow roads - completely rewritten for stability\r\nfunction RoadBasedRoutes({ stops }) {\r\n    const map = useMap();\r\n    const controlRef = useRef(null);\r\n    const routeLayerGroupRef = useRef(null);\r\n    \r\n    // A safer cleanup function we can call anytime\r\n    const cleanup = useCallback(() => {\r\n        if (controlRef.current) {\r\n            try {\r\n                // Always remove from map first\r\n                if (map) map.removeControl(controlRef.current);\r\n            } catch (e) {\r\n                console.warn(\"Error removing control:\", e);\r\n            }\r\n            controlRef.current = null;\r\n        }\r\n\r\n        // Also clean up any manual route layers\r\n        if (routeLayerGroupRef.current) {\r\n            try {\r\n                routeLayerGroupRef.current.clearLayers();\r\n                if (map) map.removeLayer(routeLayerGroupRef.current);\r\n            } catch (e) {\r\n                console.warn(\"Error removing route layer group:\", e);\r\n            }\r\n            routeLayerGroupRef.current = null;\r\n        }\r\n    }, [map]);\r\n\r\n    // Set up once - create a fresh layer group on each re-render\r\n    useEffect(() => {\r\n        // Create a fresh layer group for routes\r\n        cleanup();\r\n        if (map) {\r\n            try {\r\n                routeLayerGroupRef.current = L.layerGroup().addTo(map);\r\n                console.log(\"Route layer group created and added to map\");\r\n            } catch (e) {\r\n                console.warn(\"Error creating layer group:\", e);\r\n            }\r\n        }\r\n\r\n        return cleanup; // Clean up on unmount\r\n    }, [map, cleanup]);\r\n\r\n    // Handle route creation/updates\r\n    useEffect(() => {\r\n        // Skip if no map or insufficient stops\r\n        if (!map || !stops || stops.length < 2) {\r\n            console.log(\"Not enough conditions for route drawing:\", {\r\n                hasMap: !!map,\r\n                stopsCount: stops?.length || 0\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Clear any existing routes first, but keep the layer group\r\n        if (routeLayerGroupRef.current) {\r\n            routeLayerGroupRef.current.clearLayers();\r\n        }\r\n\r\n        // Get waypoints from stops\r\n        const waypoints = [];\r\n        const orderedStops = [...stops].sort((a, b) => a.stop_order - b.stop_order);\r\n\r\n        console.log(\"Drawing routes for ordered stops:\", orderedStops);\r\n\r\n        // Find the actual stop data using the global stops data\r\n        for (const routeStop of orderedStops) {\r\n            const stopData = window.stopsData?.find(s => s.id === routeStop.bus_stop_id);\r\n            if (stopData) {\r\n                const lat = parseFloat(stopData.latitude);\r\n                const lng = parseFloat(stopData.longitude);\r\n                if (!isNaN(lat) && !isNaN(lng)) {\r\n                    waypoints.push(L.latLng(lat, lng));\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(\"Generated waypoints:\", waypoints.length);\r\n\r\n        // Only create route if we have at least 2 valid waypoints\r\n        if (waypoints.length < 2) {\r\n            console.log(\"Not enough valid waypoints for route\");\r\n            return;\r\n        }\r\n\r\n        // Always create direct lines first - this is the most reliable\r\n        createDirectRoutes(waypoints);\r\n        \r\n        // Optional: Try the OSRM routing (might fail due to rate limits/errors)\r\n        try {\r\n            if (window.enableOSRM !== false) { // Global flag to disable OSRM attempts\r\n                const control = L.Routing.control({\r\n                    waypoints,\r\n                    routeWhileDragging: false,\r\n                    showAlternatives: false,\r\n                    fitSelectedRoutes: false,\r\n                    show: false, // Don't show the routing interface\r\n                    lineOptions: {\r\n                        styles: [{ color: '#3388ff', opacity: 0.7, weight: 5 }],\r\n                        extendToWaypoints: false,\r\n                        missingRouteTolerance: 10\r\n                    },\r\n                    createMarker: () => null, // No markers from routing\r\n                    addWaypoints: false,\r\n                    serviceUrl: 'https://router.project-osrm.org/route/v1'\r\n                });\r\n\r\n                // Handle errors silently and keep the fallback routes\r\n                control.on('routingerror', function (e) {\r\n                    console.warn(\"Routing error:\", e);\r\n                    // Fallback routes are already created\r\n                });\r\n\r\n                control.on('routesfound', function(e) {\r\n                    console.log(\"Routes found via OSRM:\", e.routes.length);\r\n                    // Keep the direct routes - OSRM is unreliable\r\n                });\r\n\r\n                // Store the reference\r\n                controlRef.current = control;\r\n\r\n                // Force a safer way to add the control\r\n                setTimeout(() => {\r\n                    if (map && controlRef.current) {\r\n                        try {\r\n                            controlRef.current.addTo(map);\r\n                        } catch (e) {\r\n                            console.warn(\"Error adding route control:\", e);\r\n                            // Fallback routes are already created\r\n                        }\r\n                    }\r\n                }, 200);\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error creating routing control:\", error);\r\n            // Fallback routes are already created\r\n        }\r\n\r\n        // Function to draw direct lines between waypoints\r\n        function createDirectRoutes(waypoints) {\r\n            // Check if we have the layer group and waypoints\r\n            if (!routeLayerGroupRef.current) {\r\n                console.warn(\"No layer group available for direct routes\");\r\n                routeLayerGroupRef.current = L.layerGroup().addTo(map);\r\n            }\r\n            \r\n            if (waypoints?.length >= 2) {\r\n                console.log(\"Creating direct routes between\", waypoints.length, \"waypoints\");\r\n                \r\n                // Create a more visible polyline for the entire route\r\n                const entireRoute = L.polyline(\r\n                    waypoints,\r\n                    {\r\n                        color: '#cc0000', // Red color\r\n                        weight: 6,        // Thicker line\r\n                        opacity: 0.8,     // More opaque\r\n                        smoothFactor: 1   // Smoothing\r\n                    }\r\n                );\r\n                \r\n                routeLayerGroupRef.current.addLayer(entireRoute);\r\n                console.log(\"Added entire route polyline to layer group\");\r\n                \r\n                // Also add individual segments with different styling\r\n                for (let i = 0; i < waypoints.length - 1; i++) {\r\n                    const segment = L.polyline(\r\n                        [waypoints[i], waypoints[i + 1]],\r\n                        {\r\n                            color: '#0033ff',   // Blue \r\n                            weight: 8,          // Thicker for visibility\r\n                            opacity: 0.7,       // Semi-transparent\r\n                            dashArray: '10, 10' // Dashed line\r\n                        }\r\n                    );\r\n                    \r\n                    // Add stop order indicator\r\n                    const midPoint = [\r\n                        (waypoints[i].lat + waypoints[i + 1].lat) / 2,\r\n                        (waypoints[i].lng + waypoints[i + 1].lng) / 2\r\n                    ];\r\n                    \r\n                    const marker = L.marker(midPoint, {\r\n                        icon: L.divIcon({\r\n                            html: `<div style=\"background-color: white; border-radius: 50%; padding: 3px; border: 2px solid black; font-weight: bold;\">${i + 1}</div>`,\r\n                            className: 'route-segment-label',\r\n                            iconSize: [24, 24],\r\n                            iconAnchor: [12, 12]\r\n                        })\r\n                    });\r\n                    \r\n                    routeLayerGroupRef.current.addLayer(segment);\r\n                    routeLayerGroupRef.current.addLayer(marker);\r\n                }\r\n                \r\n                console.log(\"Added\", waypoints.length - 1, \"route segments\");\r\n            } else {\r\n                console.warn(\"Not enough waypoints for direct routes\");\r\n            }\r\n        }\r\n    }, [map, stops, cleanup, formData.stops.length, selectedBus]);\r\n\r\n    return null;\r\n}\r\n\r\n\r\n\r\nfunction RouteManagement({ user }) {\r\n    const [buses, setBuses] = useState([]);\r\n    const [stops, setStops] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [selectedBus, setSelectedBus] = useState(null);\r\n    const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // IIT KGP coordinates\r\n    const [zoom, setZoom] = useState(15);\r\n    const mapRef = useRef(null);\r\n    const [refreshTrigger, setRefreshTrigger] = useState(0);\r\n    const [routes, setRoutes] = useState([]);\r\n    const [useDirectRoutes, setUseDirectRoutes] = useState(true); // New state to control direct vs OSRM routes\r\n    const [showMapDebug, setShowMapDebug] = useState(false); // New state for debugging\r\n\r\n    const [formData, setFormData] = useState({\r\n        bus_id: '',\r\n        stops: []\r\n    });\r\n\r\n    const [isAddingStop, setIsAddingStop] = useState(false);\r\n    const [currentStopOrder, setCurrentStopOrder] = useState(1);\r\n\r\n    useEffect(() => {\r\n        // Initialize window-level stopsData and configuration flag\r\n        window.enableOSRM = false; // Set to false to use only direct routes\r\n        configureRoutingMachine();\r\n        \r\n        // Add a global diagnostics object to help with debugging\r\n        window.routeDiagnostics = {\r\n            stops: [],\r\n            waypoints: [],\r\n            logState: () => {\r\n                console.log(\"Current Map State:\", {\r\n                    stops: window.stopsData?.length || 0,\r\n                    selectedBus,\r\n                    routeStops: formData.stops.length,\r\n                    mapInitialized: !!mapRef.current\r\n                });\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError('');\r\n\r\n                // Fetch buses\r\n                try {\r\n                    const busesResponse = await axios.get(getApiUrl(api.endpoints.adminBuses), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 10000\r\n                    });\r\n                    setBuses(busesResponse.data);\r\n                    console.log(\"Buses loaded for routes:\", busesResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch buses: ' + err.message);\r\n                    console.error(\"Error fetching buses for routes:\", err);\r\n                    setBuses([{ id: 'mock1', name: 'Demo Bus 1' }]); // Fallback data\r\n                }\r\n\r\n                // Fetch stops\r\n                try {\r\n                    const stopsResponse = await axios.get(getApiUrl(api.endpoints.adminStops), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 100\r\n                    });\r\n                    setStops(stopsResponse.data);\r\n                    console.log(\"Stops loaded for routes:\", stopsResponse.data.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch stops: ' + err.message);\r\n                    console.error(\"Error fetching stops for routes:\", err);\r\n                    setStops([{\r\n                        id: 'mock1',\r\n                        name: 'Demo Stop',\r\n                        latitude: 22.3190,\r\n                        longitude: 87.3091\r\n                    }]); // Fallback data\r\n                }\r\n\r\n                // Fetch routes and update your state\r\n                try {\r\n                    const routesResponse = await axios.get(getApiUrl(api.endpoints.adminRoutes), {\r\n                        headers: { Authorization: `Bearer ${user.token}` },\r\n                        timeout: 1000\r\n                    });\r\n                    // Using the fetched routes data\r\n                    const fetchedRoutes = routesResponse.data;\r\n                    setRoutes(fetchedRoutes);\r\n                    console.log(\"Routes loaded:\", fetchedRoutes.length);\r\n                } catch (err) {\r\n                    setError('Failed to fetch routes: ' + err.message);\r\n                    console.error(\"Error fetching routes:\", err);\r\n                    // Using default empty array for routes\r\n                    setRoutes([]);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching data: ' + err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [user.token, refreshTrigger]);\r\n\r\n    useEffect(() => {\r\n        if (stops && stops.length > 0) {\r\n            window.stopsData = stops;\r\n        }\r\n    }, [stops]);\r\n\r\n\r\n    const handleBusSelect = async (busId) => {\r\n        try {\r\n            setSelectedBus(busId);\r\n            setLoading(true);\r\n            setError('');\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    getApiUrl(api.endpoints.adminRouteById(busId)),\r\n                    { headers: { Authorization: `Bearer ${user.token}` } }\r\n                );\r\n\r\n                const busRoutes = response.data;\r\n                console.log('Routes loaded for bus', busId, busRoutes);\r\n\r\n                setFormData({\r\n                    bus_id: busId,\r\n                    stops: busRoutes\r\n                });\r\n\r\n                // Set current stop order for adding new stops\r\n                setCurrentStopOrder(\r\n                    busRoutes && busRoutes.length > 0\r\n                        ? Math.max(...busRoutes.map(stop => stop.stop_order)) + 1\r\n                        : 1\r\n                );\r\n\r\n                // Find stop coordinates to center map\r\n                if (busRoutes && busRoutes.length > 0) {\r\n                    fitRouteOnMap(busRoutes);\r\n                }\r\n            } catch (err) {\r\n                setError('Error fetching route data: ' + err.message);\r\n                console.error(\"Error fetching routes for bus:\", err);\r\n            }\r\n        } catch (err) {\r\n            setError('Error preparing bus route view: ' + err.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleAddStop = async (stopId) => {\r\n        try {\r\n            setError('');\r\n            const stop = stops.find(s => s.id === stopId);\r\n            if (!stop) {\r\n                throw new Error(\"Stop not found\");\r\n            }\r\n\r\n            // Create new route stop entry\r\n            const newRoute = {\r\n                bus_id: selectedBus,\r\n                bus_stop_id: stopId,\r\n                stop_order: currentStopOrder\r\n            };\r\n\r\n            const response = await axios.post(\r\n                getApiUrl(api.endpoints.adminAddRoute),\r\n                newRoute,\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            if (response.data && response.data.id) {\r\n                // Use the complete object returned from API\r\n                setFormData(prev => ({\r\n                    ...prev,\r\n                    stops: [...prev.stops, response.data]\r\n                }));\r\n\r\n                setRoutes(prev => [...prev, response.data]);\r\n                setCurrentStopOrder(currentStopOrder + 1);\r\n\r\n                // Update the map to show the new route\r\n                fitRouteOnMap([...formData.stops, response.data]);\r\n            }\r\n\r\n            setIsAddingStop(false);\r\n        } catch (err) {\r\n            setError('Failed to add stop to route: ' + err.message);\r\n            console.error(\"Error adding stop to route:\", err);\r\n        }\r\n    };\r\n\r\n    const handleRemoveStop = async (routeId) => {\r\n        if (!window.confirm('Are you sure you want to remove this stop from the route?')) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            await axios.delete(\r\n                getApiUrl(api.endpoints.adminDeleteRoute(routeId)),\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n\r\n            // Update local state\r\n            const updatedStops = formData.stops.filter(stop => stop.id !== routeId);\r\n\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: updatedStops\r\n            }));\r\n\r\n            setRoutes(prev => prev.filter(route => route.id !== routeId));\r\n\r\n            // Update the map\r\n            fitRouteOnMap(updatedStops);\r\n\r\n        } catch (err) {\r\n            setError('Error removing stop: ' + err.message);\r\n            console.error(\"Error removing stop from route:\", err);\r\n        }\r\n    };\r\n\r\n    const reorderStop = async (routeId, currentOrder, newOrder) => {\r\n        if (currentOrder === newOrder) return;\r\n\r\n        try {\r\n            const reorderedStops = [...formData.stops];\r\n\r\n            // Find stops that need order changes\r\n            const stopToMove = reorderedStops.find(s => s.id === routeId);\r\n\r\n            // Skip if stop not found\r\n            if (!stopToMove) return;\r\n\r\n            // Update the order\r\n            stopToMove.stop_order = newOrder;\r\n\r\n            // Reorder other stops to maintain sequence\r\n            reorderedStops.forEach(stop => {\r\n                if (stop.id !== routeId) {\r\n                    if (currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) {\r\n                        // Moving down - shift others up\r\n                        stop.stop_order -= 1;\r\n                    } else if (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder) {\r\n                        // Moving up - shift others down\r\n                        stop.stop_order += 1;\r\n                    }\r\n                }\r\n            });\r\n\r\n            // Update in the database - use the correct API endpoint\r\n            const updateResponse = await axios.put(\r\n                getApiUrl(api.endpoints.adminUpdateRoute(routeId)),\r\n                { stop_order: newOrder },\r\n                { headers: { Authorization: `Bearer ${user.token}` } }\r\n            );\r\n            \r\n            console.log('Route updated successfully:', updateResponse.data);\r\n\r\n            // Update other affected stops in the database\r\n            for (const stop of reorderedStops) {\r\n                if (stop.id !== routeId &&\r\n                    ((currentOrder < newOrder && stop.stop_order > currentOrder && stop.stop_order <= newOrder) ||\r\n                        (currentOrder > newOrder && stop.stop_order >= newOrder && stop.stop_order < currentOrder))) {\r\n                    await axios.put(\r\n                        getApiUrl(api.endpoints.adminUpdateRoute(stop.id)),\r\n                        { stop_order: stop.stop_order },\r\n                        { headers: { Authorization: `Bearer ${user.token}` } }\r\n                    );\r\n                }\r\n            }\r\n\r\n            // Update local state with reordered stops\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                stops: reorderedStops\r\n            }));\r\n\r\n            // Update routes state\r\n            setRoutes(prev => {\r\n                const updatedRoutes = prev.filter(r => !reorderedStops.some(s => s.id === r.id));\r\n                return [...updatedRoutes, ...reorderedStops];\r\n            });\r\n            \r\n            // Refresh UI after all updates are done\r\n            setRefreshTrigger(prev => prev + 1);\r\n\r\n        } catch (err) {\r\n            setError('Error reordering stops: ' + err.message);\r\n            console.error(\"Error reordering stops:\", err);\r\n        }\r\n    };\r\n\r\n    const fitRouteOnMap = (routeStops) => {\r\n        if (!routeStops || routeStops.length === 0 || !mapRef.current) return;\r\n\r\n        // Get all stop coordinates, ensuring we have proper numeric values\r\n        const stopPositions = routeStops.map(routeStop => {\r\n            const stop = stops.find(s => s.id === routeStop.bus_stop_id);\r\n            if (!stop) return null;\r\n\r\n            const lat = parseFloat(stop.latitude);\r\n            const lng = parseFloat(stop.longitude);\r\n            if (isNaN(lat) || isNaN(lng)) return null;\r\n\r\n            return [lat, lng];\r\n        }).filter(Boolean);\r\n\r\n        if (stopPositions.length === 0) return;\r\n\r\n        if (stopPositions.length === 1) {\r\n            // If only one stop, center on it\r\n            setMapCenter(stopPositions[0]);\r\n            setZoom(16);\r\n        } else {\r\n            // Calculate bounds for multiple stops\r\n            const minLat = Math.min(...stopPositions.map(pos => pos[0]));\r\n            const maxLat = Math.max(...stopPositions.map(pos => pos[0]));\r\n            const minLng = Math.min(...stopPositions.map(pos => pos[1]));\r\n            const maxLng = Math.max(...stopPositions.map(pos => pos[1]));\r\n\r\n            // Center the map on the middle of the route\r\n            setMapCenter([\r\n                minLat + (maxLat - minLat) / 2,\r\n                minLng + (maxLng - minLng) / 2\r\n            ]);\r\n\r\n            // Calculate zoom level based on distance\r\n            const latDiff = maxLat - minLat;\r\n            const lngDiff = maxLng - minLng;\r\n            const maxDiff = Math.max(latDiff, lngDiff);\r\n\r\n            // Simple zoom calculation, adjust as needed\r\n            if (maxDiff < 0.005) setZoom(16);\r\n            else if (maxDiff < 0.01) setZoom(15);\r\n            else if (maxDiff < 0.02) setZoom(14);\r\n            else setZoom(13);\r\n        }\r\n    };\r\n\r\n    const getStopById = (stopId) => {\r\n        return stops.find(stop => stop.id === stopId);\r\n    };\r\n\r\n    const getBusById = (busId) => {\r\n        return buses.find(bus => bus.id === busId);\r\n    };\r\n\r\n    // Add stop marker icon based on whether it's start, middle, or end\r\n    const getStopIcon = (stopOrder, totalStops) => {\r\n        const iconUrl = stopOrder === 1 ?\r\n            'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png' :\r\n            (stopOrder === totalStops ?\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png' :\r\n                'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png');\r\n\r\n        return L.icon({\r\n            iconUrl,\r\n            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\r\n            iconSize: [25, 41],\r\n            iconAnchor: [12, 41],\r\n            popupAnchor: [1, -34],\r\n            shadowSize: [41, 41]\r\n        });\r\n    };\r\n\r\n    if (loading && !buses.length && !stops.length) {\r\n        return <div>Loading route data...</div>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"route-management\">\r\n            <h2>Route Management</h2>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <div className=\"action-buttons\">\r\n                <button\r\n                    className=\"refresh-button\"\r\n                    onClick={() => setRefreshTrigger(prev => prev + 1)}\r\n                    disabled={loading}\r\n                >\r\n                    {loading ? 'Refreshing...' : 'Refresh Data'}\r\n                </button>\r\n                \r\n                <button\r\n                    onClick={() => {\r\n                        window.enableOSRM = !window.enableOSRM;\r\n                        setUseDirectRoutes(!useDirectRoutes);\r\n                        setRefreshTrigger(prev => prev + 1);\r\n                    }}\r\n                >\r\n                    {useDirectRoutes ? \"Try OSRM Routes\" : \"Use Direct Routes\"}\r\n                </button>\r\n                \r\n                <button onClick={() => setShowMapDebug(!showMapDebug)}>\r\n                    {showMapDebug ? \"Hide Debug Info\" : \"Show Debug Info\"}\r\n                </button>\r\n            </div>\r\n            \r\n            {showMapDebug && (\r\n                <div className=\"debug-info\" style={{padding: '10px', backgroundColor: '#f0f0f0', margin: '10px 0', borderRadius: '5px'}}>\r\n                    <h4>Route Debug Information</h4>\r\n                    <p>Buses Loaded: {buses.length}</p>\r\n                    <p>Stops Loaded: {stops.length}</p>\r\n                    <p>Selected Bus: {selectedBus ? getBusById(selectedBus)?.name : 'None'}</p>\r\n                    <p>Route Stops: {formData.stops.length}</p>\r\n                    <p>Map Center: {mapCenter.join(', ')}</p>\r\n                    <button onClick={() => {\r\n                        window.routeDiagnostics.logState();\r\n                        console.log(\"Current formData:\", formData);\r\n                    }}>\r\n                        Log Debug Info to Console\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"route-management-content\">\r\n                <div className=\"bus-selector\">\r\n                    <h3>Select Bus to Manage Route</h3>\r\n                    <div className=\"bus-list\">\r\n                        {buses.map(bus => (\r\n                            <button\r\n                                key={bus.id}\r\n                                className={selectedBus === bus.id ? 'selected' : ''}\r\n                                onClick={() => handleBusSelect(bus.id)}\r\n                            >\r\n                                {bus.name}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedBus && (\r\n                    <div className=\"route-editor\">\r\n                        <h3>Route for {getBusById(selectedBus)?.name}</h3>\r\n\r\n                        {formData.stops.length === 0 ? (\r\n                            <p>No stops assigned to this route. Add stops below.</p>\r\n                        ) : (\r\n                            <table className=\"route-stops-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Order</th>\r\n                                        <th>Stop Name</th>\r\n                                        <th>Actions</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {[...formData.stops]\r\n                                        .sort((a, b) => a.stop_order - b.stop_order)\r\n                                        .map(routeStop => {\r\n                                            const stop = getStopById(routeStop.bus_stop_id);\r\n                                            return (\r\n                                                <tr key={routeStop.id}>\r\n                                                    <td>{routeStop.stop_order}</td>\r\n                                                    <td>{stop ? stop.name : 'Unknown Stop'}</td>\r\n                                                    <td>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order - 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === 1}\r\n                                                        >\r\n                                                            ↑\r\n                                                        </button>\r\n                                                        <button\r\n                                                            onClick={() => reorderStop(\r\n                                                                routeStop.id,\r\n                                                                routeStop.stop_order,\r\n                                                                routeStop.stop_order + 1\r\n                                                            )}\r\n                                                            disabled={routeStop.stop_order === formData.stops.length}\r\n                                                        >\r\n                                                            ↓\r\n                                                        </button>\r\n                                                        <button onClick={() => handleRemoveStop(routeStop.id)}>\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            );\r\n                                        })}\r\n                                </tbody>\r\n                            </table>\r\n                        )}\r\n\r\n                        <div className=\"add-stop-section\">\r\n                            <button\r\n                                onClick={() => setIsAddingStop(!isAddingStop)}\r\n                                className=\"add-stop-button\"\r\n                            >\r\n                                {isAddingStop ? 'Cancel Adding Stop' : 'Add Stop to Route'}\r\n                            </button>\r\n\r\n                            {isAddingStop && (\r\n                                <div className=\"available-stops\">\r\n                                    <h4>Select a stop to add:</h4>\r\n                                    <div className=\"stops-grid\">\r\n                                        {stops\r\n                                            .filter(stop => !formData.stops.some(s => s.bus_stop_id === stop.id))\r\n                                            .map(stop => (\r\n                                                <button\r\n                                                    key={stop.id}\r\n                                                    onClick={() => handleAddStop(stop.id)}\r\n                                                    className=\"stop-option\"\r\n                                                >\r\n                                                    {stop.name}\r\n                                                </button>\r\n                                            ))}\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"route-map-container\">\r\n                    <MapContainer\r\n                        center={mapCenter}\r\n                        zoom={zoom}\r\n                        className=\"map-container map-container-large\"\r\n                        ref={mapRef}\r\n                        key={`map-${selectedBus || 'default'}-${refreshTrigger}`}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n\r\n                        <MapUpdater center={mapCenter} zoom={zoom} />\r\n\r\n                        {/* Add our road-based routes component */}\r\n                        {selectedBus && formData.stops && formData.stops.length >= 2 && (\r\n                            <RoadBasedRoutes stops={formData.stops} />\r\n                        )}\r\n\r\n                        {/* Display all stops on the map */}\r\n                        {stops.map(stop => {\r\n                            // Check if this stop is in the selected bus's route\r\n                            const routeStopInfo = selectedBus && formData.stops.find(s => s.bus_stop_id === stop.id);\r\n                            const isInRoute = !!routeStopInfo;\r\n                            const stopOrder = isInRoute ? routeStopInfo.stop_order : null;\r\n                            const totalStops = formData.stops.length;\r\n\r\n                            return (\r\n                                <Marker\r\n                                    key={stop.id}\r\n                                    position={[stop.latitude, stop.longitude]}\r\n                                    icon={isInRoute ? getStopIcon(stopOrder, totalStops) : new L.Icon.Default()}\r\n                                >\r\n                                    <Popup>\r\n                                        <div>\r\n                                            <strong>{stop.name}</strong><br />\r\n\r\n                                            {isInRoute ? (\r\n                                                <span className=\"in-route\">\r\n                                                    Stop #{stopOrder} in route<br />\r\n                                                    <button onClick={() => handleRemoveStop(routeStopInfo.id)}>\r\n                                                        Remove from Route\r\n                                                    </button>\r\n                                                </span>\r\n                                            ) : (\r\n                                                selectedBus && isAddingStop && (\r\n                                                    <button onClick={() => handleAddStop(stop.id)}>\r\n                                                        Add to Route\r\n                                                    </button>\r\n                                                )\r\n                                            )}\r\n                                        </div>\r\n                                    </Popup>\r\n                                </Marker>\r\n                            );\r\n                        })}\r\n                    </MapContainer>\r\n                    \r\n                    {/* Route status indicator */}\r\n                    {selectedBus && (\r\n                        <div className=\"route-status\" style={{textAlign: 'center', marginTop: '10px'}}>\r\n                            <p>\r\n                                <strong>Route Status:</strong> {formData.stops.length < 2 \r\n                                    ? \"Add at least 2 stops to create a route\" \r\n                                    : `Route with ${formData.stops.length} stops`}\r\n                            </p>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RouteManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}