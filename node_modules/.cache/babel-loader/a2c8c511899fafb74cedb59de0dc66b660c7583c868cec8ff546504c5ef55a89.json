{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n\n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Create a utility function to safely remove a routing control\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n  try {\n    // First try to clear any route layers directly\n    if (routingControl._router && routingControl._router._routes) {\n      // Try to remove each route layer individually\n      routingControl._router._routes.forEach(route => {\n        if (route.line && map.hasLayer(route.line)) {\n          map.removeLayer(route.line);\n        }\n      });\n      routingControl._router._routes = [];\n    }\n\n    // Try to remove the line layer directly if it exists\n    if (routingControl._line && routingControl._line._route && map.hasLayer(routingControl._line._route)) {\n      map.removeLayer(routingControl._line._route);\n    }\n\n    // Clear any planned routes\n    if (routingControl._plan) {\n      routingControl._plan.setWaypoints([]);\n    }\n\n    // Then remove the control\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Enhanced RoutingControl component that tries proper routing with fallback\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#ff6b6b',\n  weight = 4,\n  setIsPathLoading,\n  onRoutingFailed\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const polylineRef = useRef(null);\n  const timeoutRef = useRef(null);\n  useEffect(() => {\n    // Start loading\n    setIsPathLoading(true);\n\n    // Clean up any existing routes\n    if (routingControlRef.current && map) {\n      try {\n        map.removeControl(routingControlRef.current);\n      } catch (e) {\n        console.warn(\"Error removing routing control:\", e);\n      }\n      routingControlRef.current = null;\n    }\n    if (polylineRef.current && map) {\n      map.removeLayer(polylineRef.current);\n      polylineRef.current = null;\n    }\n\n    // If we don't have both points, don't create a route\n    if (!startPoint || !endPoint) {\n      setIsPathLoading(false);\n      return;\n    }\n\n    // Set a timeout to show fallback route if OSRM takes too long\n    timeoutRef.current = setTimeout(() => {\n      // If we already have a route, don't create a fallback\n      if (routingControlRef.current) return;\n      console.log(\"Routing service timed out, falling back to direct line\");\n      createFallbackRoute();\n    }, 3000);\n\n    // Try to use proper routing first\n    try {\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        lineOptions: {\n          styles: [{\n            color,\n            opacity: 0.7,\n            weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        createMarker: () => null // No markers from routing\n      });\n\n      // Add event listeners for routing success/failure\n      routingControl.on('routesfound', () => {\n        console.log(\"Routes found successfully\");\n        // Clear timeout since we got a successful route\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n          timeoutRef.current = null;\n        }\n\n        // Remove any fallback route if it was created\n        if (polylineRef.current && map) {\n          map.removeLayer(polylineRef.current);\n          polylineRef.current = null;\n        }\n        setIsPathLoading(false);\n      });\n      routingControl.on('routingerror', e => {\n        console.log(\"Routing error, falling back to direct line\", e);\n        // If routing fails, create a direct line instead\n        createFallbackRoute();\n\n        // Clear the routing control\n        try {\n          map.removeControl(routingControl);\n        } catch (e) {\n          console.warn(\"Error removing routing control after error:\", e);\n        }\n        routingControlRef.current = null;\n      });\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n    } catch (e) {\n      console.error(\"Error setting up routing:\", e);\n      createFallbackRoute();\n    }\n\n    // Function to create a direct line as fallback\n    function createFallbackRoute() {\n      if (polylineRef.current) return; // Don't create if already exists\n\n      const routeCoordinates = [[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]];\n      const polyline = L.polyline(routeCoordinates, {\n        color: color,\n        weight: weight,\n        opacity: 0.7,\n        dashArray: '5, 10',\n        // Use dashed line to indicate this is a fallback\n        lineJoin: 'round'\n      });\n      polyline.addTo(map);\n      polylineRef.current = polyline;\n      setIsPathLoading(false);\n    }\n\n    // Cleanup function\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      if (routingControlRef.current && map) {\n        try {\n          map.removeControl(routingControlRef.current);\n        } catch (e) {\n          console.warn(\"Error removing routing control during cleanup:\", e);\n        }\n      }\n      if (polylineRef.current && map) {\n        map.removeLayer(polylineRef.current);\n      }\n      setIsPathLoading(false);\n    };\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"dEf6j02imKeVp0HT0XDDDEEF+2A=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Button to center on user's location\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 298,\n    columnNumber: 5\n  }, this);\n};\n_c3 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s3();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]);\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [routingKey, setRoutingKey] = useState(0);\n  const [routingFailMessage, setRoutingFailMessage] = useState(null);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation);\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      if (response.data && response.data.data) {\n        return response.data.data;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n\n      // First clear previous route\n      setSelectedStop(null);\n      setRoutingKey(Date.now()); // Use timestamp for unique key\n      setRoutingFailMessage(null);\n      setError(null);\n\n      // Use a timeout to ensure previous route is cleared\n      setTimeout(() => {\n        setSearchMarker([lat, lng]);\n\n        // Calculate distance from specified point to all bus stops\n        const results = busStops.map(stop => {\n          // Calculate distance in meters using Haversine formula\n          const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n          return {\n            ...stop,\n            distance: distance\n          };\n        });\n\n        // Sort by distance (closest first)\n        const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n        setSearchResults(sortedResults);\n        setHasSearched(true);\n\n        // Center map on search marker\n        setMapCenter([lat, lng]);\n        setZoom(16);\n      }, 50);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n\n  // Handle click on search result item - FIXED VERSION\n  const handleStopSelect = stop => {\n    // First clear the previous route\n    setSelectedStop(null);\n\n    // Generate a new unique routing key using timestamp\n    const newRoutingKey = Date.now();\n    setRoutingKey(newRoutingKey);\n    setRoutingFailMessage(null);\n\n    // Use a timeout to ensure the previous route is completely cleared\n    setTimeout(() => {\n      // Set the map center and zoom\n      setMapCenter([stop.latitude, stop.longitude]);\n      setZoom(18);\n\n      // Then set the new selected stop to create a new route\n      setSelectedStop(stop);\n\n      // Open the popup for this marker\n      const marker = markerRefs.current[stop.id];\n      if (marker) {\n        marker.openPopup();\n      }\n    }, 50);\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon1 - lon2) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in meters\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n\n  // Ensure loading screen doesn't stay forever\n  useEffect(() => {\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n      }, 5000); // 5 second timeout\n\n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading]);\n\n  // Handle routing failure\n  const handleRoutingFailed = () => {\n    setRoutingFailMessage(\"Routing failed. Please try again later.\");\n\n    // Auto-hide the message after 5 seconds\n    setTimeout(() => {\n      setRoutingFailMessage(null);\n    }, 5000);\n  };\n\n  // Pre-configure routing machine on component mount\n  useEffect(() => {\n    configureRoutingMachine();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Drawing path. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 9\n    }, this), routingFailMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routing-fail-message\",\n      children: routingFailMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 599,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 21\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 11\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 663,\n                columnNumber: 49\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 51\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 13\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 47\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this)), searchMarker && selectedStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: searchMarker,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading,\n          onRoutingFailed: handleRoutingFailed\n        }, `route-${routingKey}-${selectedStop.id}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 644,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 555,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to handle map clicks\n_s3(BusStopSearch, \"SN+BjoYPfud1q1tfh/v/KUZVskM=\");\n_c4 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker\n}) => {\n  _s4();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]);\n    }\n  });\n  return null;\n};\n_s4(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c5 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"LocationButton\");\n$RefreshReg$(_c4, \"BusStopSearch\");\n$RefreshReg$(_c5, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","Polyline","L","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","Control","showAlternatives","useZoomParameter","routeWhileDragging","addWaypoints","waypoints","createMarker","geocoder","fitSelectedRoutes","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","routeCache","Map","getRouteCacheKey","start","end","safelyRemoveRoutingControl","routingControl","map","_router","_routes","forEach","route","line","hasLayer","_line","_plan","setWaypoints","removeControl","error","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","onRoutingFailed","_s","routingControlRef","polylineRef","timeoutRef","current","setTimeout","log","createFallbackRoute","control","latLng","lineOptions","styles","opacity","extendToWaypoints","missingRouteTolerance","show","on","clearTimeout","addTo","routeCoordinates","polyline","dashArray","lineJoin","_c","MapController","center","zoom","_s2","setView","getZoom","_c2","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c3","BusStopSearch","setUserLocation","_s3","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","coordinates","setCoordinates","latitude","longitude","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","routingKey","setRoutingKey","routingFailMessage","setRoutingFailMessage","mapRef","markerRefs","registerMarker","id","markerRef","toFixed","fetchBusStops","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","stop","parseFloat","err","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","lat","lng","isNaN","Date","now","results","distance","calculateDistance","sortedResults","sort","a","b","handleStopSelect","newRoutingKey","marker","openPopup","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","handleRoutingFailed","htmlFor","type","onChange","placeholder","length","index","style","height","width","ref","attribution","url","MapEvents","position","icon","_c4","_s4","click","latlng","_c5","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n    \n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Create a utility function to safely remove a routing control\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n\n  try {\n    // First try to clear any route layers directly\n    if (routingControl._router && routingControl._router._routes) {\n      // Try to remove each route layer individually\n      routingControl._router._routes.forEach(route => {\n        if (route.line && map.hasLayer(route.line)) {\n          map.removeLayer(route.line);\n        }\n      });\n      routingControl._router._routes = [];\n    }\n    \n    // Try to remove the line layer directly if it exists\n    if (routingControl._line && routingControl._line._route && map.hasLayer(routingControl._line._route)) {\n      map.removeLayer(routingControl._line._route);\n    }\n    \n    // Clear any planned routes\n    if (routingControl._plan) {\n      routingControl._plan.setWaypoints([]);\n    }\n    \n    // Then remove the control\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Enhanced RoutingControl component that tries proper routing with fallback\nconst RoutingControl = ({ startPoint, endPoint, color = '#ff6b6b', weight = 4, setIsPathLoading, onRoutingFailed }) => {\n    const map = useMap();\n    const routingControlRef = useRef(null);\n    const polylineRef = useRef(null);\n    const timeoutRef = useRef(null);\n    \n    useEffect(() => {\n      // Start loading\n      setIsPathLoading(true);\n      \n      // Clean up any existing routes\n      if (routingControlRef.current && map) {\n        try {\n          map.removeControl(routingControlRef.current);\n        } catch (e) {\n          console.warn(\"Error removing routing control:\", e);\n        }\n        routingControlRef.current = null;\n      }\n      \n      if (polylineRef.current && map) {\n        map.removeLayer(polylineRef.current);\n        polylineRef.current = null;\n      }\n      \n      // If we don't have both points, don't create a route\n      if (!startPoint || !endPoint) {\n        setIsPathLoading(false);\n        return;\n      }\n      \n      // Set a timeout to show fallback route if OSRM takes too long\n      timeoutRef.current = setTimeout(() => {\n        // If we already have a route, don't create a fallback\n        if (routingControlRef.current) return;\n        \n        console.log(\"Routing service timed out, falling back to direct line\");\n        createFallbackRoute();\n      }, 3000);\n      \n      // Try to use proper routing first\n      try {\n        const routingControl = L.Routing.control({\n          waypoints: [\n            L.latLng(startPoint[0], startPoint[1]),\n            L.latLng(endPoint[0], endPoint[1])\n          ],\n          lineOptions: {\n            styles: [{ color, opacity: 0.7, weight }],\n            extendToWaypoints: true,\n            missingRouteTolerance: 0\n          },\n          routeWhileDragging: false,\n          showAlternatives: false,\n          addWaypoints: false,\n          fitSelectedRoutes: false,\n          show: false,\n          createMarker: () => null // No markers from routing\n        });\n        \n        // Add event listeners for routing success/failure\n        routingControl.on('routesfound', () => {\n          console.log(\"Routes found successfully\");\n          // Clear timeout since we got a successful route\n          if (timeoutRef.current) {\n            clearTimeout(timeoutRef.current);\n            timeoutRef.current = null;\n          }\n          \n          // Remove any fallback route if it was created\n          if (polylineRef.current && map) {\n            map.removeLayer(polylineRef.current);\n            polylineRef.current = null;\n          }\n          \n          setIsPathLoading(false);\n        });\n        \n        routingControl.on('routingerror', (e) => {\n          console.log(\"Routing error, falling back to direct line\", e);\n          // If routing fails, create a direct line instead\n          createFallbackRoute();\n          \n          // Clear the routing control\n          try {\n            map.removeControl(routingControl);\n          } catch (e) {\n            console.warn(\"Error removing routing control after error:\", e);\n          }\n          routingControlRef.current = null;\n        });\n        \n        routingControl.addTo(map);\n        routingControlRef.current = routingControl;\n      } catch (e) {\n        console.error(\"Error setting up routing:\", e);\n        createFallbackRoute();\n      }\n      \n      // Function to create a direct line as fallback\n      function createFallbackRoute() {\n        if (polylineRef.current) return; // Don't create if already exists\n        \n        const routeCoordinates = [\n          [startPoint[0], startPoint[1]],\n          [endPoint[0], endPoint[1]]\n        ];\n        \n        const polyline = L.polyline(routeCoordinates, {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '5, 10', // Use dashed line to indicate this is a fallback\n          lineJoin: 'round'\n        });\n        \n        polyline.addTo(map);\n        polylineRef.current = polyline;\n        setIsPathLoading(false);\n      }\n      \n      // Cleanup function\n      return () => {\n        if (timeoutRef.current) {\n          clearTimeout(timeoutRef.current);\n        }\n        \n        if (routingControlRef.current && map) {\n          try {\n            map.removeControl(routingControlRef.current);\n          } catch (e) {\n            console.warn(\"Error removing routing control during cleanup:\", e);\n          }\n        }\n        \n        if (polylineRef.current && map) {\n          map.removeLayer(polylineRef.current);\n        }\n        \n        setIsPathLoading(false);\n      };\n    }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n    \n    return null;\n  };\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n  const map = useMap();\n  \n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  \n  return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n  return (\n    <button \n      className=\"location-button\" \n      onClick={onClick}\n      disabled={!userLocation}\n      title=\"Center map on your location\"\n    >\n      <i className=\"fas fa-location-arrow\"></i> Your Current Location\n    </button>\n  );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]);\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [routingKey, setRoutingKey] = useState(0);\n  const [routingFailMessage, setRoutingFailMessage] = useState(null);\n  \n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n  \n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation);\n    }\n  }, [userLocation]);\n  \n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n      \n      // Extract the actual bus stops array from the response\n      if (response.data && response.data.data) {\n        return response.data.data;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n  \n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n        \n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n        \n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        \n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadBusStops();\n  }, []);\n  \n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n  \n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n      \n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || \n          lat < -90 || lat > 90 || \n          lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      \n      // First clear previous route\n      setSelectedStop(null);\n      setRoutingKey(Date.now());  // Use timestamp for unique key\n      setRoutingFailMessage(null);\n      \n      setError(null);\n      \n      // Use a timeout to ensure previous route is cleared\n      setTimeout(() => {\n        setSearchMarker([lat, lng]);\n        \n        // Calculate distance from specified point to all bus stops\n        const results = busStops.map(stop => {\n          // Calculate distance in meters using Haversine formula\n          const distance = calculateDistance(\n            lat, lng,\n            stop.latitude, stop.longitude\n          );\n          \n          return {\n            ...stop,\n            distance: distance\n          };\n        });\n        \n        // Sort by distance (closest first)\n        const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n        setSearchResults(sortedResults);\n        setHasSearched(true);\n        \n        // Center map on search marker\n        setMapCenter([lat, lng]);\n        setZoom(16);\n      }, 50);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n  \n  // Handle click on search result item - FIXED VERSION\n  const handleStopSelect = (stop) => {\n    // First clear the previous route\n    setSelectedStop(null);\n    \n    // Generate a new unique routing key using timestamp\n    const newRoutingKey = Date.now();\n    setRoutingKey(newRoutingKey);\n    setRoutingFailMessage(null);\n    \n    // Use a timeout to ensure the previous route is completely cleared\n    setTimeout(() => {\n      // Set the map center and zoom\n      setMapCenter([stop.latitude, stop.longitude]);\n      setZoom(18);\n      \n      // Then set the new selected stop to create a new route\n      setSelectedStop(stop);\n      \n      // Open the popup for this marker\n      const marker = markerRefs.current[stop.id];\n      if (marker) {\n        marker.openPopup();\n      }\n    }, 50);\n  };\n  \n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon1 - lon2) * Math.PI / 180;\n    \n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n            Math.cos(φ1) * Math.cos(φ2) *\n            Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    \n    return R * c; // Distance in meters\n  };\n  \n  // Format distance for display\n  const formatDistance = (meters) => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n  \n  // Ensure loading screen doesn't stay forever\n  useEffect(() => {\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n      }, 5000); // 5 second timeout\n      \n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading]);\n  \n  // Handle routing failure\n  const handleRoutingFailed = () => {\n    setRoutingFailMessage(\"Routing failed. Please try again later.\");\n    \n    // Auto-hide the message after 5 seconds\n    setTimeout(() => {\n      setRoutingFailMessage(null);\n    }, 5000);\n  };\n  \n  // Pre-configure routing machine on component mount\n  useEffect(() => {\n    configureRoutingMachine();\n  }, []);\n  \n  return (\n    <div className=\"bus-stop-search\">\n      {isPathLoading && (\n        <div className=\"full-page-loading-overlay\">\n          <div className=\"spinner\"></div>\n          <div>Drawing path. Please wait...</div>\n        </div>\n      )}\n      \n      {routingFailMessage && (\n        <div className=\"routing-fail-message\">\n          {routingFailMessage}\n        </div>\n      )}\n      \n      <div className=\"location-panel\">\n        <div className=\"location-panel-top\">\n          <h2>Search Bus Stops</h2>\n          {error && <div className=\"error-message\">{error}</div>}\n          \n          <div className=\"search-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"latitude\">Latitude:</label>\n              <input \n                type=\"text\" \n                id=\"latitude\" \n                name=\"latitude\" \n                value={coordinates.latitude} \n                onChange={handleInputChange} \n                placeholder=\"e.g. 22.3190\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"longitude\">Longitude:</label>\n              <input \n                type=\"text\" \n                id=\"longitude\" \n                name=\"longitude\" \n                value={coordinates.longitude} \n                onChange={handleInputChange} \n                placeholder=\"e.g. 87.3091\"\n              />\n            </div>\n            \n            <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n            \n            <button \n              className=\"search-btn\"\n              onClick={handleSearch}\n              disabled={loading}\n            >\n              {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"location-panel-bottom\">\n          {hasSearched && searchResults.length > 0 && (\n            <div className=\"search-results\">\n              <h3>Nearest Bus Stops</h3>\n              <div className=\"results-list\">\n                {searchResults.map((stop, index) => (\n                  <div \n                    key={stop.id} \n                    className=\"result-item\"\n                    onClick={() => handleStopSelect(stop)}\n                  >\n                    <div className=\"result-index\">{index + 1}</div>\n                    <div className=\"result-details\">\n                      <h4>{stop.name}</h4>\n                      <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                      <p className=\"coordinates\">\n                        {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {hasSearched && searchResults.length === 0 && (\n            <div className=\"no-results\">\n              <p>No bus stops found near the selected location.</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"map-container\">\n        <MapContainer\n          center={mapCenter}\n          zoom={zoom}\n          style={{ height: \"100%\", width: \"100%\" }}\n          ref={mapRef}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          <MapController center={mapCenter} zoom={zoom} />\n          <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} />\n          \n          {userLocation && (\n            <Marker position={userLocation} icon={userIcon}>\n              <Popup>\n                <div>\n                  <strong>Your Location</strong><br />\n                  {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {searchMarker && (\n            <Marker position={searchMarker} icon={searchMarkerIcon}>\n              <Popup>\n                <div>\n                  <strong>Search Location</strong><br />\n                  {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {busStops.map(stop => (\n            <Marker\n              key={stop.id}\n              position={[stop.latitude, stop.longitude]}\n              icon={busStopIcon}\n              ref={(ref) => registerMarker(stop.id, ref)}\n            >\n              <Popup>\n                <div>\n                  <strong>{stop.name}</strong><br />\n                  {searchMarker && (\n                    <span>\n                      Distance: {formatDistance(\n                        calculateDistance(\n                          searchMarker[0], searchMarker[1],\n                          stop.latitude, stop.longitude\n                        )\n                      )}\n                    </span>\n                  )}\n                </div>\n              </Popup>\n            </Marker>\n          ))}\n          \n          {/* Key route component with improved key generation to force re-renders */}\n          {searchMarker && selectedStop && (\n            <RoutingControl\n              key={`route-${routingKey}-${selectedStop.id}`}\n              startPoint={searchMarker}\n              endPoint={[selectedStop.latitude, selectedStop.longitude]}\n              color=\"#ff6b6b\"\n              weight={4}\n              setIsPathLoading={setIsPathLoading}\n              onRoutingFailed={handleRoutingFailed}\n            />\n          )}\n          \n          <div className=\"map-controls\">\n            <LocationButton\n              userLocation={userLocation}\n              onClick={handleCenterOnUser}\n            />\n          </div>\n        </MapContainer>\n      </div>\n    </div>\n  );\n};\n\n// Component to handle map clicks\nconst MapEvents = ({ setCoordinates, setSearchMarker }) => {\n  useMapEvents({\n    click: (e) => {\n      const { lat, lng } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]);\n    }\n  });\n  \n  return null;\n};\n\nexport default BusStopSearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}