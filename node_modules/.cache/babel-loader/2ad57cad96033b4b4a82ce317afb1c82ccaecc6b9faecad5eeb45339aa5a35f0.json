{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/user.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../css/user.css';\nimport BusTracking from './BusTracking';\nimport BusStopsView from './BusStopsView';\nimport BusStopSearch from './BusStopSearch'; // Import the new component\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const [userLocation, setUserLocation] = useState(null);\n  const [authError, setAuthError] = useState(null);\n  const [activeTab, setActiveTab] = useState('searchStops'); // Changed from 'busStops' to 'searchStops'\n  const navigate = useNavigate();\n\n  // Function to check if JWT token is expired\n  const checkTokenExpiration = useCallback(() => {\n    const token = localStorage.getItem('jwtToken');\n    if (!token) {\n      setAuthError('You must be logged in to access this feature');\n      return false;\n    }\n    try {\n      // JWT tokens are split into three parts by dots\n      const payload = token.split('.')[1];\n      // Decode the base64 encoded payload\n      const decodedPayload = JSON.parse(atob(payload));\n\n      // Check if token has expired\n      if (decodedPayload.exp && decodedPayload.exp * 1000 < Date.now()) {\n        // Token has expired\n        localStorage.removeItem('jwtToken'); // Remove the expired token\n        alert('Session timed out. Please login again.');\n        navigate('/login'); // Redirect to login page\n        return false;\n      }\n      return true;\n    } catch (error) {\n      console.error('Error checking token expiration:', error);\n      setAuthError('Authentication error. Please login again.');\n      return false;\n    }\n  }, [navigate]);\n\n  // Function to update user location in the database\n  const updateUserLocationInDB = useCallback(async () => {\n    if (!userLocation) return;\n    const token = localStorage.getItem('jwtToken');\n    if (!token) return;\n    try {\n      // Remove the /api prefix since it doesn't exist in the backend\n      const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      await axios.post(`${baseUrl}/location/update`, {\n        latitude: userLocation[0],\n        longitude: userLocation[1]\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('User location updated in the database');\n    } catch (error) {\n      console.error('Error updating user location:', error);\n    }\n  }, [userLocation]);\n\n  // Get user's location\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation([latitude, longitude]);\n      }, err => {\n        console.error(\"Geolocation error:\", err.message);\n        // Fall back to default location\n        setUserLocation([22.3149, 87.3104]);\n      });\n    }\n  }, []);\n\n  // Update user location in the database every 10 minutes\n  useEffect(() => {\n    // Only proceed if user is authenticated and location is available\n    if (!localStorage.getItem('jwtToken') || !userLocation) return;\n\n    // Update location immediately when component mounts\n    updateUserLocationInDB();\n\n    // Set up interval to update location every 10 minutes\n    const locationInterval = setInterval(() => {\n      // Get fresh location before updating\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const {\n            latitude,\n            longitude\n          } = position.coords;\n          setUserLocation([latitude, longitude]);\n          updateUserLocationInDB();\n        }, err => {\n          console.error(\"Geolocation refresh error:\", err.message);\n          // Use existing location if fresh location can't be obtained\n          updateUserLocationInDB();\n        });\n      } else {\n        // If geolocation is not available, update with existing location\n        updateUserLocationInDB();\n      }\n    }, 10 * 60 * 1000); // 10 minutes in milliseconds\n\n    // Clean up interval on component unmount\n    return () => {\n      clearInterval(locationInterval);\n    };\n  }, [userLocation, updateUserLocationInDB]);\n\n  // Check if user is logged in and set up token expiration check\n  useEffect(() => {\n    // Initial check\n    const isValid = checkTokenExpiration();\n    if (!isValid) {\n      return;\n    }\n\n    // Set up periodic token check (every 5 minutes)\n    const intervalId = setInterval(() => {\n      checkTokenExpiration();\n    }, 5 * 60 * 1000); // 5 minutes in milliseconds\n\n    // Clean up on component unmount\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [checkTokenExpiration]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-panel\",\n      children: [authError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-error-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: authError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => window.location.href = '/login',\n          children: \"Go to Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'searchStops' ? 'active' : ''}`,\n          onClick: () => setActiveTab('searchStops'),\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'busStops' ? 'active' : ''}`,\n          onClick: () => setActiveTab('busStops'),\n          children: \"Search Buses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'trackBus' ? 'active' : ''}`,\n          onClick: () => setActiveTab('trackBus'),\n          children: \"Track Bus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-area\",\n      children: activeTab === 'busStops' ? /*#__PURE__*/_jsxDEV(BusStopsView, {\n        userLocation: userLocation,\n        setUserLocation: setUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this) : activeTab === 'trackBus' ? /*#__PURE__*/_jsxDEV(BusTracking, {\n        userLocation: userLocation,\n        setUserLocation: setUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(BusStopSearch, {\n        userLocation: userLocation,\n        setUserLocation: setUserLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_s(User, \"d3yjqY9BIYq0WAPmTXdMYAgjqQE=\", false, function () {\n  return [useNavigate];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useNavigate","BusTracking","BusStopsView","BusStopSearch","axios","jsxDEV","_jsxDEV","User","_s","userLocation","setUserLocation","authError","setAuthError","activeTab","setActiveTab","navigate","checkTokenExpiration","token","localStorage","getItem","payload","split","decodedPayload","JSON","parse","atob","exp","Date","now","removeItem","alert","error","console","updateUserLocationInDB","baseUrl","process","env","REACT_APP_API_URL","post","latitude","longitude","headers","Authorization","log","navigator","geolocation","getCurrentPosition","position","coords","err","message","locationInterval","setInterval","clearInterval","isValid","intervalId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","_c","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/user.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../../css/user.css';\nimport BusTracking from './BusTracking';\nimport BusStopsView from './BusStopsView';\nimport BusStopSearch from './BusStopSearch'; // Import the new component\nimport axios from 'axios'; // Import axios for making HTTP requests\n\nconst User = () => {\n    const [userLocation, setUserLocation] = useState(null);\n    const [authError, setAuthError] = useState(null);\n    const [activeTab, setActiveTab] = useState('searchStops'); // Changed from 'busStops' to 'searchStops'\n    const navigate = useNavigate();\n\n    // Function to check if JWT token is expired\n    const checkTokenExpiration = useCallback(() => {\n        const token = localStorage.getItem('jwtToken');\n        \n        if (!token) {\n            setAuthError('You must be logged in to access this feature');\n            return false;\n        }\n\n        try {\n            // JWT tokens are split into three parts by dots\n            const payload = token.split('.')[1];\n            // Decode the base64 encoded payload\n            const decodedPayload = JSON.parse(atob(payload));\n            \n            // Check if token has expired\n            if (decodedPayload.exp && decodedPayload.exp * 1000 < Date.now()) {\n                // Token has expired\n                localStorage.removeItem('jwtToken'); // Remove the expired token\n                alert('Session timed out. Please login again.');\n                navigate('/login'); // Redirect to login page\n                return false;\n            }\n            \n            return true;\n        } catch (error) {\n            console.error('Error checking token expiration:', error);\n            setAuthError('Authentication error. Please login again.');\n            return false;\n        }\n    }, [navigate]);\n\n    // Function to update user location in the database\n    const updateUserLocationInDB = useCallback(async () => {\n        if (!userLocation) return;\n        \n        const token = localStorage.getItem('jwtToken');\n        if (!token) return;\n        \n        try {\n            // Remove the /api prefix since it doesn't exist in the backend\n            const baseUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n            await axios.post(\n                `${baseUrl}/location/update`,\n                {\n                    latitude: userLocation[0],\n                    longitude: userLocation[1]\n                },\n                {\n                    headers: {\n                        Authorization: `Bearer ${token}`\n                    }\n                }\n            );\n            console.log('User location updated in the database');\n        } catch (error) {\n            console.error('Error updating user location:', error);\n        }\n    }, [userLocation]);\n\n    // Get user's location\n    useEffect(() => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(\n                (position) => {\n                    const { latitude, longitude } = position.coords;\n                    setUserLocation([latitude, longitude]);\n                },\n                (err) => {\n                    console.error(\"Geolocation error:\", err.message);\n                    // Fall back to default location\n                    setUserLocation([22.3149, 87.3104]);\n                }\n            );\n        }\n    }, []);\n\n    // Update user location in the database every 10 minutes\n    useEffect(() => {\n        // Only proceed if user is authenticated and location is available\n        if (!localStorage.getItem('jwtToken') || !userLocation) return;\n        \n        // Update location immediately when component mounts\n        updateUserLocationInDB();\n        \n        // Set up interval to update location every 10 minutes\n        const locationInterval = setInterval(() => {\n            // Get fresh location before updating\n            if (navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(\n                    (position) => {\n                        const { latitude, longitude } = position.coords;\n                        setUserLocation([latitude, longitude]);\n                        updateUserLocationInDB();\n                    },\n                    (err) => {\n                        console.error(\"Geolocation refresh error:\", err.message);\n                        // Use existing location if fresh location can't be obtained\n                        updateUserLocationInDB();\n                    }\n                );\n            } else {\n                // If geolocation is not available, update with existing location\n                updateUserLocationInDB();\n            }\n        }, 10 * 60 * 1000); // 10 minutes in milliseconds\n        \n        // Clean up interval on component unmount\n        return () => {\n            clearInterval(locationInterval);\n        };\n    }, [userLocation, updateUserLocationInDB]);\n\n    // Check if user is logged in and set up token expiration check\n    useEffect(() => {\n        // Initial check\n        const isValid = checkTokenExpiration();\n        \n        if (!isValid) {\n            return;\n        }\n        \n        // Set up periodic token check (every 5 minutes)\n        const intervalId = setInterval(() => {\n            checkTokenExpiration();\n        }, 5 * 60 * 1000); // 5 minutes in milliseconds\n        \n        // Clean up on component unmount\n        return () => {\n            clearInterval(intervalId);\n        };\n    }, [checkTokenExpiration]);\n\n    return (\n        <div className=\"map-interface\">\n            <div className=\"header-panel\">                \n                {authError && (\n                    <div className=\"auth-error-message\">\n                        <p>{authError}</p>\n                        <button onClick={() => window.location.href = '/login'}>\n                            Go to Login\n                        </button>\n                    </div>\n                )}\n                \n                <div className=\"tab-navigation\">\n                    <button \n                        className={`tab-button ${activeTab === 'searchStops' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('searchStops')}\n                    >\n                        Search Bus Stops\n                    </button>\n                    <button \n                        className={`tab-button ${activeTab === 'busStops' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('busStops')}\n                    >\n                        Search Buses\n                    </button>\n                    <button \n                        className={`tab-button ${activeTab === 'trackBus' ? 'active' : ''}`}\n                        onClick={() => setActiveTab('trackBus')}\n                    >\n                        Track Bus\n                    </button>\n                </div>\n            </div>\n            \n            <div className=\"content-area\">\n                {activeTab === 'busStops' ? (\n                    <BusStopsView userLocation={userLocation} setUserLocation={setUserLocation} />\n                ) : activeTab === 'trackBus' ? (\n                    <BusTracking userLocation={userLocation} setUserLocation={setUserLocation} />\n                ) : (\n                    <BusStopSearch userLocation={userLocation} setUserLocation={setUserLocation} />\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default User;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}