{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js\",\n  _s = $RefreshSig$();\n// frontend/components/busStopsView.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../../css/user.css'; // Import common user CSS\nimport '../../css/busStopsView.css'; // Use busStopsView.css for specific styles\nimport api from '../../utils/api'; // Import the API utility\n\n// Custom bus icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// Bus stop icon\nconst stopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/484/484167.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\nconst BusStopsView = () => {\n  _s();\n  const [busStops, setBusStops] = useState([]);\n  const [fromStop, setFromStop] = useState('');\n  const [toStop, setToStop] = useState('');\n  const [buses, setBuses] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedBusLocation, setSelectedBusLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default center coordinates\n\n  // Reference to map component\n  const mapRef = useRef(null);\n\n  // New states for custom dropdowns\n  const [isFromDropdownOpen, setIsFromDropdownOpen] = useState(false);\n  const [isToDropdownOpen, setIsToDropdownOpen] = useState(false);\n  const [searchFrom, setSearchFrom] = useState('');\n  const [searchTo, setSearchTo] = useState('');\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n\n  // New state to track if search has been performed\n  const [hasSearched, setHasSearched] = useState(false);\n\n  // Fetch all bus stops on component mount\n  useEffect(() => {\n    const fetchBusStops = async () => {\n      setLoading(true);\n      try {\n        console.log('Fetching bus stops...');\n        // Use the API utility instead of direct axios calls\n        const response = await api.get('/bus_stops/getAllBusStops');\n        console.log('Bus stops API response:', response.data);\n        if (response.data && response.data.data) {\n          const stops = response.data.data;\n          console.log(`Received ${stops.length} bus stops`);\n          setBusStops(stops);\n\n          // If we have stops, set the map center to the first stop\n          if (stops.length > 0) {\n            setMapCenter([stops[0].latitude, stops[0].longitude]);\n          }\n        } else {\n          console.error('Unexpected API response format:', response.data);\n          setError('Received an invalid response from the server.');\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching bus stops:', err);\n        setError('Failed to load bus stops: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBusStops();\n  }, []);\n\n  // Add click-outside handler to close dropdowns\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setIsFromDropdownOpen(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setIsToDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Handle the search action for buses between stops\n  const handleSearch = async () => {\n    if (!fromStop || !toStop) {\n      setError('Please select both From and To stops.');\n      return;\n    }\n    if (fromStop === toStop) {\n      setError('From and To stops cannot be the same.');\n      return;\n    }\n    setLoading(true);\n    setHasSearched(true); // Mark that a search has been performed\n\n    try {\n      // Use the API utility with the correct endpoint\n      const response = await api.get(`/bus_routes/getBusesBetweenStops`, {\n        params: {\n          fromStopId: fromStop,\n          toStopId: toStop\n        }\n      });\n      if (response.data && response.data.data) {\n        setBuses(response.data.data);\n\n        // If there's at least one bus, pick the first bus location to show on the map\n        const firstBus = response.data.data[0];\n        if (firstBus && firstBus.location) {\n          setSelectedBusLocation(firstBus.location);\n          setMapCenter([firstBus.location.latitude, firstBus.location.longitude]);\n        } else {\n          // If no bus location, center on the \"from\" stop\n          const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n          if (fromStopObj) {\n            setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n          }\n        }\n      }\n      setError('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error fetching buses:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'No bus present on this route.');\n      setBuses([]);\n      setSelectedBusLocation(null);\n\n      // On error, reset map center to the \"from\" stop\n      const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n      if (fromStopObj) {\n        setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to find a stop by ID\n  const findStopById = id => {\n    return busStops.find(stop => stop.id === parseInt(id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Find Buses by Route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"fromStop\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bus-search\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-dropdown\",\n                ref: fromDropdownRef,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"fromStop\",\n                  value: searchFrom,\n                  onChange: e => {\n                    setSearchFrom(e.target.value);\n                    setIsFromDropdownOpen(true);\n                  },\n                  onClick: () => setIsFromDropdownOpen(!isFromDropdownOpen),\n                  placeholder: \"Select From Stop\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 37\n                }, this), isFromDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"dropdown-list\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"loading-item\",\n                    children: \"Loading bus stops...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 49\n                  }, this) : busStops.length > 0 ? busStops.filter(stop => stop.name.toLowerCase().includes(searchFrom.toLowerCase())).map(stop => /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => {\n                      setFromStop(stop.id);\n                      setSearchFrom(stop.name);\n                      setIsFromDropdownOpen(false);\n                    },\n                    children: stop.name\n                  }, stop.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 57\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"error-item\",\n                    children: \"No bus stops available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"toStop\",\n              children: \"To:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bus-search\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"custom-dropdown\",\n                ref: toDropdownRef,\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"toStop\",\n                  value: searchTo,\n                  onChange: e => {\n                    setSearchTo(e.target.value);\n                    setIsToDropdownOpen(true);\n                  },\n                  onClick: () => setIsToDropdownOpen(!isToDropdownOpen),\n                  placeholder: \"Select To Stop\",\n                  className: \"form-control\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 37\n                }, this), isToDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"dropdown-list\",\n                  children: loading ? /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"loading-item\",\n                    children: \"Loading bus stops...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 49\n                  }, this) : busStops.length > 0 ? busStops.filter(stop => stop.name.toLowerCase().includes(searchTo.toLowerCase())).map(stop => /*#__PURE__*/_jsxDEV(\"li\", {\n                    onClick: () => {\n                      setToStop(stop.id);\n                      setSearchTo(stop.name);\n                      setIsToDropdownOpen(false);\n                    },\n                    children: stop.name\n                  }, stop.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 57\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"error-item\",\n                    children: \"No bus stops available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 49\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"track-bus-btn\" // Updated to match Track a Bus button\n            ,\n            onClick: handleSearch,\n            disabled: loading || !fromStop || !toStop,\n            children: loading ? \"Loading...\" : \"Find Buses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: fromStop && toStop && hasSearched ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Available Buses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: buses.length > 0 ? buses.map(bus => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: bus.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 49\n                }, this), bus.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Last seen: \", new Date(bus.location.timestamp).toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: \"Location: Unknown\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 45\n              }, this)\n            }, bus.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 41\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-results\",\n              children: \"No buses found for this route.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-bus-info\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Please select both origin and destination stops from the dropdowns above to find available buses.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: 15,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: stopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: stop.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this)), selectedBusLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [selectedBusLocation.latitude, selectedBusLocation.longitude],\n          icon: busIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Bus Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 62\n            }, this), \"Last seen: \", new Date(selectedBusLocation.timestamp).toLocaleTimeString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n};\n_s(BusStopsView, \"fOTuVU08U/fqJi01VlnCOFvYb8U=\");\n_c = BusStopsView;\nexport default BusStopsView;\nvar _c;\n$RefreshReg$(_c, \"BusStopsView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","MapContainer","TileLayer","Marker","Popup","L","api","jsxDEV","_jsxDEV","busIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","stopIcon","BusStopsView","_s","busStops","setBusStops","fromStop","setFromStop","toStop","setToStop","buses","setBuses","error","setError","loading","setLoading","selectedBusLocation","setSelectedBusLocation","mapCenter","setMapCenter","mapRef","isFromDropdownOpen","setIsFromDropdownOpen","isToDropdownOpen","setIsToDropdownOpen","searchFrom","setSearchFrom","searchTo","setSearchTo","fromDropdownRef","toDropdownRef","hasSearched","setHasSearched","fetchBusStops","console","log","response","get","data","stops","length","latitude","longitude","err","_err$response","_err$response$data","message","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSearch","params","fromStopId","toStopId","firstBus","location","fromStopObj","find","stop","id","parseInt","_err$response2","_err$response2$data","findStopById","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","ref","type","value","onChange","e","onClick","placeholder","filter","name","toLowerCase","includes","map","disabled","bus","Date","timestamp","toLocaleTimeString","center","zoom","style","height","width","attribution","url","position","icon","_c","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js"],"sourcesContent":["// frontend/components/busStopsView.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../../css/user.css'; // Import common user CSS\nimport '../../css/busStopsView.css'; // Use busStopsView.css for specific styles\nimport api from '../../utils/api'; // Import the API utility\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// Bus stop icon\nconst stopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/484/484167.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\nconst BusStopsView = () => {\n    const [busStops, setBusStops] = useState([]);\n    const [fromStop, setFromStop] = useState('');\n    const [toStop, setToStop] = useState('');\n    const [buses, setBuses] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [selectedBusLocation, setSelectedBusLocation] = useState(null);\n    const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default center coordinates\n    \n    // Reference to map component\n    const mapRef = useRef(null);\n\n    // New states for custom dropdowns\n    const [isFromDropdownOpen, setIsFromDropdownOpen] = useState(false);\n    const [isToDropdownOpen, setIsToDropdownOpen] = useState(false);\n    const [searchFrom, setSearchFrom] = useState('');\n    const [searchTo, setSearchTo] = useState('');\n    const fromDropdownRef = useRef(null);\n    const toDropdownRef = useRef(null);\n\n    // New state to track if search has been performed\n    const [hasSearched, setHasSearched] = useState(false);\n\n    // Fetch all bus stops on component mount\n    useEffect(() => {\n        const fetchBusStops = async () => {\n            setLoading(true);\n            try {\n                console.log('Fetching bus stops...');\n                // Use the API utility instead of direct axios calls\n                const response = await api.get('/bus_stops/getAllBusStops');\n                console.log('Bus stops API response:', response.data);\n                \n                if(response.data && response.data.data) {\n                    const stops = response.data.data;\n                    console.log(`Received ${stops.length} bus stops`);\n                    setBusStops(stops);\n                    \n                    // If we have stops, set the map center to the first stop\n                    if (stops.length > 0) {\n                        setMapCenter([stops[0].latitude, stops[0].longitude]);\n                    }\n                } else {\n                    console.error('Unexpected API response format:', response.data);\n                    setError('Received an invalid response from the server.');\n                }\n            } catch (err) {\n                console.error('Error fetching bus stops:', err);\n                setError('Failed to load bus stops: ' + (err.response?.data?.message || err.message));\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        fetchBusStops();\n    }, []);\n\n    // Add click-outside handler to close dropdowns\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n                setIsFromDropdownOpen(false);\n            }\n            if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n                setIsToDropdownOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n\n    // Handle the search action for buses between stops\n    const handleSearch = async () => {\n        if (!fromStop || !toStop) {\n            setError('Please select both From and To stops.');\n            return;\n        }\n        \n        if (fromStop === toStop) {\n            setError('From and To stops cannot be the same.');\n            return;\n        }\n\n        setLoading(true);\n        setHasSearched(true); // Mark that a search has been performed\n        \n        try {\n            // Use the API utility with the correct endpoint\n            const response = await api.get(`/bus_routes/getBusesBetweenStops`, {\n                params: { fromStopId: fromStop, toStopId: toStop }\n            });\n            \n            if (response.data && response.data.data) {\n                setBuses(response.data.data);\n                \n                // If there's at least one bus, pick the first bus location to show on the map\n                const firstBus = response.data.data[0];\n                if (firstBus && firstBus.location) {\n                    setSelectedBusLocation(firstBus.location);\n                    setMapCenter([firstBus.location.latitude, firstBus.location.longitude]);\n                } else {\n                    // If no bus location, center on the \"from\" stop\n                    const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n                    if (fromStopObj) {\n                        setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n                    }\n                }\n            }\n            setError('');\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n            setError(err.response?.data?.message || 'No bus present on this route.');\n            setBuses([]);\n            setSelectedBusLocation(null);\n            \n            // On error, reset map center to the \"from\" stop\n            const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n            if (fromStopObj) {\n                setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Helper function to find a stop by ID\n    const findStopById = (id) => {\n        return busStops.find(stop => stop.id === parseInt(id));\n    };\n\n    return (\n        <div className=\"bus-stop-search\">\n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Find Buses by Route</h2>\n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"fromStop\">From:</label>\n                            {/* Updated dropdown to match \"Track a Bus\" style */}\n                            <div className=\"bus-search\">\n                                <div className=\"custom-dropdown\" ref={fromDropdownRef}>\n                                    <input \n                                        type=\"text\" \n                                        id=\"fromStop\"\n                                        value={searchFrom}\n                                        onChange={(e) => {\n                                            setSearchFrom(e.target.value);\n                                            setIsFromDropdownOpen(true);\n                                        }}\n                                        onClick={() => setIsFromDropdownOpen(!isFromDropdownOpen)}\n                                        placeholder=\"Select From Stop\"\n                                        className=\"form-control\"\n                                    />\n                                    {isFromDropdownOpen && (\n                                        <ul className=\"dropdown-list\">\n                                            {loading ? (\n                                                <li className=\"loading-item\">Loading bus stops...</li>\n                                            ) : busStops.length > 0 ? (\n                                                busStops\n                                                    .filter(stop => stop.name.toLowerCase().includes(searchFrom.toLowerCase()))\n                                                    .map(stop => (\n                                                        <li key={stop.id} onClick={() => {\n                                                            setFromStop(stop.id);\n                                                            setSearchFrom(stop.name);\n                                                            setIsFromDropdownOpen(false);\n                                                        }}>\n                                                            {stop.name}\n                                                        </li>\n                                                    ))\n                                            ) : (\n                                                <li className=\"error-item\">No bus stops available</li>\n                                            )}\n                                        </ul>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"toStop\">To:</label>\n                            {/* Updated dropdown to match \"Track a Bus\" style */}\n                            <div className=\"bus-search\">\n                                <div className=\"custom-dropdown\" ref={toDropdownRef}>\n                                    <input \n                                        type=\"text\" \n                                        id=\"toStop\"\n                                        value={searchTo}\n                                        onChange={(e) => {\n                                            setSearchTo(e.target.value);\n                                            setIsToDropdownOpen(true);\n                                        }}\n                                        onClick={() => setIsToDropdownOpen(!isToDropdownOpen)}\n                                        placeholder=\"Select To Stop\"\n                                        className=\"form-control\"\n                                    />\n                                    {isToDropdownOpen && (\n                                        <ul className=\"dropdown-list\">\n                                            {loading ? (\n                                                <li className=\"loading-item\">Loading bus stops...</li>\n                                            ) : busStops.length > 0 ? (\n                                                busStops\n                                                    .filter(stop => stop.name.toLowerCase().includes(searchTo.toLowerCase()))\n                                                    .map(stop => (\n                                                        <li key={stop.id} onClick={() => {\n                                                            setToStop(stop.id);\n                                                            setSearchTo(stop.name);\n                                                            setIsToDropdownOpen(false);\n                                                        }}>\n                                                            {stop.name}\n                                                        </li>\n                                                    ))\n                                            ) : (\n                                                <li className=\"error-item\">No bus stops available</li>\n                                            )}\n                                        </ul>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <button \n                            className=\"track-bus-btn\" // Updated to match Track a Bus button\n                            onClick={handleSearch} \n                            disabled={loading || !fromStop || !toStop}\n                        >\n                            {loading ? \"Loading...\" : \"Find Buses\"}\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"location-panel-bottom\">\n                    {/* Conditionally show results only after search */}\n                    {fromStop && toStop && hasSearched ? (\n                        <div className=\"search-results\">\n                            <h3>Available Buses</h3>\n                            <div className=\"results-list\">\n                                {buses.length > 0 ? (\n                                    buses.map((bus) => (\n                                        <div key={bus.id} className=\"result-item\">\n                                            <div className=\"result-details\">\n                                                <h4>{bus.name}</h4>\n                                                {bus.location ? (\n                                                    <p className=\"distance\">\n                                                        Last seen: {new Date(bus.location.timestamp).toLocaleTimeString()}\n                                                    </p>\n                                                ) : (\n                                                    <p className=\"distance\">Location: Unknown</p>\n                                                )}\n                                            </div>\n                                        </div>\n                                    ))\n                                ) : (\n                                    <p className=\"no-results\">No buses found for this route.</p>\n                                )}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"selected-bus-info\">\n                            <p className=\"help-text\">\n                                Please select both origin and destination stops from the dropdowns above to find available buses.\n                            </p>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={15}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={mapRef}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    {/* Show all bus stops on map */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={stopIcon}\n                        >\n                            <Popup>\n                                <strong>{stop.name}</strong>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Show selected bus location if available */}\n                    {selectedBusLocation && (\n                        <Marker\n                            position={[selectedBusLocation.latitude, selectedBusLocation.longitude]}\n                            icon={busIcon}\n                        >\n                            <Popup>\n                                <strong>Bus Location</strong><br />\n                                Last seen: {new Date(selectedBusLocation.timestamp).toLocaleTimeString()}\n                            </Popup>\n                        </Marker>\n                    )}\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\nexport default BusStopsView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}