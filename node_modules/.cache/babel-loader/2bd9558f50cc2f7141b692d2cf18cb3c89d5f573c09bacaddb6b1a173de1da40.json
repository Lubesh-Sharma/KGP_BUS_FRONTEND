{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusTracking.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api from '../../utils/api.js';\nimport '../../css/busTracking.css';\n\n// Custom bus icon\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// User location icon\nconst userIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Component to handle routing between points\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Clear previous routing if it exists\n    if (routingControlRef.current) {\n      map.removeControl(routingControlRef.current);\n      routingControlRef.current = null;\n    }\n    try {\n      // Create new routing control\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{\n            color,\n            opacity: 0.7,\n            weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        createMarker: () => null // No markers from routing\n      });\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n\n      // Set up cleanup function\n      return () => {\n        if (routingControlRef.current) {\n          map.removeControl(routingControlRef.current);\n        }\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n    }\n  }, [map, startPoint, endPoint, color, weight]);\n  return null;\n};\n\n// Component to recenter map when needed\n_s(RoutingControl, \"6JzDAggtQ4Wk6OozRhYG+mU/G1E=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapViewController = ({\n  center,\n  zoom,\n  busLocation\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center && zoom) {\n      map.setView(center, zoom);\n    } else if (busLocation) {\n      map.setView(busLocation, map.getZoom());\n    }\n  }, [map, center, zoom, busLocation]);\n  return null;\n};\n_s2(MapViewController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapViewController;\nconst BusTracking = ({\n  userLocation\n}) => {\n  _s3();\n  const [buses, setBuses] = useState([]);\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [busLocation, setBusLocation] = useState(null);\n  const [busStops, setBusStops] = useState([]);\n  const [nextStop, setNextStop] = useState(null);\n  const [currentStop, setCurrentStop] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [busInfo, setBusInfo] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to IIT KGP\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const intervalRef = useRef(null);\n\n  // State for the custom dropdown\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const dropdownRef = useRef(null);\n\n  // Fetch list of buses on mount\n  useEffect(() => {\n    fetchBuses();\n  }, []);\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    }\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // Clean up interval on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  // Fetch bus data when selection changes\n  useEffect(() => {\n    if (selectedBus) {\n      fetchBusData(selectedBus.id);\n      setIsInitialLoad(false);\n\n      // Set up interval for refreshing bus location\n      intervalRef.current = setInterval(() => {\n        fetchBusData(selectedBus.id, false);\n      }, 30000); // Refresh every 30 seconds\n    } else {\n      // Clear interval when no bus is selected\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [selectedBus]);\n  const fetchBuses = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/buses/getAllBuses');\n      if (response.data && response.data.data) {\n        setBuses(response.data.data);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n      setError('Failed to load buses. Please try again later.');\n      setLoading(false);\n    }\n  };\n  const fetchBusData = async (busId, showLoading = true) => {\n    try {\n      if (showLoading) setLoading(true);\n\n      // Clear error when fetching new data\n      setError(null);\n\n      // Fetch bus location\n      const locationResponse = await api.get(`/buses/${busId}/location`);\n      if (locationResponse.data && locationResponse.data.data) {\n        const location = locationResponse.data.data;\n        setBusLocation([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        setLastUpdated(new Date(location.timestamp));\n\n        // If it's the first load or significant movement, center map on bus\n        if (isInitialLoad || !busLocation) {\n          setMapCenter([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        }\n      } else {\n        // Just set bus location to null without an error message\n        setBusLocation(null);\n      }\n\n      // Fetch bus route information\n      const routeResponse = await api.get(`/buses/${busId}/route`);\n      if (routeResponse.data && routeResponse.data.data) {\n        const routeData = routeResponse.data.data;\n        setBusStops(routeData.stops);\n\n        // Find current and next stop\n        if (routeData.currentStop) {\n          setCurrentStop(routeData.currentStop);\n        }\n        if (routeData.nextStop) {\n          setNextStop(routeData.nextStop);\n        }\n      }\n\n      // Fetch bus detailed info including driver\n      const infoResponse = await api.get(`/buses/${busId}/info`);\n      if (infoResponse.data && infoResponse.data.data) {\n        setBusInfo(infoResponse.data.data);\n      }\n      if (showLoading) setLoading(false);\n    } catch (err) {\n      //   console.error('Error fetching bus data:', err);\n      // Only set an error if there's a network/server issue, not for missing bus data\n      //   setError('Server connection issue. Please try again later.');\n      if (showLoading) setLoading(false);\n    }\n  };\n\n  // Filter buses based on search query\n  const filteredBuses = buses.filter(bus => bus.name.toLowerCase().includes(searchQuery.toLowerCase()));\n\n  // Handle selecting a bus from the dropdown\n  const handleBusSelect = bus => {\n    setSelectedBus(bus);\n    setSearchQuery(bus.name);\n    setIsDropdownOpen(false);\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-tracking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bus-selection-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Track a Bus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-search\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"custom-dropdown\",\n          ref: dropdownRef,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-header\",\n            onClick: () => setIsDropdownOpen(!isDropdownOpen),\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchQuery,\n              onChange: e => {\n                setSearchQuery(e.target.value);\n                setIsDropdownOpen(true);\n              },\n              placeholder: \"Search for a bus...\",\n              className: \"dropdown-search\",\n              onClick: e => {\n                e.stopPropagation();\n                setIsDropdownOpen(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dropdown-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: `fa fa-chevron-${isDropdownOpen ? 'up' : 'down'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"dropdown-list\",\n            children: filteredBuses.length > 0 ? filteredBuses.map(bus => /*#__PURE__*/_jsxDEV(\"li\", {\n              onClick: () => handleBusSelect(bus),\n              className: selectedBus && selectedBus.id === bus.id ? 'selected' : '',\n              children: bus.name\n            }, bus.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"no-results\",\n              children: \"No buses found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"track-bus-btn\",\n          onClick: () => selectedBus && fetchBusData(selectedBus.id),\n          disabled: !selectedBus || loading,\n          children: loading ? 'Loading...' : 'Track Bus'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }, this), selectedBus && !busLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-bus-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedBus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-status not-active\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"This bus is currently not in service.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-bus-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: selectedBus.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus-status active\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Status:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 18\n            }, this), \" Active\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last Updated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 18\n            }, this), \" \", lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), busInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Driver:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 22\n              }, this), \" \", busInfo.driverName || 'Not assigned']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 19\n            }, this), currentStop && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Last Stop:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 24\n              }, this), \" \", currentStop.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 21\n            }, this), nextStop && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Next Stop:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 26\n                }, this), \" \", nextStop.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 23\n              }, this), busInfo.estimatedArrival && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"ETA:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 28\n                }, this), \" \", busInfo.estimatedArrival, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), !selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"initial-message\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please select a bus from the dropdown above to track its location.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bus-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: userLocation || [22.3190, 87.3091] // Use user location or default to IIT KGP\n        ,\n        zoom: 15,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Your location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(MapViewController, {\n          center: mapCenter,\n          busLocation: busLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this), selectedBus && busLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: busLocation,\n          icon: busIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bus-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: selectedBus.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 19\n              }, this), busInfo && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Driver:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 26\n                  }, this), \" \", busInfo.driverName || 'Not assigned']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Last Updated:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 26\n                  }, this), \" \", lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 23\n                }, this), busInfo.estimatedArrival && nextStop && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"ETA to \", nextStop.name, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 28\n                  }, this), \" \", busInfo.estimatedArrival, \" min\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), selectedBus && currentStop && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [parseFloat(currentStop.latitude), parseFloat(currentStop.longitude)],\n          icon: busStopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stop-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: currentStop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Last stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 13\n        }, this), selectedBus && nextStop && /*#__PURE__*/_jsxDEV(Marker, {\n          position: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)],\n          icon: busStopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stop-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: nextStop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Next stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 19\n              }, this), busInfo && busInfo.estimatedArrival && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Bus arrives in approx. \", busInfo.estimatedArrival, \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this), selectedBus && busLocation && nextStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: busLocation,\n          endPoint: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)],\n          color: \"#3388ff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), selectedBus && userLocation && nextStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: userLocation,\n          endPoint: [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)],\n          color: \"#ff6b6b\",\n          weight: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this), selectedBus && busLocation && nextStop && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#3388ff'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bus Route to Next Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"legend-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-icon\",\n            style: {\n              backgroundColor: '#ff6b6b'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Your Path to Next Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this), !selectedBus && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-instructions-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select a bus from the left panel to see its location and route\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n};\n_s3(BusTracking, \"q5J54tvwGV74yhn4ZEbeJSHqLBg=\");\n_c3 = BusTracking;\nexport default BusTracking;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapViewController\");\n$RefreshReg$(_c3, \"BusTracking\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMap","L","api","jsxDEV","_jsxDEV","Fragment","_Fragment","busIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","busStopIcon","RoutingControl","startPoint","endPoint","color","weight","_s","map","routingControlRef","current","removeControl","routingControl","Routing","control","waypoints","latLng","routeWhileDragging","showAlternatives","addWaypoints","fitSelectedRoutes","show","lineOptions","styles","opacity","extendToWaypoints","missingRouteTolerance","createMarker","addTo","error","console","_c","MapViewController","center","zoom","busLocation","_s2","setView","getZoom","_c2","BusTracking","userLocation","_s3","buses","setBuses","selectedBus","setSelectedBus","setBusLocation","busStops","setBusStops","nextStop","setNextStop","currentStop","setCurrentStop","loading","setLoading","setError","lastUpdated","setLastUpdated","busInfo","setBusInfo","mapCenter","setMapCenter","isInitialLoad","setIsInitialLoad","intervalRef","isDropdownOpen","setIsDropdownOpen","searchQuery","setSearchQuery","dropdownRef","fetchBuses","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","clearInterval","fetchBusData","id","setInterval","response","get","data","err","busId","showLoading","locationResponse","location","parseFloat","latitude","longitude","Date","timestamp","routeResponse","routeData","stops","infoResponse","filteredBuses","filter","bus","name","toLowerCase","includes","handleBusSelect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","value","onChange","e","placeholder","stopPropagation","length","disabled","toLocaleTimeString","driverName","estimatedArrival","style","height","width","attribution","url","position","icon","backgroundColor","_c3","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusTracking.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport api from '../../utils/api.js';\nimport '../../css/busTracking.css';\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// User location icon\nconst userIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Component to handle routing between points\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4 }) => {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Clear previous routing if it exists\n    if (routingControlRef.current) {\n      map.removeControl(routingControlRef.current);\n      routingControlRef.current = null;\n    }\n\n    try {\n      // Create new routing control\n      const routingControl = L.Routing.control({\n        waypoints: [\n          L.latLng(startPoint[0], startPoint[1]),\n          L.latLng(endPoint[0], endPoint[1])\n        ],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        addWaypoints: false,\n        fitSelectedRoutes: false,\n        show: false,\n        lineOptions: {\n          styles: [{ color, opacity: 0.7, weight }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 0\n        },\n        createMarker: () => null // No markers from routing\n      });\n\n      routingControl.addTo(map);\n      routingControlRef.current = routingControl;\n\n      // Set up cleanup function\n      return () => {\n        if (routingControlRef.current) {\n          map.removeControl(routingControlRef.current);\n        }\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n    }\n  }, [map, startPoint, endPoint, color, weight]);\n\n  return null;\n};\n\n// Component to recenter map when needed\nconst MapViewController = ({ center, zoom, busLocation }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (center && zoom) {\n      map.setView(center, zoom);\n    } else if (busLocation) {\n      map.setView(busLocation, map.getZoom());\n    }\n  }, [map, center, zoom, busLocation]);\n\n  return null;\n};\n\nconst BusTracking = ({ userLocation }) => {\n  const [buses, setBuses] = useState([]);\n  const [selectedBus, setSelectedBus] = useState(null);\n  const [busLocation, setBusLocation] = useState(null);\n  const [busStops, setBusStops] = useState([]);\n  const [nextStop, setNextStop] = useState(null);\n  const [currentStop, setCurrentStop] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [lastUpdated, setLastUpdated] = useState(null);\n  const [busInfo, setBusInfo] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to IIT KGP\n  const [isInitialLoad, setIsInitialLoad] = useState(true);\n  const intervalRef = useRef(null);\n  \n  // State for the custom dropdown\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const dropdownRef = useRef(null);\n\n  // Fetch list of buses on mount\n  useEffect(() => {\n    fetchBuses();\n  }, []);\n  \n  // Close dropdown when clicking outside\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setIsDropdownOpen(false);\n      }\n    }\n    \n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  // Clean up interval on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  // Fetch bus data when selection changes\n  useEffect(() => {\n    if (selectedBus) {\n      fetchBusData(selectedBus.id);\n      setIsInitialLoad(false);\n      \n      // Set up interval for refreshing bus location\n      intervalRef.current = setInterval(() => {\n        fetchBusData(selectedBus.id, false);\n      }, 30000); // Refresh every 30 seconds\n    } else {\n      // Clear interval when no bus is selected\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [selectedBus]);\n\n  const fetchBuses = async () => {\n    try {\n      setLoading(true);\n      const response = await api.get('/buses/getAllBuses');\n      if (response.data && response.data.data) {\n        setBuses(response.data.data);\n      }\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching buses:', err);\n      setError('Failed to load buses. Please try again later.');\n      setLoading(false);\n    }\n  };\n\n  const fetchBusData = async (busId, showLoading = true) => {\n    try {\n      if (showLoading) setLoading(true);\n      \n      // Clear error when fetching new data\n      setError(null);\n      \n      // Fetch bus location\n      const locationResponse = await api.get(`/buses/${busId}/location`);\n      if (locationResponse.data && locationResponse.data.data) {\n        const location = locationResponse.data.data;\n        setBusLocation([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        setLastUpdated(new Date(location.timestamp));\n        \n        // If it's the first load or significant movement, center map on bus\n        if (isInitialLoad || !busLocation) {\n          setMapCenter([parseFloat(location.latitude), parseFloat(location.longitude)]);\n        }\n      } else {\n        // Just set bus location to null without an error message\n        setBusLocation(null);\n      }\n      \n      // Fetch bus route information\n      const routeResponse = await api.get(`/buses/${busId}/route`);\n      if (routeResponse.data && routeResponse.data.data) {\n        const routeData = routeResponse.data.data;\n        setBusStops(routeData.stops);\n        \n        // Find current and next stop\n        if (routeData.currentStop) {\n          setCurrentStop(routeData.currentStop);\n        }\n        \n        if (routeData.nextStop) {\n          setNextStop(routeData.nextStop);\n        }\n      }\n      \n      // Fetch bus detailed info including driver\n      const infoResponse = await api.get(`/buses/${busId}/info`);\n      if (infoResponse.data && infoResponse.data.data) {\n        setBusInfo(infoResponse.data.data);\n      }\n      \n      if (showLoading) setLoading(false);\n    } catch (err) {\n    //   console.error('Error fetching bus data:', err);\n      // Only set an error if there's a network/server issue, not for missing bus data\n    //   setError('Server connection issue. Please try again later.');\n      if (showLoading) setLoading(false);\n    }\n  };\n\n  // Filter buses based on search query\n  const filteredBuses = buses.filter(bus => \n    bus.name.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n  \n  // Handle selecting a bus from the dropdown\n  const handleBusSelect = (bus) => {\n    setSelectedBus(bus);\n    setSearchQuery(bus.name);\n    setIsDropdownOpen(false);\n    setError(null);\n  };\n\n  return (\n    <div className=\"bus-tracking-container\">\n      <div className=\"bus-selection-panel\">\n        <h3>Track a Bus</h3>\n        \n        <div className=\"bus-search\">\n          <div className=\"custom-dropdown\" ref={dropdownRef}>\n            <div \n              className=\"dropdown-header\" \n              onClick={() => setIsDropdownOpen(!isDropdownOpen)}\n            >\n              <input\n                type=\"text\"\n                value={searchQuery}\n                onChange={(e) => {\n                  setSearchQuery(e.target.value);\n                  setIsDropdownOpen(true);\n                }}\n                placeholder=\"Search for a bus...\"\n                className=\"dropdown-search\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  setIsDropdownOpen(true);\n                }}\n              />\n              <div className=\"dropdown-icon\">\n                <i className={`fa fa-chevron-${isDropdownOpen ? 'up' : 'down'}`}></i>\n              </div>\n            </div>\n            \n            {isDropdownOpen && (\n              <ul className=\"dropdown-list\">\n                {filteredBuses.length > 0 ? (\n                  filteredBuses.map(bus => (\n                    <li \n                      key={bus.id} \n                      onClick={() => handleBusSelect(bus)}\n                      className={selectedBus && selectedBus.id === bus.id ? 'selected' : ''}\n                    >\n                      {bus.name}\n                    </li>\n                  ))\n                ) : (\n                  <li className=\"no-results\">No buses found</li>\n                )}\n              </ul>\n            )}\n          </div>\n          \n          <button \n            className=\"track-bus-btn\"\n            onClick={() => selectedBus && fetchBusData(selectedBus.id)}\n            disabled={!selectedBus || loading}\n          >\n            {loading ? 'Loading...' : 'Track Bus'}\n          </button>\n        </div>\n        \n        {/* Only display network/server errors, not missing bus data errors */}\n        {error && <div className=\"error-message\">{error}</div>}\n        \n        {selectedBus && !busLocation && (\n          <div className=\"selected-bus-info\">\n            <h4>{selectedBus.name}</h4>\n            <div className=\"bus-status not-active\">\n              <p>This bus is currently not in service.</p>\n            </div>\n          </div>\n        )}\n        \n        {selectedBus && busLocation && (\n          <div className=\"selected-bus-info\">\n            <h4>{selectedBus.name}</h4>\n            <div className=\"bus-status active\">\n              <p><strong>Status:</strong> Active</p>\n              <p><strong>Last Updated:</strong> {lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A'}</p>\n              \n              {busInfo && (\n                <>\n                  <p><strong>Driver:</strong> {busInfo.driverName || 'Not assigned'}</p>\n                  {currentStop && (\n                    <p><strong>Last Stop:</strong> {currentStop.name}</p>\n                  )}\n                  {nextStop && (\n                    <>\n                      <p><strong>Next Stop:</strong> {nextStop.name}</p>\n                      {busInfo.estimatedArrival && (\n                        <p><strong>ETA:</strong> {busInfo.estimatedArrival} min</p>\n                      )}\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        )}\n        \n        {!selectedBus && (\n          <div className=\"initial-message\">\n            <p>Please select a bus from the dropdown above to track its location.</p>\n          </div>\n        )}\n      </div>\n      \n      {/* Always show the map container, even when no bus is selected */}\n      <div className=\"bus-map-container\">\n        <MapContainer\n          center={userLocation || [22.3190, 87.3091]} // Use user location or default to IIT KGP\n          zoom={15}\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          \n          {/* Show user's current location on map */}\n          {userLocation && (\n            <Marker position={userLocation} icon={userIcon}>\n              <Popup>Your location</Popup>\n            </Marker>\n          )}\n          \n          {/* Only show MapViewController when we have relevant locations */}\n          {(selectedBus && busLocation) && (\n            <MapViewController \n              center={mapCenter} \n              busLocation={busLocation}\n            />\n          )}\n          \n          {/* Show bus location only if available */}\n          {(selectedBus && busLocation) && (\n            <Marker position={busLocation} icon={busIcon}>\n              <Popup>\n                <div className=\"bus-popup\">\n                  <h3>{selectedBus.name}</h3>\n                  {busInfo && (\n                    <>\n                      <p><strong>Driver:</strong> {busInfo.driverName || 'Not assigned'}</p>\n                      <p><strong>Last Updated:</strong> {lastUpdated ? lastUpdated.toLocaleTimeString() : 'N/A'}</p>\n                      {busInfo.estimatedArrival && nextStop && (\n                        <p><strong>ETA to {nextStop.name}:</strong> {busInfo.estimatedArrival} min</p>\n                      )}\n                    </>\n                  )}\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {/* Show current and next bus stops if available */}\n          {(selectedBus && currentStop) && (\n            <Marker \n              position={[parseFloat(currentStop.latitude), parseFloat(currentStop.longitude)]} \n              icon={busStopIcon}\n            >\n              <Popup>\n                <div className=\"stop-popup\">\n                  <h3>{currentStop.name}</h3>\n                  <p>Last stop</p>\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {(selectedBus && nextStop) && (\n            <Marker \n              position={[parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]} \n              icon={busStopIcon}\n            >\n              <Popup>\n                <div className=\"stop-popup\">\n                  <h3>{nextStop.name}</h3>\n                  <p>Next stop</p>\n                  {busInfo && busInfo.estimatedArrival && (\n                    <p>Bus arrives in approx. {busInfo.estimatedArrival} min</p>\n                  )}\n                </div>\n              </Popup>\n            </Marker>\n          )}\n          \n          {/* Only show routing if we have bus location and next stop */}\n          {(selectedBus && busLocation && nextStop) && (\n            <RoutingControl \n              startPoint={busLocation} \n              endPoint={[parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]}\n              color=\"#3388ff\"\n            />\n          )}\n          \n          {/* Show path from user location to next stop if both are available */}\n          {(selectedBus && userLocation && nextStop) && (\n            <RoutingControl \n              startPoint={userLocation} \n              endPoint={[parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)]}\n              color=\"#ff6b6b\"\n              weight={3}\n            />\n          )}\n        </MapContainer>\n        \n        {/* Only show the map legend if we have a selected bus with routing */}\n        {(selectedBus && busLocation && nextStop) && (\n          <div className=\"map-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-icon\" style={{ backgroundColor: '#3388ff' }}></div>\n              <span>Bus Route to Next Stop</span>\n            </div>\n            {userLocation && (\n              <div className=\"legend-item\">\n                <div className=\"legend-icon\" style={{ backgroundColor: '#ff6b6b' }}></div>\n                <span>Your Path to Next Stop</span>\n              </div>\n            )}\n          </div>\n        )}\n        \n        {/* Add instructions overlay for initial map state */}\n        {!selectedBus && (\n          <div className=\"map-instructions-overlay\">\n            <p>Select a bus from the left panel to see its location and route</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default BusTracking;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,eAAe;AAC9E,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,yBAAyB;AAChC,OAAO,0DAA0D;AACjE,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAO,2BAA2B;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAG,IAAIN,CAAC,CAACO,IAAI,CAAC;EACzBC,OAAO,EAAE,qDAAqD;EAC9DC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAG,IAAIZ,CAAC,CAACO,IAAI,CAAC;EAC1BC,OAAO,EAAE,yDAAyD;EAClEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAME,WAAW,GAAG,IAAIb,CAAC,CAACO,IAAI,CAAC;EAC7BC,OAAO,EAAE,yDAAyD;EAClEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMG,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,KAAK,GAAG,SAAS;EAAEC,MAAM,GAAG;AAAE,CAAC,KAAK;EAAAC,EAAA;EAClF,MAAMC,GAAG,GAAGrB,MAAM,CAAC,CAAC;EACpB,MAAMsB,iBAAiB,GAAG3B,MAAM,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,UAAU,IAAI,CAACC,QAAQ,EAAE;;IAE9B;IACA,IAAIK,iBAAiB,CAACC,OAAO,EAAE;MAC7BF,GAAG,CAACG,aAAa,CAACF,iBAAiB,CAACC,OAAO,CAAC;MAC5CD,iBAAiB,CAACC,OAAO,GAAG,IAAI;IAClC;IAEA,IAAI;MACF;MACA,MAAME,cAAc,GAAGxB,CAAC,CAACyB,OAAO,CAACC,OAAO,CAAC;QACvCC,SAAS,EAAE,CACT3B,CAAC,CAAC4B,MAAM,CAACb,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC,EACtCf,CAAC,CAAC4B,MAAM,CAACZ,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CACnC;QACDa,kBAAkB,EAAE,KAAK;QACzBC,gBAAgB,EAAE,KAAK;QACvBC,YAAY,EAAE,KAAK;QACnBC,iBAAiB,EAAE,KAAK;QACxBC,IAAI,EAAE,KAAK;QACXC,WAAW,EAAE;UACXC,MAAM,EAAE,CAAC;YAAElB,KAAK;YAAEmB,OAAO,EAAE,GAAG;YAAElB;UAAO,CAAC,CAAC;UACzCmB,iBAAiB,EAAE,IAAI;UACvBC,qBAAqB,EAAE;QACzB,CAAC;QACDC,YAAY,EAAEA,CAAA,KAAM,IAAI,CAAC;MAC3B,CAAC,CAAC;MAEFf,cAAc,CAACgB,KAAK,CAACpB,GAAG,CAAC;MACzBC,iBAAiB,CAACC,OAAO,GAAGE,cAAc;;MAE1C;MACA,OAAO,MAAM;QACX,IAAIH,iBAAiB,CAACC,OAAO,EAAE;UAC7BF,GAAG,CAACG,aAAa,CAACF,iBAAiB,CAACC,OAAO,CAAC;QAC9C;MACF,CAAC;IACH,CAAC,CAAC,OAAOmB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC,EAAE,CAACrB,GAAG,EAAEL,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,CAAC,CAAC;EAE9C,OAAO,IAAI;AACb,CAAC;;AAED;AAAAC,EAAA,CAlDML,cAAc;EAAA,QACNf,MAAM;AAAA;AAAA4C,EAAA,GADd7B,cAAc;AAmDpB,MAAM8B,iBAAiB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAAAC,GAAA;EAC3D,MAAM5B,GAAG,GAAGrB,MAAM,CAAC,CAAC;EAEpBN,SAAS,CAAC,MAAM;IACd,IAAIoD,MAAM,IAAIC,IAAI,EAAE;MAClB1B,GAAG,CAAC6B,OAAO,CAACJ,MAAM,EAAEC,IAAI,CAAC;IAC3B,CAAC,MAAM,IAAIC,WAAW,EAAE;MACtB3B,GAAG,CAAC6B,OAAO,CAACF,WAAW,EAAE3B,GAAG,CAAC8B,OAAO,CAAC,CAAC,CAAC;IACzC;EACF,CAAC,EAAE,CAAC9B,GAAG,EAAEyB,MAAM,EAAEC,IAAI,EAAEC,WAAW,CAAC,CAAC;EAEpC,OAAO,IAAI;AACb,CAAC;AAACC,GAAA,CAZIJ,iBAAiB;EAAA,QACT7C,MAAM;AAAA;AAAAoD,GAAA,GADdP,iBAAiB;AAcvB,MAAMQ,WAAW,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,GAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhE,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiE,WAAW,EAAEC,cAAc,CAAC,GAAGlE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuD,WAAW,EAAEY,cAAc,CAAC,GAAGnE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACoE,QAAQ,EAAEC,WAAW,CAAC,GAAGrE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsE,QAAQ,EAAEC,WAAW,CAAC,GAAGvE,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACwE,WAAW,EAAEC,cAAc,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC0E,OAAO,EAAEC,UAAU,CAAC,GAAG3E,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiD,KAAK,EAAE2B,QAAQ,CAAC,GAAG5E,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC6E,WAAW,EAAEC,cAAc,CAAC,GAAG9E,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAAC+E,OAAO,EAAEC,UAAU,CAAC,GAAGhF,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiF,SAAS,EAAEC,YAAY,CAAC,GAAGlF,QAAQ,CAAC6D,YAAY,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAChF,MAAM,CAACsB,aAAa,EAAEC,gBAAgB,CAAC,GAAGpF,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMqF,WAAW,GAAGnF,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAM,CAACoF,cAAc,EAAEC,iBAAiB,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACwF,WAAW,EAAEC,cAAc,CAAC,GAAGzF,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM0F,WAAW,GAAGxF,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACAD,SAAS,CAAC,MAAM;IACd0F,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA1F,SAAS,CAAC,MAAM;IACd,SAAS2F,kBAAkBA,CAACC,KAAK,EAAE;MACjC,IAAIH,WAAW,CAAC5D,OAAO,IAAI,CAAC4D,WAAW,CAAC5D,OAAO,CAACgE,QAAQ,CAACD,KAAK,CAACE,MAAM,CAAC,EAAE;QACtER,iBAAiB,CAAC,KAAK,CAAC;MAC1B;IACF;IAEAS,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXI,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA3F,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIoF,WAAW,CAACvD,OAAO,EAAE;QACvBqE,aAAa,CAACd,WAAW,CAACvD,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA7B,SAAS,CAAC,MAAM;IACd,IAAIgE,WAAW,EAAE;MACfmC,YAAY,CAACnC,WAAW,CAACoC,EAAE,CAAC;MAC5BjB,gBAAgB,CAAC,KAAK,CAAC;;MAEvB;MACAC,WAAW,CAACvD,OAAO,GAAGwE,WAAW,CAAC,MAAM;QACtCF,YAAY,CAACnC,WAAW,CAACoC,EAAE,EAAE,KAAK,CAAC;MACrC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACb,CAAC,MAAM;MACL;MACA,IAAIhB,WAAW,CAACvD,OAAO,EAAE;QACvBqE,aAAa,CAACd,WAAW,CAACvD,OAAO,CAAC;MACpC;IACF;IAEA,OAAO,MAAM;MACX,IAAIuD,WAAW,CAACvD,OAAO,EAAE;QACvBqE,aAAa,CAACd,WAAW,CAACvD,OAAO,CAAC;MACpC;IACF,CAAC;EACH,CAAC,EAAE,CAACmC,WAAW,CAAC,CAAC;EAEjB,MAAM0B,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFhB,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM4B,QAAQ,GAAG,MAAM9F,GAAG,CAAC+F,GAAG,CAAC,oBAAoB,CAAC;MACpD,IAAID,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE;QACvCzC,QAAQ,CAACuC,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAC9B;MACA9B,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACZxD,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEyD,GAAG,CAAC;MAC3C9B,QAAQ,CAAC,+CAA+C,CAAC;MACzDD,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyB,YAAY,GAAG,MAAAA,CAAOO,KAAK,EAAEC,WAAW,GAAG,IAAI,KAAK;IACxD,IAAI;MACF,IAAIA,WAAW,EAAEjC,UAAU,CAAC,IAAI,CAAC;;MAEjC;MACAC,QAAQ,CAAC,IAAI,CAAC;;MAEd;MACA,MAAMiC,gBAAgB,GAAG,MAAMpG,GAAG,CAAC+F,GAAG,CAAC,UAAUG,KAAK,WAAW,CAAC;MAClE,IAAIE,gBAAgB,CAACJ,IAAI,IAAII,gBAAgB,CAACJ,IAAI,CAACA,IAAI,EAAE;QACvD,MAAMK,QAAQ,GAAGD,gBAAgB,CAACJ,IAAI,CAACA,IAAI;QAC3CtC,cAAc,CAAC,CAAC4C,UAAU,CAACD,QAAQ,CAACE,QAAQ,CAAC,EAAED,UAAU,CAACD,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC;QAC/EnC,cAAc,CAAC,IAAIoC,IAAI,CAACJ,QAAQ,CAACK,SAAS,CAAC,CAAC;;QAE5C;QACA,IAAIhC,aAAa,IAAI,CAAC5B,WAAW,EAAE;UACjC2B,YAAY,CAAC,CAAC6B,UAAU,CAACD,QAAQ,CAACE,QAAQ,CAAC,EAAED,UAAU,CAACD,QAAQ,CAACG,SAAS,CAAC,CAAC,CAAC;QAC/E;MACF,CAAC,MAAM;QACL;QACA9C,cAAc,CAAC,IAAI,CAAC;MACtB;;MAEA;MACA,MAAMiD,aAAa,GAAG,MAAM3G,GAAG,CAAC+F,GAAG,CAAC,UAAUG,KAAK,QAAQ,CAAC;MAC5D,IAAIS,aAAa,CAACX,IAAI,IAAIW,aAAa,CAACX,IAAI,CAACA,IAAI,EAAE;QACjD,MAAMY,SAAS,GAAGD,aAAa,CAACX,IAAI,CAACA,IAAI;QACzCpC,WAAW,CAACgD,SAAS,CAACC,KAAK,CAAC;;QAE5B;QACA,IAAID,SAAS,CAAC7C,WAAW,EAAE;UACzBC,cAAc,CAAC4C,SAAS,CAAC7C,WAAW,CAAC;QACvC;QAEA,IAAI6C,SAAS,CAAC/C,QAAQ,EAAE;UACtBC,WAAW,CAAC8C,SAAS,CAAC/C,QAAQ,CAAC;QACjC;MACF;;MAEA;MACA,MAAMiD,YAAY,GAAG,MAAM9G,GAAG,CAAC+F,GAAG,CAAC,UAAUG,KAAK,OAAO,CAAC;MAC1D,IAAIY,YAAY,CAACd,IAAI,IAAIc,YAAY,CAACd,IAAI,CAACA,IAAI,EAAE;QAC/CzB,UAAU,CAACuC,YAAY,CAACd,IAAI,CAACA,IAAI,CAAC;MACpC;MAEA,IAAIG,WAAW,EAAEjC,UAAU,CAAC,KAAK,CAAC;IACpC,CAAC,CAAC,OAAO+B,GAAG,EAAE;MACd;MACE;MACF;MACE,IAAIE,WAAW,EAAEjC,UAAU,CAAC,KAAK,CAAC;IACpC;EACF,CAAC;;EAED;EACA,MAAM6C,aAAa,GAAGzD,KAAK,CAAC0D,MAAM,CAACC,GAAG,IACpCA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrC,WAAW,CAACoC,WAAW,CAAC,CAAC,CAC3D,CAAC;;EAED;EACA,MAAME,eAAe,GAAIJ,GAAG,IAAK;IAC/BxD,cAAc,CAACwD,GAAG,CAAC;IACnBjC,cAAc,CAACiC,GAAG,CAACC,IAAI,CAAC;IACxBpC,iBAAiB,CAAC,KAAK,CAAC;IACxBX,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACEjE,OAAA;IAAKoH,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCrH,OAAA;MAAKoH,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAClCrH,OAAA;QAAAqH,QAAA,EAAI;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEpBzH,OAAA;QAAKoH,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrH,OAAA;UAAKoH,SAAS,EAAC,iBAAiB;UAACM,GAAG,EAAE3C,WAAY;UAAAsC,QAAA,gBAChDrH,OAAA;YACEoH,SAAS,EAAC,iBAAiB;YAC3BO,OAAO,EAAEA,CAAA,KAAM/C,iBAAiB,CAAC,CAACD,cAAc,CAAE;YAAA0C,QAAA,gBAElDrH,OAAA;cACE4H,IAAI,EAAC,MAAM;cACXC,KAAK,EAAEhD,WAAY;cACnBiD,QAAQ,EAAGC,CAAC,IAAK;gBACfjD,cAAc,CAACiD,CAAC,CAAC3C,MAAM,CAACyC,KAAK,CAAC;gBAC9BjD,iBAAiB,CAAC,IAAI,CAAC;cACzB,CAAE;cACFoD,WAAW,EAAC,qBAAqB;cACjCZ,SAAS,EAAC,iBAAiB;cAC3BO,OAAO,EAAGI,CAAC,IAAK;gBACdA,CAAC,CAACE,eAAe,CAAC,CAAC;gBACnBrD,iBAAiB,CAAC,IAAI,CAAC;cACzB;YAAE;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eACFzH,OAAA;cAAKoH,SAAS,EAAC,eAAe;cAAAC,QAAA,eAC5BrH,OAAA;gBAAGoH,SAAS,EAAE,iBAAiBzC,cAAc,GAAG,IAAI,GAAG,MAAM;cAAG;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEL9C,cAAc,iBACb3E,OAAA;YAAIoH,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1BR,aAAa,CAACqB,MAAM,GAAG,CAAC,GACvBrB,aAAa,CAAC5F,GAAG,CAAC8F,GAAG,iBACnB/G,OAAA;cAEE2H,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAACJ,GAAG,CAAE;cACpCK,SAAS,EAAE9D,WAAW,IAAIA,WAAW,CAACoC,EAAE,KAAKqB,GAAG,CAACrB,EAAE,GAAG,UAAU,GAAG,EAAG;cAAA2B,QAAA,EAErEN,GAAG,CAACC;YAAI,GAJJD,GAAG,CAACrB,EAAE;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKT,CACL,CAAC,gBAEFzH,OAAA;cAAIoH,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAC9C;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACL;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENzH,OAAA;UACEoH,SAAS,EAAC,eAAe;UACzBO,OAAO,EAAEA,CAAA,KAAMrE,WAAW,IAAImC,YAAY,CAACnC,WAAW,CAACoC,EAAE,CAAE;UAC3DyC,QAAQ,EAAE,CAAC7E,WAAW,IAAIS,OAAQ;UAAAsD,QAAA,EAEjCtD,OAAO,GAAG,YAAY,GAAG;QAAW;UAAAuD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGLnF,KAAK,iBAAItC,OAAA;QAAKoH,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAE/E;MAAK;QAAAgF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,EAErDnE,WAAW,IAAI,CAACV,WAAW,iBAC1B5C,OAAA;QAAKoH,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrH,OAAA;UAAAqH,QAAA,EAAK/D,WAAW,CAAC0D;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BzH,OAAA;UAAKoH,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpCrH,OAAA;YAAAqH,QAAA,EAAG;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEAnE,WAAW,IAAIV,WAAW,iBACzB5C,OAAA;QAAKoH,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCrH,OAAA;UAAAqH,QAAA,EAAK/D,WAAW,CAAC0D;QAAI;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3BzH,OAAA;UAAKoH,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAChCrH,OAAA;YAAAqH,QAAA,gBAAGrH,OAAA;cAAAqH,QAAA,EAAQ;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,WAAO;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACtCzH,OAAA;YAAAqH,QAAA,gBAAGrH,OAAA;cAAAqH,QAAA,EAAQ;YAAa;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACvD,WAAW,GAAGA,WAAW,CAACkE,kBAAkB,CAAC,CAAC,GAAG,KAAK;UAAA;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAE7FrD,OAAO,iBACNpE,OAAA,CAAAE,SAAA;YAAAmH,QAAA,gBACErH,OAAA;cAAAqH,QAAA,gBAAGrH,OAAA;gBAAAqH,QAAA,EAAQ;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACrD,OAAO,CAACiE,UAAU,IAAI,cAAc;YAAA;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACrE5D,WAAW,iBACV7D,OAAA;cAAAqH,QAAA,gBAAGrH,OAAA;gBAAAqH,QAAA,EAAQ;cAAU;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAAC5D,WAAW,CAACmD,IAAI;YAAA;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CACrD,EACA9D,QAAQ,iBACP3D,OAAA,CAAAE,SAAA;cAAAmH,QAAA,gBACErH,OAAA;gBAAAqH,QAAA,gBAAGrH,OAAA;kBAAAqH,QAAA,EAAQ;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAAC9D,QAAQ,CAACqD,IAAI;cAAA;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACjDrD,OAAO,CAACkE,gBAAgB,iBACvBtI,OAAA;gBAAAqH,QAAA,gBAAGrH,OAAA;kBAAAqH,QAAA,EAAQ;gBAAI;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,KAAC,EAACrD,OAAO,CAACkE,gBAAgB,EAAC,MAAI;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAC3D;YAAA,eACD,CACH;UAAA,eACD,CACH;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,EAEA,CAACnE,WAAW,iBACXtD,OAAA;QAAKoH,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BrH,OAAA;UAAAqH,QAAA,EAAG;QAAkE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAGNzH,OAAA;MAAKoH,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAChCrH,OAAA,CAACR,YAAY;QACXkD,MAAM,EAAEQ,YAAY,IAAI,CAAC,OAAO,EAAE,OAAO,CAAE,CAAC;QAAA;QAC5CP,IAAI,EAAE,EAAG;QACT4F,KAAK,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAApB,QAAA,gBAEzCrH,OAAA,CAACP,SAAS;UACRiJ,WAAW,EAAC,yFAAyF;UACrGC,GAAG,EAAC;QAAoD;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD,CAAC,EAGDvE,YAAY,iBACXlD,OAAA,CAACN,MAAM;UAACkJ,QAAQ,EAAE1F,YAAa;UAAC2F,IAAI,EAAEpI,QAAS;UAAA4G,QAAA,eAC7CrH,OAAA,CAACL,KAAK;YAAA0H,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CACT,EAGCnE,WAAW,IAAIV,WAAW,iBAC1B5C,OAAA,CAACyC,iBAAiB;UAChBC,MAAM,EAAE4B,SAAU;UAClB1B,WAAW,EAAEA;QAAY;UAAA0E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CACF,EAGCnE,WAAW,IAAIV,WAAW,iBAC1B5C,OAAA,CAACN,MAAM;UAACkJ,QAAQ,EAAEhG,WAAY;UAACiG,IAAI,EAAE1I,OAAQ;UAAAkH,QAAA,eAC3CrH,OAAA,CAACL,KAAK;YAAA0H,QAAA,eACJrH,OAAA;cAAKoH,SAAS,EAAC,WAAW;cAAAC,QAAA,gBACxBrH,OAAA;gBAAAqH,QAAA,EAAK/D,WAAW,CAAC0D;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EAC1BrD,OAAO,iBACNpE,OAAA,CAAAE,SAAA;gBAAAmH,QAAA,gBACErH,OAAA;kBAAAqH,QAAA,gBAAGrH,OAAA;oBAAAqH,QAAA,EAAQ;kBAAO;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACrD,OAAO,CAACiE,UAAU,IAAI,cAAc;gBAAA;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACtEzH,OAAA;kBAAAqH,QAAA,gBAAGrH,OAAA;oBAAAqH,QAAA,EAAQ;kBAAa;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACvD,WAAW,GAAGA,WAAW,CAACkE,kBAAkB,CAAC,CAAC,GAAG,KAAK;gBAAA;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,EAC7FrD,OAAO,CAACkE,gBAAgB,IAAI3E,QAAQ,iBACnC3D,OAAA;kBAAAqH,QAAA,gBAAGrH,OAAA;oBAAAqH,QAAA,GAAQ,SAAO,EAAC1D,QAAQ,CAACqD,IAAI,EAAC,GAAC;kBAAA;oBAAAM,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,KAAC,EAACrD,OAAO,CAACkE,gBAAgB,EAAC,MAAI;gBAAA;kBAAAhB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAC9E;cAAA,eACD,CACH;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACT,EAGCnE,WAAW,IAAIO,WAAW,iBAC1B7D,OAAA,CAACN,MAAM;UACLkJ,QAAQ,EAAE,CAACxC,UAAU,CAACvC,WAAW,CAACwC,QAAQ,CAAC,EAAED,UAAU,CAACvC,WAAW,CAACyC,SAAS,CAAC,CAAE;UAChFuC,IAAI,EAAEnI,WAAY;UAAA2G,QAAA,eAElBrH,OAAA,CAACL,KAAK;YAAA0H,QAAA,eACJrH,OAAA;cAAKoH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBrH,OAAA;gBAAAqH,QAAA,EAAKxD,WAAW,CAACmD;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAC3BzH,OAAA;gBAAAqH,QAAA,EAAG;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACT,EAECnE,WAAW,IAAIK,QAAQ,iBACvB3D,OAAA,CAACN,MAAM;UACLkJ,QAAQ,EAAE,CAACxC,UAAU,CAACzC,QAAQ,CAAC0C,QAAQ,CAAC,EAAED,UAAU,CAACzC,QAAQ,CAAC2C,SAAS,CAAC,CAAE;UAC1EuC,IAAI,EAAEnI,WAAY;UAAA2G,QAAA,eAElBrH,OAAA,CAACL,KAAK;YAAA0H,QAAA,eACJrH,OAAA;cAAKoH,SAAS,EAAC,YAAY;cAAAC,QAAA,gBACzBrH,OAAA;gBAAAqH,QAAA,EAAK1D,QAAQ,CAACqD;cAAI;gBAAAM,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACxBzH,OAAA;gBAAAqH,QAAA,EAAG;cAAS;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,EACfrD,OAAO,IAAIA,OAAO,CAACkE,gBAAgB,iBAClCtI,OAAA;gBAAAqH,QAAA,GAAG,yBAAuB,EAACjD,OAAO,CAACkE,gBAAgB,EAAC,MAAI;cAAA;gBAAAhB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAC5D;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACT,EAGCnE,WAAW,IAAIV,WAAW,IAAIe,QAAQ,iBACtC3D,OAAA,CAACW,cAAc;UACbC,UAAU,EAAEgC,WAAY;UACxB/B,QAAQ,EAAE,CAACuF,UAAU,CAACzC,QAAQ,CAAC0C,QAAQ,CAAC,EAAED,UAAU,CAACzC,QAAQ,CAAC2C,SAAS,CAAC,CAAE;UAC1ExF,KAAK,EAAC;QAAS;UAAAwG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CACF,EAGCnE,WAAW,IAAIJ,YAAY,IAAIS,QAAQ,iBACvC3D,OAAA,CAACW,cAAc;UACbC,UAAU,EAAEsC,YAAa;UACzBrC,QAAQ,EAAE,CAACuF,UAAU,CAACzC,QAAQ,CAAC0C,QAAQ,CAAC,EAAED,UAAU,CAACzC,QAAQ,CAAC2C,SAAS,CAAC,CAAE;UAC1ExF,KAAK,EAAC,SAAS;UACfC,MAAM,EAAE;QAAE;UAAAuG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACX,CACF;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACW,CAAC,EAGbnE,WAAW,IAAIV,WAAW,IAAIe,QAAQ,iBACtC3D,OAAA;QAAKoH,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBrH,OAAA;UAAKoH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrH,OAAA;YAAKoH,SAAS,EAAC,aAAa;YAACmB,KAAK,EAAE;cAAEO,eAAe,EAAE;YAAU;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1EzH,OAAA;YAAAqH,QAAA,EAAM;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CAAC,EACLvE,YAAY,iBACXlD,OAAA;UAAKoH,SAAS,EAAC,aAAa;UAAAC,QAAA,gBAC1BrH,OAAA;YAAKoH,SAAS,EAAC,aAAa;YAACmB,KAAK,EAAE;cAAEO,eAAe,EAAE;YAAU;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAC1EzH,OAAA;YAAAqH,QAAA,EAAM;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CACN,EAGA,CAACnE,WAAW,iBACXtD,OAAA;QAAKoH,SAAS,EAAC,0BAA0B;QAAAC,QAAA,eACvCrH,OAAA;UAAAqH,QAAA,EAAG;QAA8D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtE,GAAA,CA9XIF,WAAW;AAAA8F,GAAA,GAAX9F,WAAW;AAgYjB,eAAeA,WAAW;AAAC,IAAAT,EAAA,EAAAQ,GAAA,EAAA+F,GAAA;AAAAC,YAAA,CAAAxG,EAAA;AAAAwG,YAAA,CAAAhG,GAAA;AAAAgG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}