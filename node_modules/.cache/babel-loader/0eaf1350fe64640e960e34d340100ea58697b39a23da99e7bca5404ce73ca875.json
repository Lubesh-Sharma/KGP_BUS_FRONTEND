{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport api from '../../utils/api';\nimport '../../css/user.css';\n\n// Default map container styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// Map options\nconst defaultOptions = {\n  mapTypeControl: false,\n  streetViewControl: false,\n  fullscreenControl: true,\n  zoomControl: true\n};\n\n// Component to handle routing between points using Google Directions API\nconst DirectionsService = ({\n  startPoint,\n  endPoint,\n  setDirections,\n  setIsPathLoading\n}) => {\n  _s();\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n    setIsPathLoading(true);\n    const directionsService = new window.google.maps.DirectionsService();\n    directionsService.route({\n      origin: {\n        lat: startPoint[0],\n        lng: startPoint[1]\n      },\n      destination: {\n        lat: endPoint[0],\n        lng: endPoint[1]\n      },\n      travelMode: window.google.maps.TravelMode.WALKING\n    }, (result, status) => {\n      if (status === window.google.maps.DirectionsStatus.OK) {\n        setDirections(result);\n      } else {\n        console.error(`Directions request failed: ${status}`);\n      }\n      setIsPathLoading(false);\n    });\n    return () => {\n      setDirections(null);\n    };\n  }, [startPoint, endPoint, setDirections, setIsPathLoading]);\n  return null;\n};\n\n// Button to center on user's location\n_s(DirectionsService, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = DirectionsService;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c2 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s2();\n  // Load the Google Maps JS API\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries: ['places']\n  });\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || {\n    lat: 22.3190,\n    lng: 87.3091\n  });\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  const [searchMarker, setSearchMarker] = useState(userLocation ? {\n    lat: userLocation[0],\n    lng: userLocation[1]\n  } : {\n    lat: 22.3190,\n    lng: 87.3091\n  });\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [directions, setDirections] = useState(null);\n  const mapRef = useRef(null);\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter({\n        lat: userLocation[0],\n        lng: userLocation[1]\n      });\n      setSearchMarker({\n        lat: userLocation[0],\n        lng: userLocation[1]\n      });\n    }\n  }, [userLocation]);\n\n  // Function to fetch bus stops\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n      if (response.data && response.data.data) {\n        return response.data.data;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n        const busStopsArray = Array.isArray(data) ? data : [];\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter({\n        lat: userLocation[0],\n        lng: userLocation[1]\n      });\n      setZoom(19);\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      setError(null);\n      setSearchMarker({\n        lat,\n        lng\n      });\n      const results = busStops.map(stop => {\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      });\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n      setMapCenter({\n        lat,\n        lng\n      });\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n\n  // Handle click on search result item\n  const handleStopSelect = stop => {\n    setMapCenter({\n      lat: stop.latitude,\n      lng: stop.longitude\n    });\n    setZoom(18);\n    setSelectedStop(stop);\n    setSelectedMarker(stop.id);\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3;\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n\n  // Handle map click to set coordinates\n  const onMapClick = useCallback(e => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    setCoordinates({\n      latitude: lat.toFixed(6),\n      longitude: lng.toFixed(6)\n    });\n    setSearchMarker({\n      lat,\n      lng\n    });\n  }, []);\n\n  // Store map instance when it loads\n  const onLoad = useCallback(map => {\n    mapRef.current = map;\n  }, []);\n\n  // Clean up function when component unmounts\n  const onUnmount = useCallback(() => {\n    mapRef.current = null;\n  }, []);\n  if (loadError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [\"Error loading Google Maps: \", loadError.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-message\",\n      children: \"Loading Google Maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading route. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 21\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: mapContainerStyle,\n        center: mapCenter,\n        zoom: zoom,\n        options: defaultOptions,\n        onClick: onMapClick,\n        onLoad: onLoad,\n        onUnmount: onUnmount,\n        children: [userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: userLocation[0],\n            lng: userLocation[1]\n          },\n          icon: {\n            url: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n            scaledSize: new window.google.maps.Size(25, 41),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(12, 41)\n          },\n          children: selectedMarker === 'user' && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: () => setSelectedMarker(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 51\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: {\n            url: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n            scaledSize: new window.google.maps.Size(25, 41),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(12, 41)\n          },\n          onClick: () => setSelectedMarker('search'),\n          children: selectedMarker === 'search' && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: () => setSelectedMarker(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 53\n              }, this), searchMarker.lat.toFixed(6), \", \", searchMarker.lng.toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: stop.latitude,\n            lng: stop.longitude\n          },\n          icon: {\n            url: '/bus-stop.png',\n            scaledSize: new window.google.maps.Size(24, 24),\n            origin: new window.google.maps.Point(0, 0),\n            anchor: new window.google.maps.Point(12, 24)\n          },\n          onClick: () => setSelectedMarker(stop.id),\n          children: selectedMarker === stop.id && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            onCloseClick: () => setSelectedMarker(null),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 49\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker.lat, searchMarker.lng, stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this)), userLocation && selectedStop && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(DirectionsService, {\n            startPoint: userLocation,\n            endPoint: [selectedStop.latitude, selectedStop.longitude],\n            setDirections: setDirections,\n            setIsPathLoading: setIsPathLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), directions && /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n            directions: directions,\n            options: {\n              suppressMarkers: true,\n              polylineOptions: {\n                strokeColor: '#ff6b6b',\n                strokeWeight: 4,\n                strokeOpacity: 0.7\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n};\n_s2(BusStopSearch, \"ruMruqm3oPvaV28hAv+Ey57Joeo=\", false, function () {\n  return [useJsApiLoader];\n});\n_c3 = BusStopSearch;\nexport default BusStopSearch;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DirectionsService\");\n$RefreshReg$(_c2, \"LocationButton\");\n$RefreshReg$(_c3, \"BusStopSearch\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","GoogleMap","useJsApiLoader","Marker","InfoWindow","DirectionsRenderer","api","jsxDEV","_jsxDEV","Fragment","_Fragment","mapContainerStyle","width","height","defaultOptions","mapTypeControl","streetViewControl","fullscreenControl","zoomControl","DirectionsService","startPoint","endPoint","setDirections","setIsPathLoading","_s","directionsService","window","google","maps","route","origin","lat","lng","destination","travelMode","TravelMode","WALKING","result","status","DirectionsStatus","OK","console","error","_c","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","BusStopSearch","setUserLocation","_s2","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_API_KEY","libraries","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","zoom","setZoom","coordinates","setCoordinates","latitude","longitude","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","selectedMarker","setSelectedMarker","directions","mapRef","toFixed","fetchBusStops","log","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","map","stop","parseFloat","err","handleInputChange","e","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","results","distance","calculateDistance","sortedResults","sort","a","b","handleStopSelect","id","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","onMapClick","latLng","onLoad","current","onUnmount","message","htmlFor","type","onChange","placeholder","length","index","center","options","position","icon","url","scaledSize","Size","Point","anchor","onCloseClick","suppressMarkers","polylineOptions","strokeColor","strokeWeight","strokeOpacity","_c3","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, InfoWindow, DirectionsRenderer } from '@react-google-maps/api';\nimport api from '../../utils/api';\nimport '../../css/user.css';\n\n// Default map container styles\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// Map options\nconst defaultOptions = {\n  mapTypeControl: false,\n  streetViewControl: false,\n  fullscreenControl: true,\n  zoomControl: true,\n};\n\n// Component to handle routing between points using Google Directions API\nconst DirectionsService = ({ startPoint, endPoint, setDirections, setIsPathLoading }) => {\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    setIsPathLoading(true);\n\n    const directionsService = new window.google.maps.DirectionsService();\n\n    directionsService.route(\n      {\n        origin: { lat: startPoint[0], lng: startPoint[1] },\n        destination: { lat: endPoint[0], lng: endPoint[1] },\n        travelMode: window.google.maps.TravelMode.WALKING,\n      },\n      (result, status) => {\n        if (status === window.google.maps.DirectionsStatus.OK) {\n          setDirections(result);\n        } else {\n          console.error(`Directions request failed: ${status}`);\n        }\n        setIsPathLoading(false);\n      }\n    );\n\n    return () => {\n      setDirections(null);\n    };\n  }, [startPoint, endPoint, setDirections, setIsPathLoading]);\n\n  return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n  return (\n    <button \n      className=\"location-button\" \n      onClick={onClick}\n      disabled={!userLocation}\n      title=\"Center map on your location\"\n    >\n      <i className=\"fas fa-location-arrow\"></i> Your Current Location\n    </button>\n  );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n  // Load the Google Maps JS API\n  const { isLoaded, loadError } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_API_KEY,\n    libraries: ['places'],\n  });\n\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || { lat: 22.3190, lng: 87.3091 });\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  const [searchMarker, setSearchMarker] = useState(\n    userLocation ? { lat: userLocation[0], lng: userLocation[1] } : { lat: 22.3190, lng: 87.3091 }\n  );\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [selectedMarker, setSelectedMarker] = useState(null);\n  const [directions, setDirections] = useState(null);\n\n  const mapRef = useRef(null);\n  \n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter({ lat: userLocation[0], lng: userLocation[1] });\n      setSearchMarker({ lat: userLocation[0], lng: userLocation[1] });\n    }\n  }, [userLocation]);\n  \n  // Function to fetch bus stops\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n      \n      if (response.data && response.data.data) {\n        return response.data.data;\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n  \n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n        \n        const busStopsArray = Array.isArray(data) ? data : [];\n        \n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        \n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadBusStops();\n  }, []);\n  \n  // Handle form input changes\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  \n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter({ lat: userLocation[0], lng: userLocation[1] });\n      setZoom(19);\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n  \n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n      \n      if (isNaN(lat) || isNaN(lng) || \n          lat < -90 || lat > 90 || \n          lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      \n      setError(null);\n      setSearchMarker({ lat, lng });\n      \n      const results = busStops.map(stop => {\n        const distance = calculateDistance(\n          lat, lng,\n          stop.latitude, stop.longitude\n        );\n        \n        return {\n          ...stop,\n          distance: distance\n        };\n      });\n      \n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n      \n      setMapCenter({ lat, lng });\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n  \n  // Handle click on search result item\n  const handleStopSelect = (stop) => {\n    setMapCenter({ lat: stop.latitude, lng: stop.longitude });\n    setZoom(18);\n    setSelectedStop(stop);\n    setSelectedMarker(stop.id);\n  };\n  \n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3;\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon2 - lon1) * Math.PI / 180;\n    \n    const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n            Math.cos(φ1) * Math.cos(φ2) *\n            Math.sin(Δλ/2) * Math.sin(Δλ/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    \n    return R * c;\n  };\n  \n  // Format distance for display\n  const formatDistance = (meters) => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n\n  // Handle map click to set coordinates\n  const onMapClick = useCallback((e) => {\n    const lat = e.latLng.lat();\n    const lng = e.latLng.lng();\n    setCoordinates({\n      latitude: lat.toFixed(6),\n      longitude: lng.toFixed(6)\n    });\n    setSearchMarker({ lat, lng });\n  }, []);\n\n  // Store map instance when it loads\n  const onLoad = useCallback((map) => {\n    mapRef.current = map;\n  }, []);\n\n  // Clean up function when component unmounts\n  const onUnmount = useCallback(() => {\n    mapRef.current = null;\n  }, []);\n\n  if (loadError) {\n    return <div className=\"error-message\">Error loading Google Maps: {loadError.message}</div>;\n  }\n\n  if (!isLoaded) {\n    return <div className=\"loading-message\">Loading Google Maps...</div>;\n  }\n  \n  return (\n    <div className=\"bus-stop-search\">\n      {/* Full-page loading overlay for directions loading */}\n      {isPathLoading && (\n        <div className=\"full-page-loading-overlay\">\n          <div className=\"spinner\"></div>\n          <div>Loading route. Please wait...</div>\n        </div>\n      )}\n      \n      <div className=\"location-panel\">\n        <div className=\"location-panel-top\">\n          <h2>Search Bus Stops</h2>\n          {error && <div className=\"error-message\">{error}</div>}\n          \n          <div className=\"search-form\">\n            <div className=\"form-group\">\n              <label htmlFor=\"latitude\">Latitude:</label>\n              <input \n                type=\"text\" \n                id=\"latitude\" \n                name=\"latitude\" \n                value={coordinates.latitude} \n                onChange={handleInputChange} \n                placeholder=\"e.g. 22.3190\"\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"longitude\">Longitude:</label>\n              <input \n                type=\"text\" \n                id=\"longitude\" \n                name=\"longitude\" \n                value={coordinates.longitude} \n                onChange={handleInputChange} \n                placeholder=\"e.g. 87.3091\"\n              />\n            </div>\n            \n            <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n            \n            <button \n              className=\"search-btn\"\n              onClick={handleSearch}\n              disabled={loading}\n            >\n              {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"location-panel-bottom\">\n          {hasSearched && searchResults.length > 0 && (\n            <div className=\"search-results\">\n              <h3>Nearest Bus Stops</h3>\n              <div className=\"results-list\">\n                {searchResults.map((stop, index) => (\n                  <div \n                    key={stop.id} \n                    className=\"result-item\"\n                    onClick={() => handleStopSelect(stop)}\n                  >\n                    <div className=\"result-index\">{index + 1}</div>\n                    <div className=\"result-details\">\n                      <h4>{stop.name}</h4>\n                      <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                      <p className=\"coordinates\">\n                        {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {hasSearched && searchResults.length === 0 && (\n            <div className=\"no-results\">\n              <p>No bus stops found near the selected location.</p>\n            </div>\n          )}\n        </div>\n      </div>\n      \n      <div className=\"map-container\">\n        <GoogleMap\n          mapContainerStyle={mapContainerStyle}\n          center={mapCenter}\n          zoom={zoom}\n          options={defaultOptions}\n          onClick={onMapClick}\n          onLoad={onLoad}\n          onUnmount={onUnmount}\n        >\n          {/* Display user location */}\n          {userLocation && (\n            <Marker\n              position={{ lat: userLocation[0], lng: userLocation[1] }}\n              icon={{\n                url: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n                scaledSize: new window.google.maps.Size(25, 41),\n                origin: new window.google.maps.Point(0, 0),\n                anchor: new window.google.maps.Point(12, 41),\n              }}\n            >\n              {selectedMarker === 'user' && (\n                <InfoWindow onCloseClick={() => setSelectedMarker(null)}>\n                  <div>\n                    <strong>Your Location</strong><br />\n                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                  </div>\n                </InfoWindow>\n              )}\n            </Marker>\n          )}\n          \n          {/* Display search marker */}\n          {searchMarker && (\n            <Marker\n              position={searchMarker}\n              icon={{\n                url: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n                scaledSize: new window.google.maps.Size(25, 41),\n                origin: new window.google.maps.Point(0, 0),\n                anchor: new window.google.maps.Point(12, 41),\n              }}\n              onClick={() => setSelectedMarker('search')}\n            >\n              {selectedMarker === 'search' && (\n                <InfoWindow onCloseClick={() => setSelectedMarker(null)}>\n                  <div>\n                    <strong>Search Location</strong><br />\n                    {searchMarker.lat.toFixed(6)}, {searchMarker.lng.toFixed(6)}\n                  </div>\n                </InfoWindow>\n              )}\n            </Marker>\n          )}\n          \n          {/* Display all bus stops */}\n          {busStops.map(stop => (\n            <Marker\n              key={stop.id}\n              position={{ lat: stop.latitude, lng: stop.longitude }}\n              icon={{\n                url: '/bus-stop.png',\n                scaledSize: new window.google.maps.Size(24, 24),\n                origin: new window.google.maps.Point(0, 0),\n                anchor: new window.google.maps.Point(12, 24),\n              }}\n              onClick={() => setSelectedMarker(stop.id)}\n            >\n              {selectedMarker === stop.id && (\n                <InfoWindow onCloseClick={() => setSelectedMarker(null)}>\n                  <div>\n                    <strong>{stop.name}</strong><br />\n                    {searchMarker && (\n                      <span>\n                        Distance: {formatDistance(\n                          calculateDistance(\n                            searchMarker.lat, searchMarker.lng,\n                            stop.latitude, stop.longitude\n                          )\n                        )}\n                      </span>\n                    )}\n                  </div>\n                </InfoWindow>\n              )}\n            </Marker>\n          ))}\n          \n          {/* Add directions route for selected bus stop */}\n          {userLocation && selectedStop && (\n            <>\n              <DirectionsService\n                startPoint={userLocation}\n                endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                setDirections={setDirections}\n                setIsPathLoading={setIsPathLoading}\n              />\n              {directions && (\n                <DirectionsRenderer\n                  directions={directions}\n                  options={{\n                    suppressMarkers: true,\n                    polylineOptions: {\n                      strokeColor: '#ff6b6b',\n                      strokeWeight: 4,\n                      strokeOpacity: 0.7,\n                    }\n                  }}\n                />\n              )}\n            </>\n          )}\n          \n          {/* Custom control for centering on user location */}\n          <div className=\"map-controls\">\n            <LocationButton\n              userLocation={userLocation}\n              onClick={handleCenterOnUser}\n            />\n          </div>\n        </GoogleMap>\n      </div>\n    </div>\n  );\n};\n\nexport default BusStopSearch;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AACvE,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,UAAU,EAAEC,kBAAkB,QAAQ,wBAAwB;AAC1G,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,iBAAiB,GAAG;EACxBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,cAAc,GAAG;EACrBC,cAAc,EAAE,KAAK;EACrBC,iBAAiB,EAAE,KAAK;EACxBC,iBAAiB,EAAE,IAAI;EACvBC,WAAW,EAAE;AACf,CAAC;;AAED;AACA,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,aAAa;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACvF1B,SAAS,CAAC,MAAM;IACd,IAAI,CAACsB,UAAU,IAAI,CAACC,QAAQ,EAAE;IAE9BE,gBAAgB,CAAC,IAAI,CAAC;IAEtB,MAAME,iBAAiB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACT,iBAAiB,CAAC,CAAC;IAEpEM,iBAAiB,CAACI,KAAK,CACrB;MACEC,MAAM,EAAE;QAAEC,GAAG,EAAEX,UAAU,CAAC,CAAC,CAAC;QAAEY,GAAG,EAAEZ,UAAU,CAAC,CAAC;MAAE,CAAC;MAClDa,WAAW,EAAE;QAAEF,GAAG,EAAEV,QAAQ,CAAC,CAAC,CAAC;QAAEW,GAAG,EAAEX,QAAQ,CAAC,CAAC;MAAE,CAAC;MACnDa,UAAU,EAAER,MAAM,CAACC,MAAM,CAACC,IAAI,CAACO,UAAU,CAACC;IAC5C,CAAC,EACD,CAACC,MAAM,EAAEC,MAAM,KAAK;MAClB,IAAIA,MAAM,KAAKZ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACW,gBAAgB,CAACC,EAAE,EAAE;QACrDlB,aAAa,CAACe,MAAM,CAAC;MACvB,CAAC,MAAM;QACLI,OAAO,CAACC,KAAK,CAAC,8BAA8BJ,MAAM,EAAE,CAAC;MACvD;MACAf,gBAAgB,CAAC,KAAK,CAAC;IACzB,CACF,CAAC;IAED,OAAO,MAAM;MACXD,aAAa,CAAC,IAAI,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,CAACF,UAAU,EAAEC,QAAQ,EAAEC,aAAa,EAAEC,gBAAgB,CAAC,CAAC;EAE3D,OAAO,IAAI;AACb,CAAC;;AAED;AAAAC,EAAA,CAhCML,iBAAiB;AAAAwB,EAAA,GAAjBxB,iBAAiB;AAiCvB,MAAMyB,cAAc,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAQ,CAAC,KAAK;EACpD,oBACEtC,OAAA;IACEuC,SAAS,EAAC,iBAAiB;IAC3BD,OAAO,EAAEA,OAAQ;IACjBE,QAAQ,EAAE,CAACH,YAAa;IACxBI,KAAK,EAAC,6BAA6B;IAAAC,QAAA,gBAEnC1C,OAAA;MAAGuC,SAAS,EAAC;IAAuB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,0BAC3C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,GAAA,GAXIX,cAAc;AAapB,MAAMY,aAAa,GAAGA,CAAC;EAAEX,YAAY;EAAEY;AAAgB,CAAC,KAAK;EAAAC,GAAA;EAC3D;EACA,MAAM;IAAEC,QAAQ;IAAEC;EAAU,CAAC,GAAG1D,cAAc,CAAC;IAC7C2D,gBAAgB,EAAEC,OAAO,CAACC,GAAG,CAACC,wBAAwB;IACtDC,SAAS,EAAE,CAAC,QAAQ;EACtB,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtE,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuE,OAAO,EAAEC,UAAU,CAAC,GAAGxE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC6C,KAAK,EAAE4B,QAAQ,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAAC0E,SAAS,EAAEC,YAAY,CAAC,GAAG3E,QAAQ,CAACgD,YAAY,IAAI;IAAEd,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAAC,CAAC;EAC1F,MAAM,CAACyC,IAAI,EAAEC,OAAO,CAAC,GAAG7E,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC8E,WAAW,EAAEC,cAAc,CAAC,GAAG/E,QAAQ,CAAC;IAC7CgF,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC,CAAC;EACF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGnF,QAAQ,CAC9CgD,YAAY,GAAG;IAAEd,GAAG,EAAEc,YAAY,CAAC,CAAC,CAAC;IAAEb,GAAG,EAAEa,YAAY,CAAC,CAAC;EAAE,CAAC,GAAG;IAAEd,GAAG,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAQ,CAC/F,CAAC;EACD,MAAM,CAACiD,aAAa,EAAEC,gBAAgB,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACsF,WAAW,EAAEC,cAAc,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwF,aAAa,EAAE9D,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACyF,YAAY,EAAEC,eAAe,CAAC,GAAG1F,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAAC2F,cAAc,EAAEC,iBAAiB,CAAC,GAAG5F,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC6F,UAAU,EAAEpE,aAAa,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAM8F,MAAM,GAAG5F,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACAD,SAAS,CAAC,MAAM;IACd,IAAI+C,YAAY,EAAE;MAChB+B,cAAc,CAAC;QACbC,QAAQ,EAAEhC,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAAC;QACpCd,SAAS,EAAEjC,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC;MACtC,CAAC,CAAC;MACFpB,YAAY,CAAC;QAAEzC,GAAG,EAAEc,YAAY,CAAC,CAAC,CAAC;QAAEb,GAAG,EAAEa,YAAY,CAAC,CAAC;MAAE,CAAC,CAAC;MAC5DmC,eAAe,CAAC;QAAEjD,GAAG,EAAEc,YAAY,CAAC,CAAC,CAAC;QAAEb,GAAG,EAAEa,YAAY,CAAC,CAAC;MAAE,CAAC,CAAC;IACjE;EACF,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMgD,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFpD,OAAO,CAACqD,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMC,QAAQ,GAAG,MAAMzF,GAAG,CAAC0F,GAAG,CAAC,2BAA2B,CAAC;MAC3DvD,OAAO,CAACqD,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAE/C,IAAIF,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE;QACvC,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI;MAC3B,CAAC,MAAM;QACLxD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEqD,QAAQ,CAACE,IAAI,CAAC;QACxD,OAAO,EAAE;MACX;IACF,CAAC,CAAC,OAAOvD,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA5C,SAAS,CAAC,MAAM;IACd,MAAMoG,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF7B,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM4B,IAAI,GAAG,MAAMJ,aAAa,CAAC,CAAC;QAElC,MAAMM,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;QAErD,MAAMK,WAAW,GAAGH,aAAa,CAACI,GAAG,CAACC,IAAI,KAAK;UAC7C,GAAGA,IAAI;UACP3B,QAAQ,EAAE4B,UAAU,CAACD,IAAI,CAAC3B,QAAQ,CAAC;UACnCC,SAAS,EAAE2B,UAAU,CAACD,IAAI,CAAC1B,SAAS;QACtC,CAAC,CAAC,CAAC;QAEHX,WAAW,CAACmC,WAAW,CAAC;QACxBhC,QAAQ,CAAC,IAAI,CAAC;MAChB,CAAC,CAAC,OAAOoC,GAAG,EAAE;QACZjE,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEgE,GAAG,CAAC;QAC9CpC,QAAQ,CAAC,mDAAmD,CAAC;MAC/D,CAAC,SAAS;QACRD,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAED6B,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCnC,cAAc,CAACoC,IAAI,KAAK;MACtB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIpE,YAAY,EAAE;MAChB2B,YAAY,CAAC;QAAEzC,GAAG,EAAEc,YAAY,CAAC,CAAC,CAAC;QAAEb,GAAG,EAAEa,YAAY,CAAC,CAAC;MAAE,CAAC,CAAC;MAC5D6B,OAAO,CAAC,EAAE,CAAC;MACXE,cAAc,CAAC;QACbC,QAAQ,EAAEhC,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAAC;QACpCd,SAAS,EAAEjC,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC;MACtC,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMsB,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI;MACF,MAAMnF,GAAG,GAAG0E,UAAU,CAAC9B,WAAW,CAACE,QAAQ,CAAC;MAC5C,MAAM7C,GAAG,GAAGyE,UAAU,CAAC9B,WAAW,CAACG,SAAS,CAAC;MAE7C,IAAIqC,KAAK,CAACpF,GAAG,CAAC,IAAIoF,KAAK,CAACnF,GAAG,CAAC,IACxBD,GAAG,GAAG,CAAC,EAAE,IAAIA,GAAG,GAAG,EAAE,IACrBC,GAAG,GAAG,CAAC,GAAG,IAAIA,GAAG,GAAG,GAAG,EAAE;QAC3BsC,QAAQ,CAAC,gCAAgC,CAAC;QAC1C;MACF;MAEAA,QAAQ,CAAC,IAAI,CAAC;MACdU,eAAe,CAAC;QAAEjD,GAAG;QAAEC;MAAI,CAAC,CAAC;MAE7B,MAAMoF,OAAO,GAAGlD,QAAQ,CAACqC,GAAG,CAACC,IAAI,IAAI;QACnC,MAAMa,QAAQ,GAAGC,iBAAiB,CAChCvF,GAAG,EAAEC,GAAG,EACRwE,IAAI,CAAC3B,QAAQ,EAAE2B,IAAI,CAAC1B,SACtB,CAAC;QAED,OAAO;UACL,GAAG0B,IAAI;UACPa,QAAQ,EAAEA;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAME,aAAa,GAAG,CAAC,GAAGH,OAAO,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,QAAQ,GAAGK,CAAC,CAACL,QAAQ,CAAC;MAC1EnC,gBAAgB,CAACqC,aAAa,CAAC;MAC/BnC,cAAc,CAAC,IAAI,CAAC;MAEpBZ,YAAY,CAAC;QAAEzC,GAAG;QAAEC;MAAI,CAAC,CAAC;MAC1B0C,OAAO,CAAC,EAAE,CAAC;IACb,CAAC,CAAC,OAAOhC,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC4B,QAAQ,CAAC,iCAAiC,CAAC;IAC7C;EACF,CAAC;;EAED;EACA,MAAMqD,gBAAgB,GAAInB,IAAI,IAAK;IACjChC,YAAY,CAAC;MAAEzC,GAAG,EAAEyE,IAAI,CAAC3B,QAAQ;MAAE7C,GAAG,EAAEwE,IAAI,CAAC1B;IAAU,CAAC,CAAC;IACzDJ,OAAO,CAAC,EAAE,CAAC;IACXa,eAAe,CAACiB,IAAI,CAAC;IACrBf,iBAAiB,CAACe,IAAI,CAACoB,EAAE,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMN,iBAAiB,GAAGA,CAACO,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK;IACpD,MAAMC,CAAC,GAAG,MAAM;IAChB,MAAMC,EAAE,GAAGL,IAAI,GAAGM,IAAI,CAACC,EAAE,GAAG,GAAG;IAC/B,MAAMC,EAAE,GAAGN,IAAI,GAAGI,IAAI,CAACC,EAAE,GAAG,GAAG;IAC/B,MAAME,EAAE,GAAG,CAACP,IAAI,GAAGF,IAAI,IAAIM,IAAI,CAACC,EAAE,GAAG,GAAG;IACxC,MAAMG,EAAE,GAAG,CAACP,IAAI,GAAGF,IAAI,IAAIK,IAAI,CAACC,EAAE,GAAG,GAAG;IAExC,MAAMX,CAAC,GAAGU,IAAI,CAACK,GAAG,CAACF,EAAE,GAAC,CAAC,CAAC,GAAGH,IAAI,CAACK,GAAG,CAACF,EAAE,GAAC,CAAC,CAAC,GACjCH,IAAI,CAACM,GAAG,CAACP,EAAE,CAAC,GAAGC,IAAI,CAACM,GAAG,CAACJ,EAAE,CAAC,GAC3BF,IAAI,CAACK,GAAG,CAACD,EAAE,GAAC,CAAC,CAAC,GAAGJ,IAAI,CAACK,GAAG,CAACD,EAAE,GAAC,CAAC,CAAC;IACvC,MAAMG,CAAC,GAAG,CAAC,GAAGP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACS,IAAI,CAACnB,CAAC,CAAC,EAAEU,IAAI,CAACS,IAAI,CAAC,CAAC,GAACnB,CAAC,CAAC,CAAC;IAEtD,OAAOQ,CAAC,GAAGS,CAAC;EACd,CAAC;;EAED;EACA,MAAMG,cAAc,GAAIC,MAAM,IAAK;IACjC,IAAIA,MAAM,GAAG,IAAI,EAAE;MACjB,OAAO,GAAGX,IAAI,CAACY,KAAK,CAACD,MAAM,CAAC,SAAS;IACvC,CAAC,MAAM;MACL,OAAO,GAAG,CAACA,MAAM,GAAG,IAAI,EAAElD,OAAO,CAAC,CAAC,CAAC,KAAK;IAC3C;EACF,CAAC;;EAED;EACA,MAAMoD,UAAU,GAAGhJ,WAAW,CAAE4G,CAAC,IAAK;IACpC,MAAM7E,GAAG,GAAG6E,CAAC,CAACqC,MAAM,CAAClH,GAAG,CAAC,CAAC;IAC1B,MAAMC,GAAG,GAAG4E,CAAC,CAACqC,MAAM,CAACjH,GAAG,CAAC,CAAC;IAC1B4C,cAAc,CAAC;MACbC,QAAQ,EAAE9C,GAAG,CAAC6D,OAAO,CAAC,CAAC,CAAC;MACxBd,SAAS,EAAE9C,GAAG,CAAC4D,OAAO,CAAC,CAAC;IAC1B,CAAC,CAAC;IACFZ,eAAe,CAAC;MAAEjD,GAAG;MAAEC;IAAI,CAAC,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMkH,MAAM,GAAGlJ,WAAW,CAAEuG,GAAG,IAAK;IAClCZ,MAAM,CAACwD,OAAO,GAAG5C,GAAG;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM6C,SAAS,GAAGpJ,WAAW,CAAC,MAAM;IAClC2F,MAAM,CAACwD,OAAO,GAAG,IAAI;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIvF,SAAS,EAAE;IACb,oBAAOpD,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAG,QAAA,GAAC,6BAA2B,EAACU,SAAS,CAACyF,OAAO;IAAA;MAAAlG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC5F;EAEA,IAAI,CAACK,QAAQ,EAAE;IACb,oBAAOnD,OAAA;MAAKuC,SAAS,EAAC,iBAAiB;MAAAG,QAAA,EAAC;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtE;EAEA,oBACE9C,OAAA;IAAKuC,SAAS,EAAC,iBAAiB;IAAAG,QAAA,GAE7BmC,aAAa,iBACZ7E,OAAA;MAAKuC,SAAS,EAAC,2BAA2B;MAAAG,QAAA,gBACxC1C,OAAA;QAAKuC,SAAS,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/B9C,OAAA;QAAA0C,QAAA,EAAK;MAA6B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CACN,eAED9C,OAAA;MAAKuC,SAAS,EAAC,gBAAgB;MAAAG,QAAA,gBAC7B1C,OAAA;QAAKuC,SAAS,EAAC,oBAAoB;QAAAG,QAAA,gBACjC1C,OAAA;UAAA0C,QAAA,EAAI;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBZ,KAAK,iBAAIlC,OAAA;UAAKuC,SAAS,EAAC,eAAe;UAAAG,QAAA,EAAER;QAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEtD9C,OAAA;UAAKuC,SAAS,EAAC,aAAa;UAAAG,QAAA,gBAC1B1C,OAAA;YAAKuC,SAAS,EAAC,YAAY;YAAAG,QAAA,gBACzB1C,OAAA;cAAO8I,OAAO,EAAC,UAAU;cAAApG,QAAA,EAAC;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C9C,OAAA;cACE+I,IAAI,EAAC,MAAM;cACX3B,EAAE,EAAC,UAAU;cACbf,IAAI,EAAC,UAAU;cACfC,KAAK,EAAEnC,WAAW,CAACE,QAAS;cAC5B2E,QAAQ,EAAE7C,iBAAkB;cAC5B8C,WAAW,EAAC;YAAc;cAAAtG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN9C,OAAA;YAAKuC,SAAS,EAAC,YAAY;YAAAG,QAAA,gBACzB1C,OAAA;cAAO8I,OAAO,EAAC,WAAW;cAAApG,QAAA,EAAC;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7C9C,OAAA;cACE+I,IAAI,EAAC,MAAM;cACX3B,EAAE,EAAC,WAAW;cACdf,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAEnC,WAAW,CAACG,SAAU;cAC7B0E,QAAQ,EAAE7C,iBAAkB;cAC5B8C,WAAW,EAAC;YAAc;cAAAtG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAEN9C,OAAA;YAAGuC,SAAS,EAAC,WAAW;YAAAG,QAAA,EAAC;UAAgE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAE7F9C,OAAA;YACEuC,SAAS,EAAC,YAAY;YACtBD,OAAO,EAAEoE,YAAa;YACtBlE,QAAQ,EAAEoB,OAAQ;YAAAlB,QAAA,EAEjBkB,OAAO,GAAG,YAAY,GAAG;UAAwB;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEN9C,OAAA;QAAKuC,SAAS,EAAC,uBAAuB;QAAAG,QAAA,GACnCiC,WAAW,IAAIF,aAAa,CAACyE,MAAM,GAAG,CAAC,iBACtClJ,OAAA;UAAKuC,SAAS,EAAC,gBAAgB;UAAAG,QAAA,gBAC7B1C,OAAA;YAAA0C,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1B9C,OAAA;YAAKuC,SAAS,EAAC,cAAc;YAAAG,QAAA,EAC1B+B,aAAa,CAACsB,GAAG,CAAC,CAACC,IAAI,EAAEmD,KAAK,kBAC7BnJ,OAAA;cAEEuC,SAAS,EAAC,aAAa;cACvBD,OAAO,EAAEA,CAAA,KAAM6E,gBAAgB,CAACnB,IAAI,CAAE;cAAAtD,QAAA,gBAEtC1C,OAAA;gBAAKuC,SAAS,EAAC,cAAc;gBAAAG,QAAA,EAAEyG,KAAK,GAAG;cAAC;gBAAAxG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC/C9C,OAAA;gBAAKuC,SAAS,EAAC,gBAAgB;gBAAAG,QAAA,gBAC7B1C,OAAA;kBAAA0C,QAAA,EAAKsD,IAAI,CAACK;gBAAI;kBAAA1D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpB9C,OAAA;kBAAGuC,SAAS,EAAC,UAAU;kBAAAG,QAAA,GAAC,YAAU,EAAC2F,cAAc,CAACrC,IAAI,CAACa,QAAQ,CAAC;gBAAA;kBAAAlE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACrE9C,OAAA;kBAAGuC,SAAS,EAAC,aAAa;kBAAAG,QAAA,GACvBsD,IAAI,CAAC3B,QAAQ,CAACe,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACY,IAAI,CAAC1B,SAAS,CAACc,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAzC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC;YAAA,GAXDkD,IAAI,CAACoB,EAAE;cAAAzE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYT,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEA6B,WAAW,IAAIF,aAAa,CAACyE,MAAM,KAAK,CAAC,iBACxClJ,OAAA;UAAKuC,SAAS,EAAC,YAAY;UAAAG,QAAA,eACzB1C,OAAA;YAAA0C,QAAA,EAAG;UAA8C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN9C,OAAA;MAAKuC,SAAS,EAAC,eAAe;MAAAG,QAAA,eAC5B1C,OAAA,CAACP,SAAS;QACRU,iBAAiB,EAAEA,iBAAkB;QACrCiJ,MAAM,EAAErF,SAAU;QAClBE,IAAI,EAAEA,IAAK;QACXoF,OAAO,EAAE/I,cAAe;QACxBgC,OAAO,EAAEkG,UAAW;QACpBE,MAAM,EAAEA,MAAO;QACfE,SAAS,EAAEA,SAAU;QAAAlG,QAAA,GAGpBL,YAAY,iBACXrC,OAAA,CAACL,MAAM;UACL2J,QAAQ,EAAE;YAAE/H,GAAG,EAAEc,YAAY,CAAC,CAAC,CAAC;YAAEb,GAAG,EAAEa,YAAY,CAAC,CAAC;UAAE,CAAE;UACzDkH,IAAI,EAAE;YACJC,GAAG,EAAE,oGAAoG;YACzGC,UAAU,EAAE,IAAIvI,MAAM,CAACC,MAAM,CAACC,IAAI,CAACsI,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/CpI,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAC1CC,MAAM,EAAE,IAAI1I,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,EAAE,EAAE,EAAE;UAC7C,CAAE;UAAAjH,QAAA,EAEDsC,cAAc,KAAK,MAAM,iBACxBhF,OAAA,CAACJ,UAAU;YAACiK,YAAY,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,IAAI,CAAE;YAAAvC,QAAA,eACtD1C,OAAA;cAAA0C,QAAA,gBACE1C,OAAA;gBAAA0C,QAAA,EAAQ;cAAa;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAA9C,OAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACnCT,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAAC/C,YAAY,CAAC,CAAC,CAAC,CAAC+C,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACT,EAGAyB,YAAY,iBACXvE,OAAA,CAACL,MAAM;UACL2J,QAAQ,EAAE/E,YAAa;UACvBgF,IAAI,EAAE;YACJC,GAAG,EAAE,mGAAmG;YACxGC,UAAU,EAAE,IAAIvI,MAAM,CAACC,MAAM,CAACC,IAAI,CAACsI,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/CpI,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAC1CC,MAAM,EAAE,IAAI1I,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,EAAE,EAAE,EAAE;UAC7C,CAAE;UACFrH,OAAO,EAAEA,CAAA,KAAM2C,iBAAiB,CAAC,QAAQ,CAAE;UAAAvC,QAAA,EAE1CsC,cAAc,KAAK,QAAQ,iBAC1BhF,OAAA,CAACJ,UAAU;YAACiK,YAAY,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,IAAI,CAAE;YAAAvC,QAAA,eACtD1C,OAAA;cAAA0C,QAAA,gBACE1C,OAAA;gBAAA0C,QAAA,EAAQ;cAAe;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAA9C,OAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACrCyB,YAAY,CAAChD,GAAG,CAAC6D,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACb,YAAY,CAAC/C,GAAG,CAAC4D,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAzC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QACb;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CACT,EAGAY,QAAQ,CAACqC,GAAG,CAACC,IAAI,iBAChBhG,OAAA,CAACL,MAAM;UAEL2J,QAAQ,EAAE;YAAE/H,GAAG,EAAEyE,IAAI,CAAC3B,QAAQ;YAAE7C,GAAG,EAAEwE,IAAI,CAAC1B;UAAU,CAAE;UACtDiF,IAAI,EAAE;YACJC,GAAG,EAAE,eAAe;YACpBC,UAAU,EAAE,IAAIvI,MAAM,CAACC,MAAM,CAACC,IAAI,CAACsI,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC;YAC/CpI,MAAM,EAAE,IAAIJ,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;YAC1CC,MAAM,EAAE,IAAI1I,MAAM,CAACC,MAAM,CAACC,IAAI,CAACuI,KAAK,CAAC,EAAE,EAAE,EAAE;UAC7C,CAAE;UACFrH,OAAO,EAAEA,CAAA,KAAM2C,iBAAiB,CAACe,IAAI,CAACoB,EAAE,CAAE;UAAA1E,QAAA,EAEzCsC,cAAc,KAAKgB,IAAI,CAACoB,EAAE,iBACzBpH,OAAA,CAACJ,UAAU;YAACiK,YAAY,EAAEA,CAAA,KAAM5E,iBAAiB,CAAC,IAAI,CAAE;YAAAvC,QAAA,eACtD1C,OAAA;cAAA0C,QAAA,gBACE1C,OAAA;gBAAA0C,QAAA,EAASsD,IAAI,CAACK;cAAI;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eAAA9C,OAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACjCyB,YAAY,iBACXvE,OAAA;gBAAA0C,QAAA,GAAM,YACM,EAAC2F,cAAc,CACvBvB,iBAAiB,CACfvC,YAAY,CAAChD,GAAG,EAAEgD,YAAY,CAAC/C,GAAG,EAClCwE,IAAI,CAAC3B,QAAQ,EAAE2B,IAAI,CAAC1B,SACtB,CACF,CAAC;cAAA;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACG,CACP;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QACb,GA1BIkD,IAAI,CAACoB,EAAE;UAAAzE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2BN,CACT,CAAC,EAGDT,YAAY,IAAIyC,YAAY,iBAC3B9E,OAAA,CAAAE,SAAA;UAAAwC,QAAA,gBACE1C,OAAA,CAACW,iBAAiB;YAChBC,UAAU,EAAEyB,YAAa;YACzBxB,QAAQ,EAAE,CAACiE,YAAY,CAACT,QAAQ,EAAES,YAAY,CAACR,SAAS,CAAE;YAC1DxD,aAAa,EAAEA,aAAc;YAC7BC,gBAAgB,EAAEA;UAAiB;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,EACDoC,UAAU,iBACTlF,OAAA,CAACH,kBAAkB;YACjBqF,UAAU,EAAEA,UAAW;YACvBmE,OAAO,EAAE;cACPS,eAAe,EAAE,IAAI;cACrBC,eAAe,EAAE;gBACfC,WAAW,EAAE,SAAS;gBACtBC,YAAY,EAAE,CAAC;gBACfC,aAAa,EAAE;cACjB;YACF;UAAE;YAAAvH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF;QAAA,eACD,CACH,eAGD9C,OAAA;UAAKuC,SAAS,EAAC,cAAc;UAAAG,QAAA,eAC3B1C,OAAA,CAACoC,cAAc;YACbC,YAAY,EAAEA,YAAa;YAC3BC,OAAO,EAAEmE;UAAmB;YAAA9D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,GAAA,CAnaIF,aAAa;EAAA,QAEetD,cAAc;AAAA;AAAAyK,GAAA,GAF1CnH,aAAa;AAqanB,eAAeA,aAAa;AAAC,IAAAb,EAAA,EAAAY,GAAA,EAAAoH,GAAA;AAAAC,YAAA,CAAAjI,EAAA;AAAAiI,YAAA,CAAArH,GAAA;AAAAqH,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}