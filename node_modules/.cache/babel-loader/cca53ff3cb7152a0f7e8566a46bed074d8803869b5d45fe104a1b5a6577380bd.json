{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMapScreen.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { getApiUrl } from '../../utils/api2.js';\nimport '../../css/DriverMapScreen.css';\n\n// Fix for default marker icon in Leaflet with React\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png'\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Next stop icon (highlighted)\nconst nextStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [36, 36],\n  iconAnchor: [18, 36],\n  popupAnchor: [0, -36],\n  className: 'next-stop-icon' // CSS class for styling\n});\n\n// Component to handle map centering\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n  return null;\n};\n\n// Component to update driver's location in the database\n_s(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = MapController;\nconst LocationUpdater = ({\n  driverId,\n  busId,\n  position\n}) => {\n  _s2();\n  useEffect(() => {\n    if (!position || !busId) return;\n    const updateLocation = async () => {\n      try {\n        await axios.post(getApiUrl('/driver/update-location'), {\n          busId,\n          latitude: position[0],\n          longitude: position[1]\n        }, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n    updateLocation();\n\n    // Update location every 10 seconds (changed from 5 seconds)\n    const interval = setInterval(updateLocation, 10000);\n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n  return null;\n};\n\n// Component to detect proximity to next bus stop\n_s2(LocationUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c2 = LocationUpdater;\nconst ProximityDetector = ({\n  busId,\n  position,\n  nextStop,\n  onStopReached\n}) => {\n  _s3();\n  useEffect(() => {\n    if (!position || !nextStop || !busId) return;\n    const checkProximity = () => {\n      const nextStopPosition = [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)];\n\n      // Calculate distance between driver and next stop (in meters)\n      const distance = L.latLng(position).distanceTo(L.latLng(nextStopPosition));\n\n      // If within 30 meters, mark the stop as cleared\n      if (distance <= 30) {\n        console.log(`Within 30m of next stop (${distance.toFixed(2)}m). Auto-clearing stop.`);\n        onStopReached(busId, nextStop.stop_id);\n      }\n    };\n\n    // Check proximity every second\n    const interval = setInterval(checkProximity, 1000);\n    return () => clearInterval(interval);\n  }, [position, nextStop, busId, onStopReached]);\n  return null;\n};\n\n// Component to draw OSRM route between stops\n_s3(ProximityDetector, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = ProximityDetector;\nconst OsrmRoutes = ({\n  stops,\n  currentPosition,\n  lastClearedStopIndex,\n  nextStopIndex\n}) => {\n  _s4();\n  const map = useMap();\n  const routeRef = useRef(null);\n  const nextSegmentRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stops || stops.length < 2 || !map) return;\n    const fetchAndDrawFullRoute = async () => {\n      try {\n        setIsLoading(true);\n\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n\n        // Build waypoints for the complete route\n        const waypoints = stops.map(stop => [parseFloat(stop.longitude), parseFloat(stop.latitude)]);\n\n        // Close the loop for circular route\n        waypoints.push(waypoints[0]);\n\n        // Convert waypoints to the format expected by OSRM API\n        const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n        const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`);\n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n          // Create a polyline for the full route\n          const polyline = L.polyline(coordinates, {\n            color: '#3388ff',\n            weight: 4,\n            opacity: 0.6,\n            lineJoin: 'round'\n          }).addTo(map);\n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching full route:', error);\n      }\n    };\n    const fetchAndDrawNextSegment = async () => {\n      try {\n        // Clear previous next segment route\n        if (nextSegmentRef.current) {\n          map.removeLayer(nextSegmentRef.current);\n          nextSegmentRef.current = null;\n        }\n\n        // Only draw if we have a last cleared stop and next stop\n        if (lastClearedStopIndex !== null && nextStopIndex !== null) {\n          const lastClearedStop = stops[lastClearedStopIndex];\n          const nextStop = stops[nextStopIndex];\n\n          // Build waypoints from last cleared stop to next stop\n          const waypoints = [[parseFloat(lastClearedStop.longitude), parseFloat(lastClearedStop.latitude)],\n          // Last cleared stop [lng, lat]\n          [parseFloat(nextStop.longitude), parseFloat(nextStop.latitude)] // Next stop [lng, lat]\n          ];\n\n          // Convert waypoints to the format expected by OSRM API\n          const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n          const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`);\n          if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n            const routeGeometry = response.data.routes[0].geometry.coordinates;\n            // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n            const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n            // Create a highlighted polyline for the next segment\n            const polyline = L.polyline(coordinates, {\n              color: '#FF0000',\n              // Red color for the highlighted segment\n              weight: 6,\n              opacity: 0.9,\n              lineJoin: 'round'\n            }).addTo(map);\n            nextSegmentRef.current = polyline;\n          }\n        }\n\n        // Set loading to false after both routes are drawn\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching next segment route:', error);\n        setIsLoading(false);\n      }\n    };\n\n    // Set loading to true at the start\n    setIsLoading(true);\n\n    // Chain the promises to ensure they run in sequence\n    fetchAndDrawFullRoute().then(() => fetchAndDrawNextSegment()).catch(() => setIsLoading(false));\n\n    // Clean up function\n    return () => {\n      if (routeRef.current && map) {\n        map.removeLayer(routeRef.current);\n      }\n      if (nextSegmentRef.current && map) {\n        map.removeLayer(nextSegmentRef.current);\n      }\n    };\n  }, [map, stops, lastClearedStopIndex, nextStopIndex, currentPosition]);\n\n  // Return loading overlay if routes are being fetched\n  return isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"osrm-loading-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"osrm-loading-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"osrm-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Updating route...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this) : null;\n};\n\n// Component to keep bus in view\n_s4(OsrmRoutes, \"GALYDOelLX6PysKIPVgChX8s6T0=\", false, function () {\n  return [useMap];\n});\n_c4 = OsrmRoutes;\nconst KeepBusInView = ({\n  position\n}) => {\n  _s5();\n  const map = useMap();\n  const [lastPosition, setLastPosition] = useState(null);\n  useEffect(() => {\n    if (!position || !map) return;\n\n    // Check if position has changed significantly\n    if (lastPosition && position[0] === lastPosition[0] && position[1] === lastPosition[1]) {\n      return; // Position hasn't changed, do nothing\n    }\n    setLastPosition(position);\n\n    // Check if the bus is within the current map bounds\n    const bounds = map.getBounds();\n    const isInBounds = bounds.contains(position);\n\n    // If the bus is outside the visible area, recenter the map\n    if (!isInBounds) {\n      console.log('Bus moved outside visible area, recentering map');\n      map.setView(position, map.getZoom());\n    }\n  }, [map, position, lastPosition]);\n  return null;\n};\n\n// Component for tracking driver location with geolocation API\n_s5(KeepBusInView, \"+Z0l5dH9PpTH+/Gg6Ee0hM5u91Q=\", false, function () {\n  return [useMap];\n});\n_c5 = KeepBusInView;\nconst DriverLocationTracker = ({\n  setPosition\n}) => {\n  _s6();\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({\n      watch: true,\n      enableHighAccuracy: true\n    });\n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n  return null;\n};\n\n// Button to center map on driver's location\n_s6(DriverLocationTracker, \"gWh149/DLPuF22WgXAndVVlzhL4=\", false, function () {\n  return [useMapEvents];\n});\n_c6 = DriverLocationTracker;\nconst LocationButton = ({\n  position,\n  setCenter,\n  busInfo\n}) => {\n  _s7();\n  // Remove mapZoom and setMapZoom that are causing unused variable warnings\n  const map = useRef(null); // Use a ref instead of useMap() hook\n\n  const handleClick = () => {\n    if (position) {\n      // If we have the driver's position, center on that with maximum zoom\n      setCenter(position);\n      // We'll now handle the zoom in the MapController component\n      console.log('Centering map on driver position with maximum zoom:', position);\n    } else if (busInfo && busInfo.nextStop) {\n      // Fall back to the next bus stop if driver position isn't available\n      const nextStopPosition = [parseFloat(busInfo.nextStop.latitude), parseFloat(busInfo.nextStop.longitude)];\n      setCenter(nextStopPosition);\n      console.log('Centering map on next stop:', nextStopPosition);\n    } else if (busInfo && busInfo.route && busInfo.route.length > 0) {\n      // Fall back to the first stop in the route\n      const firstStopPosition = [parseFloat(busInfo.route[0].latitude), parseFloat(busInfo.route[0].longitude)];\n      setCenter(firstStopPosition);\n      console.log('Centering map on first stop in route:', firstStopPosition);\n    } else {\n      // Default to IIT KGP location\n      const defaultPosition = [22.3190, 87.3091];\n      setCenter(defaultPosition);\n      console.log('Centering map on default location:', defaultPosition);\n    }\n  };\n\n  // Always make the button clickable\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: handleClick,\n    title: position ? \"Center map on your location\" : \"Center map on route\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), \" \", position ? \"Your Location\" : \"Center Map\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 351,\n    columnNumber: 5\n  }, this);\n};\n\n// Rename these components to indicate they're unused or add eslint-disable comments\n// eslint-disable-next-line no-unused-vars\n_s7(LocationButton, \"MeRFS63g5R81qydl2773qdsa2PI=\");\n_c7 = LocationButton;\nconst UnusedClearStopButton = ({\n  busId,\n  stopId,\n  onStopCleared,\n  isNextStop\n}) => {\n  _s8();\n  const [loading, setLoading] = useState(false);\n  const handleClearStop = async () => {\n    if (!busId || !stopId) return;\n    try {\n      setLoading(true);\n      const response = await axios.post(getApiUrl('/driver/clear-stop'), {\n        busId,\n        stopId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n        }\n      });\n      if (response.data) {\n        console.log('Stop cleared successfully');\n        if (onStopCleared) onStopCleared(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!isNextStop) return null;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"clear-stop-button\",\n    onClick: handleClearStop,\n    disabled: loading,\n    children: loading ? 'Marking...' : 'Mark as Cleared'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n};\n\n// eslint-disable-next-line no-unused-vars\n_s8(UnusedClearStopButton, \"/Rjh5rPqCCqf0XYnTUk9ZNavw3Q=\");\n_c8 = UnusedClearStopButton;\nconst UnusedTurnNotification = ({\n  stops,\n  currentPosition,\n  lastClearedStopIndex,\n  nextStopIndex\n}) => {\n  _s9();\n  const [showNotification, setShowNotification] = useState(false);\n  const [turnDirection, setTurnDirection] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const notificationRef = useRef(null);\n  useEffect(() => {\n    if (!stops || !currentPosition || lastClearedStopIndex === null || nextStopIndex === null) return;\n    const lastStop = stops[lastClearedStopIndex];\n    const nextStop = stops[nextStopIndex];\n\n    // Calculate upcoming turns by comparing bearings\n    const calculateTurn = () => {\n      const currentPos = L.latLng(currentPosition);\n      const lastStopPos = L.latLng(parseFloat(lastStop.latitude), parseFloat(lastStop.longitude));\n      const nextStopPos = L.latLng(parseFloat(nextStop.latitude), parseFloat(nextStop.longitude));\n\n      // Calculate bearings\n      const bearingToNext = calculateBearing(currentPos, nextStopPos);\n\n      // Calculate distance to next stop\n      const distanceToNext = currentPos.distanceTo(nextStopPos);\n      setDistance(distanceToNext);\n\n      // Determine if there's a turn coming up (within 100m)\n      if (distanceToNext <= 100) {\n        // Calculate current heading based on last few positions\n        // This is simplified - ideally, you'd track recent positions to determine heading\n        const currentHeading = calculateBearing(lastStopPos, currentPos);\n\n        // Calculate angle between current heading and bearing to next stop\n        const angle = Math.abs(bearingToNext - currentHeading);\n        const normalizedAngle = angle > 180 ? 360 - angle : angle;\n\n        // Determine turn direction based on angle\n        if (normalizedAngle > 30 && normalizedAngle < 150) {\n          if (bearingToNext > currentHeading && bearingToNext - currentHeading < 180 || currentHeading > bearingToNext && currentHeading - bearingToNext > 180) {\n            setTurnDirection('right');\n          } else {\n            setTurnDirection('left');\n          }\n\n          // Show notification 5 seconds before turn (assume average speed of 5m/s)\n          if (distanceToNext <= 25) {\n            setShowNotification(true);\n\n            // Hide notification 5 seconds after passing the turn\n            const hideTimeout = setTimeout(() => {\n              setShowNotification(false);\n            }, 10000); // 5 seconds before + 5 seconds after = 10 seconds total\n\n            return () => clearTimeout(hideTimeout);\n          }\n        } else {\n          setTurnDirection('straight');\n        }\n      } else {\n        setTurnDirection(null);\n        setShowNotification(false);\n      }\n    };\n\n    // Calculate turn every 1 second\n    const interval = setInterval(calculateTurn, 1000);\n    return () => clearInterval(interval);\n  }, [stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n\n  // Helper function to calculate bearing between two points\n  const calculateBearing = (start, end) => {\n    const startLat = start.lat * Math.PI / 180;\n    const startLng = start.lng * Math.PI / 180;\n    const endLat = end.lat * Math.PI / 180;\n    const endLng = end.lng * Math.PI / 180;\n    const y = Math.sin(endLng - startLng) * Math.cos(endLat);\n    const x = Math.cos(startLat) * Math.sin(endLat) - Math.sin(startLat) * Math.cos(endLat) * Math.cos(endLng - startLng);\n    let bearing = Math.atan2(y, x) * 180 / Math.PI;\n    if (bearing < 0) bearing += 360;\n    return bearing;\n  };\n  if (!showNotification) return null;\n\n  // Render turn notification\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"turn-notification\",\n    ref: notificationRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"turn-icon\",\n      children: [turnDirection === 'left' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 38\n      }, this), turnDirection === 'right' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 39\n      }, this), turnDirection === 'straight' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"turn-text\",\n      children: [turnDirection === 'left' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn left in \", Math.round(distance), \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 38\n      }, this), turnDirection === 'right' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Turn right in \", Math.round(distance), \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 39\n      }, this), turnDirection === 'straight' && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Continue straight for \", Math.round(distance), \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 504,\n    columnNumber: 5\n  }, this);\n};\n\n// Component to update next stop distance in the UI\n_s9(UnusedTurnNotification, \"uLacB8YG+OyfTtGa+mjBcznmiBo=\");\n_c9 = UnusedTurnNotification;\nconst NextStopDistanceUpdater = ({\n  position,\n  nextStop\n}) => {\n  _s10();\n  useEffect(() => {\n    if (!position || !nextStop) return;\n    const updateDistance = () => {\n      const nextStopPosition = [parseFloat(nextStop.latitude), parseFloat(nextStop.longitude)];\n\n      // Calculate distance between driver and next stop (in meters)\n      const distance = L.latLng(position).distanceTo(L.latLng(nextStopPosition));\n\n      // Update the distance display in the UI\n      const distanceElement = document.getElementById('next-stop-distance');\n      if (distanceElement) {\n        distanceElement.textContent = `${Math.round(distance)} meters`;\n      }\n    };\n\n    // Update immediately and then every second\n    updateDistance();\n    const interval = setInterval(updateDistance, 1000);\n    return () => clearInterval(interval);\n  }, [position, nextStop]);\n  return null;\n};\n\n// Simplified permanent directions component\n_s10(NextStopDistanceUpdater, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c10 = NextStopDistanceUpdater;\nconst PermanentDirections = ({\n  stops,\n  currentPosition,\n  lastClearedStopIndex,\n  nextStopIndex\n}) => {\n  _s11();\n  const [direction, setDirection] = useState(null);\n  const [distance, setDistance] = useState(null);\n  useEffect(() => {\n    if (!stops || !currentPosition || lastClearedStopIndex === null || nextStopIndex === null) return;\n\n    // Use nextStop directly and remove reference to lastStop that isn't used\n    const nextStop = stops[nextStopIndex];\n\n    // Calculate heading and distance continuously\n    const calculateDirections = () => {\n      const currentPos = L.latLng(currentPosition);\n      const nextStopPos = L.latLng(parseFloat(nextStop.latitude), parseFloat(nextStop.longitude));\n\n      // Calculate distance to next stop\n      const distanceToNext = currentPos.distanceTo(nextStopPos);\n      setDistance(Math.round(distanceToNext));\n\n      // Get route from current position to next stop using Leaflet routing\n      // (This is a simplification - in a real app we'd use the OSRM route data)\n      const bearing = calculateBearing(currentPos, nextStopPos);\n\n      // Determine direction based on bearing\n      if (bearing >= 337.5 || bearing < 22.5) {\n        setDirection('north');\n      } else if (bearing >= 22.5 && bearing < 67.5) {\n        setDirection('northeast');\n      } else if (bearing >= 67.5 && bearing < 112.5) {\n        setDirection('east');\n      } else if (bearing >= 112.5 && bearing < 157.5) {\n        setDirection('southeast');\n      } else if (bearing >= 157.5 && bearing < 202.5) {\n        setDirection('south');\n      } else if (bearing >= 202.5 && bearing < 247.5) {\n        setDirection('southwest');\n      } else if (bearing >= 247.5 && bearing < 292.5) {\n        setDirection('west');\n      } else {\n        setDirection('northwest');\n      }\n    };\n\n    // Calculate initially and then every second\n    calculateDirections();\n    const interval = setInterval(calculateDirections, 1000);\n    return () => clearInterval(interval);\n  }, [stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n\n  // Helper function to calculate bearing between two points\n  const calculateBearing = (start, end) => {\n    const startLat = start.lat * Math.PI / 180;\n    const startLng = start.lng * Math.PI / 180;\n    const endLat = end.lat * Math.PI / 180;\n    const endLng = end.lng * Math.PI / 180;\n    const y = Math.sin(endLng - startLng) * Math.cos(endLat);\n    const x = Math.cos(startLat) * Math.sin(endLat) - Math.sin(startLat) * Math.cos(endLat) * Math.cos(endLng - startLng);\n    let bearing = Math.atan2(y, x) * 180 / Math.PI;\n    if (bearing < 0) bearing += 360;\n    return bearing;\n  };\n\n  // Always render the directions panel\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"permanent-directions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"direction-icon\",\n      children: [direction === 'north' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 35\n      }, this), direction === 'northeast' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-up\",\n        style: {\n          transform: 'rotate(45deg)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 39\n      }, this), direction === 'east' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 34\n      }, this), direction === 'southeast' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-down\",\n        style: {\n          transform: 'rotate(-45deg)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 39\n      }, this), direction === 'south' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-down\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 35\n      }, this), direction === 'southwest' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-down\",\n        style: {\n          transform: 'rotate(45deg)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 39\n      }, this), direction === 'west' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 34\n      }, this), direction === 'northwest' && /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-up\",\n        style: {\n          transform: 'rotate(-45deg)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"direction-text\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Head \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: direction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 17\n        }, this), \" for \", distance, \" meters\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Next stop: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stops[nextStopIndex].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 636,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"estimated time: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stops[nextStopIndex].time\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n};\n_s11(PermanentDirections, \"W0cCA7sXMQtYIEyIdF68JfflV4U=\");\n_c11 = PermanentDirections;\nfunction DriverMapScreen() {\n  _s12();\n  const [position, setPosition] = useState(null);\n  const [center, setCenter] = useState(null);\n  const [zoom, setZoom] = useState(15); // Add zoom state\n  const [busInfo, setBusInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // For the map\n  const mapRef = useRef(null);\n\n  // Set up axios interceptor for JWT expiration\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, error => {\n      var _error$response$data;\n      if (error.response && (error.response.status === 401 || (_error$response$data = error.response.data) !== null && _error$response$data !== void 0 && _error$response$data.expired)) {\n        console.log('Authentication token expired or invalid. Redirecting to login.');\n        localStorage.removeItem('jwtToken');\n        localStorage.removeItem('user');\n        navigate('/login');\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, [navigate]);\n\n  // Fetch driver's bus info and route\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(getApiUrl('/driver/my-bus'), {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        });\n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n          console.log('Driver bus info loaded:', response.data.data);\n        } else {\n          setError('No bus assigned to you');\n        }\n      } catch (error) {\n        console.error('Error fetching driver bus:', error);\n        setError('Failed to load your bus information');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDriverBus();\n\n    // Refresh bus info every 60 seconds\n    const interval = setInterval(fetchDriverBus, 60000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Center map when position is first determined\n  useEffect(() => {\n    if (position && !center) {\n      setCenter(position);\n    }\n  }, [position, center]);\n\n  // Handle stop reached automatically (replaces manual clearing)\n  const handleStopReached = async (busId, stopId) => {\n    try {\n      const response = await axios.post(getApiUrl('/driver/clear-stop'), {\n        busId,\n        stopId\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n        }\n      });\n      if (response.data) {\n        console.log('Stop cleared automatically');\n\n        // Update the local state with the new stops_cleared value\n        setBusInfo(prev => ({\n          ...prev,\n          bus: response.data.data,\n          stopsCleared: parseInt(response.data.data.stops_cleared)\n        }));\n\n        // Refresh the bus info to get updated last/next stop\n        const fetchDriverBus = async () => {\n          try {\n            const response = await axios.get(getApiUrl('/driver/my-bus'), {\n              headers: {\n                Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n              }\n            });\n            if (response.data && response.data.data) {\n              setBusInfo(response.data.data);\n            }\n          } catch (error) {\n            console.error('Error refreshing driver bus info:', error);\n          }\n        };\n        fetchDriverBus();\n      }\n    } catch (error) {\n      console.error('Error auto-clearing stop:', error);\n    }\n  };\n\n  // Find indices for last cleared stop and next stop\n  const getStopIndices = () => {\n    if (!busInfo || !busInfo.route || busInfo.route.length === 0) {\n      return {\n        lastClearedStopIndex: null,\n        nextStopIndex: null\n      };\n    }\n    const stops = busInfo.route;\n    const stopsCleared = busInfo.stopsCleared || 0;\n\n    // If stopsCleared is 0, the last cleared stop is the last one in the route (circular)\n    // and the next stop is the first in the route\n    if (stopsCleared === 0) {\n      return {\n        lastClearedStopIndex: stops.length - 1,\n        nextStopIndex: 0\n      };\n    }\n\n    // Normalize stopsCleared to be within the route length (for circular routes)\n    const normalizedStopsCleared = stopsCleared % stops.length;\n    return {\n      lastClearedStopIndex: normalizedStopsCleared - 1,\n      nextStopIndex: normalizedStopsCleared % stops.length\n    };\n  };\n  const {\n    lastClearedStopIndex,\n    nextStopIndex\n  } = getStopIndices();\n\n  // If still loading, show a spinner\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your bus information...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If there's an error, show error message\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-error driver-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no bus assigned, show message\n  if (!busInfo || !busInfo.bus) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-error driver-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No Bus Assigned\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You do not have a bus assigned to you. Please contact an administrator.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 822,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Function to set both center and zoom at the same time\n  const handleCenterMap = newCenter => {\n    setCenter(newCenter);\n    setZoom(19); // Set maximum zoom when centering\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driver-map-screen\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"driver-map-container\",\n      children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n        center: center || [22.3190, 87.3091] // Default to IIT KGP if no position yet\n        ,\n        zoom: zoom // Use zoom state instead of hard-coded value\n        ,\n        className: \"driver-map\",\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: center,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 850,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DriverLocationTracker, {\n          setPosition: setPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), position && /*#__PURE__*/_jsxDEV(KeepBusInView, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 857,\n          columnNumber: 13\n        }, this), position && busInfo && /*#__PURE__*/_jsxDEV(LocationUpdater, {\n          driverId: localStorage.getItem('userId'),\n          busId: busInfo.bus.id,\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), position && busInfo && busInfo.nextStop && /*#__PURE__*/_jsxDEV(ProximityDetector, {\n          busId: busInfo.bus.id,\n          position: position,\n          nextStop: busInfo.nextStop,\n          onStopReached: handleStopReached\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          icon: busIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"driver-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Your Location (Bus \", busInfo.bus.name, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 884,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"You are here.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this), busInfo && busInfo.route && busInfo.route.map((stop, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [parseFloat(stop.latitude), parseFloat(stop.longitude)],\n          icon: index === nextStopIndex ? nextStopIcon : busStopIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stop-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 900,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Stop #\", index + 1, \" in route\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 901,\n                columnNumber: 19\n              }, this), index === nextStopIndex && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"next-stop-label\",\n                children: \"This is your next stop\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 903,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: index < nextStopIndex ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Arrived at: \", stop.time || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 907,\n                  columnNumber: 23\n                }, this) : index === nextStopIndex ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Expected arrival: \", stop.time || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"Scheduled for: \", stop.time || \"N/A\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 15\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 13\n        }, this)), busInfo && busInfo.route && position && /*#__PURE__*/_jsxDEV(OsrmRoutes, {\n          stops: busInfo.route,\n          currentPosition: position,\n          lastClearedStopIndex: lastClearedStopIndex,\n          nextStopIndex: nextStopIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 921,\n          columnNumber: 13\n        }, this), position && busInfo && busInfo.nextStop && /*#__PURE__*/_jsxDEV(NextStopDistanceUpdater, {\n          position: position,\n          nextStop: busInfo.nextStop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"location-button\",\n            onClick: () => handleCenterMap(position || (busInfo && busInfo.nextStop ? [parseFloat(busInfo.nextStop.latitude), parseFloat(busInfo.nextStop.longitude)] : busInfo && busInfo.route && busInfo.route.length > 0 ? [parseFloat(busInfo.route[0].latitude), parseFloat(busInfo.route[0].longitude)] : [22.3190, 87.3091])),\n            title: position ? \"Center map on your location\" : \"Center map on route\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-location-arrow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 15\n            }, this), \" \", position ? \"Your Location\" : \"Center Map\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 9\n      }, this), busInfo && busInfo.route && position && /*#__PURE__*/_jsxDEV(PermanentDirections, {\n        stops: busInfo.route,\n        currentPosition: position,\n        lastClearedStopIndex: lastClearedStopIndex,\n        nextStopIndex: nextStopIndex\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bus-info-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Bus: \", busInfo.bus.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 11\n        }, this), busInfo.nextStop && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"next-stop-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Next Stop:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 18\n            }, this), \" \", busInfo.nextStop.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Distance:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 18\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              id: \"next-stop-distance\",\n              children: \"Calculating...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 836,\n    columnNumber: 5\n  }, this);\n}\n_s12(DriverMapScreen, \"gRH27n+4m/5+1g8N+U3kt8Cmbi0=\", false, function () {\n  return [useNavigate];\n});\n_c12 = DriverMapScreen;\nexport default DriverMapScreen;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"MapController\");\n$RefreshReg$(_c2, \"LocationUpdater\");\n$RefreshReg$(_c3, \"ProximityDetector\");\n$RefreshReg$(_c4, \"OsrmRoutes\");\n$RefreshReg$(_c5, \"KeepBusInView\");\n$RefreshReg$(_c6, \"DriverLocationTracker\");\n$RefreshReg$(_c7, \"LocationButton\");\n$RefreshReg$(_c8, \"UnusedClearStopButton\");\n$RefreshReg$(_c9, \"UnusedTurnNotification\");\n$RefreshReg$(_c10, \"NextStopDistanceUpdater\");\n$RefreshReg$(_c11, \"PermanentDirections\");\n$RefreshReg$(_c12, \"DriverMapScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMap","useMapEvents","L","axios","useNavigate","getApiUrl","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","busIcon","iconSize","iconAnchor","popupAnchor","busStopIcon","nextStopIcon","className","MapController","center","zoom","_s","map","setView","getZoom","_c","LocationUpdater","driverId","busId","position","_s2","updateLocation","post","latitude","longitude","headers","Authorization","localStorage","getItem","console","log","error","interval","setInterval","clearInterval","_c2","ProximityDetector","nextStop","onStopReached","_s3","checkProximity","nextStopPosition","parseFloat","distance","latLng","distanceTo","toFixed","stop_id","_c3","OsrmRoutes","stops","currentPosition","lastClearedStopIndex","nextStopIndex","_s4","routeRef","nextSegmentRef","isLoading","setIsLoading","length","fetchAndDrawFullRoute","current","removeLayer","waypoints","stop","push","waypointsString","wp","join","response","get","data","code","routes","routeGeometry","geometry","coordinates","coord","polyline","color","weight","opacity","lineJoin","addTo","fetchAndDrawNextSegment","lastClearedStop","then","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","KeepBusInView","_s5","lastPosition","setLastPosition","bounds","getBounds","isInBounds","contains","_c5","DriverLocationTracker","setPosition","_s6","locationfound","e","latlng","lat","lng","locationerror","message","alert","locate","watch","enableHighAccuracy","stopLocate","_c6","LocationButton","setCenter","busInfo","_s7","handleClick","route","firstStopPosition","defaultPosition","onClick","title","_c7","UnusedClearStopButton","stopId","onStopCleared","isNextStop","_s8","loading","setLoading","handleClearStop","disabled","_c8","UnusedTurnNotification","_s9","showNotification","setShowNotification","turnDirection","setTurnDirection","setDistance","notificationRef","lastStop","calculateTurn","currentPos","lastStopPos","nextStopPos","bearingToNext","calculateBearing","distanceToNext","currentHeading","angle","Math","abs","normalizedAngle","hideTimeout","setTimeout","clearTimeout","start","end","startLat","PI","startLng","endLat","endLng","y","sin","cos","x","bearing","atan2","ref","round","_c9","NextStopDistanceUpdater","_s10","updateDistance","distanceElement","document","getElementById","textContent","_c10","PermanentDirections","_s11","direction","setDirection","calculateDirections","style","transform","name","time","_c11","DriverMapScreen","_s12","setZoom","setBusInfo","setError","navigate","mapRef","interceptor","interceptors","use","_error$response$data","status","expired","removeItem","Promise","reject","eject","fetchDriverBus","handleStopReached","prev","bus","stopsCleared","parseInt","stops_cleared","getStopIndices","normalizedStopsCleared","window","location","reload","handleCenterMap","newCenter","attribution","url","id","icon","index","_c12","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/driver_pages/DriverMapScreen.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, useMapEvents } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { getApiUrl } from '../../utils/api2.js';\nimport '../../css/DriverMapScreen.css';\n\n// Fix for default marker icon in Leaflet with React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n});\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [40, 40],\n  iconAnchor: [20, 40],\n  popupAnchor: [0, -40]\n});\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// Next stop icon (highlighted)\nconst nextStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1165/1165895.png',\n  iconSize: [36, 36],\n  iconAnchor: [18, 36],\n  popupAnchor: [0, -36],\n  className: 'next-stop-icon' // CSS class for styling\n});\n\n// Component to handle map centering\nconst MapController = ({ center, zoom }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [center, zoom, map]);\n\n  return null;\n};\n\n// Component to update driver's location in the database\nconst LocationUpdater = ({ driverId, busId, position }) => {\n  useEffect(() => {\n    if (!position || !busId) return;\n\n    const updateLocation = async () => {\n      try {\n        await axios.post(\n          getApiUrl('/driver/update-location'),\n          {\n            busId,\n            latitude: position[0],\n            longitude: position[1]\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n        console.log('Location updated successfully');\n      } catch (error) {\n        console.error('Error updating location:', error);\n      }\n    };\n\n    updateLocation();\n\n    // Update location every 10 seconds (changed from 5 seconds)\n    const interval = setInterval(updateLocation, 10000);\n\n    return () => clearInterval(interval);\n  }, [position, busId, driverId]);\n\n  return null;\n};\n\n// Component to detect proximity to next bus stop\nconst ProximityDetector = ({ busId, position, nextStop, onStopReached }) => {\n  useEffect(() => {\n    if (!position || !nextStop || !busId) return;\n\n    const checkProximity = () => {\n      const nextStopPosition = [\n        parseFloat(nextStop.latitude),\n        parseFloat(nextStop.longitude)\n      ];\n\n      // Calculate distance between driver and next stop (in meters)\n      const distance = L.latLng(position).distanceTo(L.latLng(nextStopPosition));\n\n      // If within 30 meters, mark the stop as cleared\n      if (distance <= 30) {\n        console.log(`Within 30m of next stop (${distance.toFixed(2)}m). Auto-clearing stop.`);\n        onStopReached(busId, nextStop.stop_id);\n      }\n    };\n\n    // Check proximity every second\n    const interval = setInterval(checkProximity, 1000);\n\n    return () => clearInterval(interval);\n  }, [position, nextStop, busId, onStopReached]);\n\n  return null;\n};\n\n// Component to draw OSRM route between stops\nconst OsrmRoutes = ({ stops, currentPosition, lastClearedStopIndex, nextStopIndex }) => {\n  const map = useMap();\n  const routeRef = useRef(null);\n  const nextSegmentRef = useRef(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!stops || stops.length < 2 || !map) return;\n\n    const fetchAndDrawFullRoute = async () => {\n      try {\n        setIsLoading(true);\n\n        // Clear previous route\n        if (routeRef.current) {\n          map.removeLayer(routeRef.current);\n          routeRef.current = null;\n        }\n\n        // Build waypoints for the complete route\n        const waypoints = stops.map(stop => [\n          parseFloat(stop.longitude),\n          parseFloat(stop.latitude)\n        ]);\n\n        // Close the loop for circular route\n        waypoints.push(waypoints[0]);\n\n        // Convert waypoints to the format expected by OSRM API\n        const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n\n        const response = await axios.get(\n          `https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`\n        );\n\n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const routeGeometry = response.data.routes[0].geometry.coordinates;\n          // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n          const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n          // Create a polyline for the full route\n          const polyline = L.polyline(coordinates, {\n            color: '#3388ff',\n            weight: 4,\n            opacity: 0.6,\n            lineJoin: 'round'\n          }).addTo(map);\n\n          routeRef.current = polyline;\n        }\n      } catch (error) {\n        console.error('Error fetching full route:', error);\n      }\n    };\n\n    const fetchAndDrawNextSegment = async () => {\n      try {\n        // Clear previous next segment route\n        if (nextSegmentRef.current) {\n          map.removeLayer(nextSegmentRef.current);\n          nextSegmentRef.current = null;\n        }\n\n        // Only draw if we have a last cleared stop and next stop\n        if (lastClearedStopIndex !== null && nextStopIndex !== null) {\n          const lastClearedStop = stops[lastClearedStopIndex];\n          const nextStop = stops[nextStopIndex];\n\n          // Build waypoints from last cleared stop to next stop\n          const waypoints = [\n            [parseFloat(lastClearedStop.longitude), parseFloat(lastClearedStop.latitude)], // Last cleared stop [lng, lat]\n            [parseFloat(nextStop.longitude), parseFloat(nextStop.latitude)] // Next stop [lng, lat]\n          ];\n\n          // Convert waypoints to the format expected by OSRM API\n          const waypointsString = waypoints.map(wp => wp.join(',')).join(';');\n\n          const response = await axios.get(\n            `https://router.project-osrm.org/route/v1/driving/${waypointsString}?overview=full&geometries=geojson`\n          );\n\n          if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n            const routeGeometry = response.data.routes[0].geometry.coordinates;\n            // OSRM returns coordinates as [lng, lat], we need to flip for Leaflet\n            const coordinates = routeGeometry.map(coord => [coord[1], coord[0]]);\n\n            // Create a highlighted polyline for the next segment\n            const polyline = L.polyline(coordinates, {\n              color: '#FF0000', // Red color for the highlighted segment\n              weight: 6,\n              opacity: 0.9,\n              lineJoin: 'round'\n            }).addTo(map);\n\n            nextSegmentRef.current = polyline;\n          }\n        }\n\n        // Set loading to false after both routes are drawn\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching next segment route:', error);\n        setIsLoading(false);\n      }\n    };\n\n    // Set loading to true at the start\n    setIsLoading(true);\n\n    // Chain the promises to ensure they run in sequence\n    fetchAndDrawFullRoute()\n      .then(() => fetchAndDrawNextSegment())\n      .catch(() => setIsLoading(false));\n\n    // Clean up function\n    return () => {\n      if (routeRef.current && map) {\n        map.removeLayer(routeRef.current);\n      }\n      if (nextSegmentRef.current && map) {\n        map.removeLayer(nextSegmentRef.current);\n      }\n    };\n  }, [map, stops, lastClearedStopIndex, nextStopIndex, currentPosition]);\n\n  // Return loading overlay if routes are being fetched\n  return isLoading ? (\n    <div className=\"osrm-loading-overlay\">\n      <div className=\"osrm-loading-content\">\n        <div className=\"osrm-spinner\"></div>\n        <p>Updating route...</p>\n      </div>\n    </div>\n  ) : null;\n};\n\n// Component to keep bus in view\nconst KeepBusInView = ({ position }) => {\n  const map = useMap();\n  const [lastPosition, setLastPosition] = useState(null);\n\n  useEffect(() => {\n    if (!position || !map) return;\n\n    // Check if position has changed significantly\n    if (lastPosition &&\n      position[0] === lastPosition[0] &&\n      position[1] === lastPosition[1]) {\n      return; // Position hasn't changed, do nothing\n    }\n\n    setLastPosition(position);\n\n    // Check if the bus is within the current map bounds\n    const bounds = map.getBounds();\n    const isInBounds = bounds.contains(position);\n\n    // If the bus is outside the visible area, recenter the map\n    if (!isInBounds) {\n      console.log('Bus moved outside visible area, recentering map');\n      map.setView(position, map.getZoom());\n    }\n  }, [map, position, lastPosition]);\n\n  return null;\n};\n\n// Component for tracking driver location with geolocation API\nconst DriverLocationTracker = ({ setPosition }) => {\n  const map = useMapEvents({\n    locationfound(e) {\n      setPosition([e.latlng.lat, e.latlng.lng]);\n    },\n    locationerror(e) {\n      console.error('Location error:', e.message);\n      alert('Could not get your location. Please enable location services.');\n    }\n  });\n\n  useEffect(() => {\n    // Start tracking location when component mounts\n    map.locate({ watch: true, enableHighAccuracy: true });\n\n    return () => {\n      map.stopLocate();\n    };\n  }, [map]);\n\n  return null;\n};\n\n// Button to center map on driver's location\nconst LocationButton = ({ position, setCenter, busInfo }) => {\n  // Remove mapZoom and setMapZoom that are causing unused variable warnings\n  const map = useRef(null); // Use a ref instead of useMap() hook\n\n  const handleClick = () => {\n    if (position) {\n      // If we have the driver's position, center on that with maximum zoom\n      setCenter(position);\n      // We'll now handle the zoom in the MapController component\n      console.log('Centering map on driver position with maximum zoom:', position);\n    } else if (busInfo && busInfo.nextStop) {\n      // Fall back to the next bus stop if driver position isn't available\n      const nextStopPosition = [\n        parseFloat(busInfo.nextStop.latitude),\n        parseFloat(busInfo.nextStop.longitude)\n      ];\n      setCenter(nextStopPosition);\n      console.log('Centering map on next stop:', nextStopPosition);\n    } else if (busInfo && busInfo.route && busInfo.route.length > 0) {\n      // Fall back to the first stop in the route\n      const firstStopPosition = [\n        parseFloat(busInfo.route[0].latitude),\n        parseFloat(busInfo.route[0].longitude)\n      ];\n      setCenter(firstStopPosition);\n      console.log('Centering map on first stop in route:', firstStopPosition);\n    } else {\n      // Default to IIT KGP location\n      const defaultPosition = [22.3190, 87.3091];\n      setCenter(defaultPosition);\n      console.log('Centering map on default location:', defaultPosition);\n    }\n  };\n\n  // Always make the button clickable\n  return (\n    <button\n      className=\"location-button\"\n      onClick={handleClick}\n      title={position ? \"Center map on your location\" : \"Center map on route\"}\n    >\n      <i className=\"fas fa-location-arrow\"></i> {position ? \"Your Location\" : \"Center Map\"}\n    </button>\n  );\n};\n\n// Rename these components to indicate they're unused or add eslint-disable comments\n// eslint-disable-next-line no-unused-vars\nconst UnusedClearStopButton = ({ busId, stopId, onStopCleared, isNextStop }) => {\n  const [loading, setLoading] = useState(false);\n\n  const handleClearStop = async () => {\n    if (!busId || !stopId) return;\n\n    try {\n      setLoading(true);\n      const response = await axios.post(\n        getApiUrl('/driver/clear-stop'),\n        { busId, stopId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        }\n      );\n\n      if (response.data) {\n        console.log('Stop cleared successfully');\n        if (onStopCleared) onStopCleared(response.data.data);\n      }\n    } catch (error) {\n      console.error('Error clearing stop:', error);\n      alert('Failed to mark stop as cleared. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!isNextStop) return null;\n\n  return (\n    <button\n      className=\"clear-stop-button\"\n      onClick={handleClearStop}\n      disabled={loading}\n    >\n      {loading ? 'Marking...' : 'Mark as Cleared'}\n    </button>\n  );\n};\n\n// eslint-disable-next-line no-unused-vars\nconst UnusedTurnNotification = ({ stops, currentPosition, lastClearedStopIndex, nextStopIndex }) => {\n  const [showNotification, setShowNotification] = useState(false);\n  const [turnDirection, setTurnDirection] = useState(null);\n  const [distance, setDistance] = useState(null);\n  const notificationRef = useRef(null);\n\n  useEffect(() => {\n    if (!stops || !currentPosition || lastClearedStopIndex === null || nextStopIndex === null) return;\n\n    const lastStop = stops[lastClearedStopIndex];\n    const nextStop = stops[nextStopIndex];\n\n    // Calculate upcoming turns by comparing bearings\n    const calculateTurn = () => {\n      const currentPos = L.latLng(currentPosition);\n      const lastStopPos = L.latLng(\n        parseFloat(lastStop.latitude),\n        parseFloat(lastStop.longitude)\n      );\n      const nextStopPos = L.latLng(\n        parseFloat(nextStop.latitude),\n        parseFloat(nextStop.longitude)\n      );\n\n      // Calculate bearings\n      const bearingToNext = calculateBearing(currentPos, nextStopPos);\n\n      // Calculate distance to next stop\n      const distanceToNext = currentPos.distanceTo(nextStopPos);\n      setDistance(distanceToNext);\n\n      // Determine if there's a turn coming up (within 100m)\n      if (distanceToNext <= 100) {\n        // Calculate current heading based on last few positions\n        // This is simplified - ideally, you'd track recent positions to determine heading\n        const currentHeading = calculateBearing(lastStopPos, currentPos);\n\n        // Calculate angle between current heading and bearing to next stop\n        const angle = Math.abs(bearingToNext - currentHeading);\n        const normalizedAngle = angle > 180 ? 360 - angle : angle;\n\n        // Determine turn direction based on angle\n        if (normalizedAngle > 30 && normalizedAngle < 150) {\n          if ((bearingToNext > currentHeading && bearingToNext - currentHeading < 180) ||\n            (currentHeading > bearingToNext && currentHeading - bearingToNext > 180)) {\n            setTurnDirection('right');\n          } else {\n            setTurnDirection('left');\n          }\n\n          // Show notification 5 seconds before turn (assume average speed of 5m/s)\n          if (distanceToNext <= 25) {\n            setShowNotification(true);\n\n            // Hide notification 5 seconds after passing the turn\n            const hideTimeout = setTimeout(() => {\n              setShowNotification(false);\n            }, 10000); // 5 seconds before + 5 seconds after = 10 seconds total\n\n            return () => clearTimeout(hideTimeout);\n          }\n        } else {\n          setTurnDirection('straight');\n        }\n      } else {\n        setTurnDirection(null);\n        setShowNotification(false);\n      }\n    };\n\n    // Calculate turn every 1 second\n    const interval = setInterval(calculateTurn, 1000);\n\n    return () => clearInterval(interval);\n  }, [stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n\n  // Helper function to calculate bearing between two points\n  const calculateBearing = (start, end) => {\n    const startLat = start.lat * Math.PI / 180;\n    const startLng = start.lng * Math.PI / 180;\n    const endLat = end.lat * Math.PI / 180;\n    const endLng = end.lng * Math.PI / 180;\n\n    const y = Math.sin(endLng - startLng) * Math.cos(endLat);\n    const x = Math.cos(startLat) * Math.sin(endLat) -\n      Math.sin(startLat) * Math.cos(endLat) * Math.cos(endLng - startLng);\n\n    let bearing = Math.atan2(y, x) * 180 / Math.PI;\n    if (bearing < 0) bearing += 360;\n\n    return bearing;\n  };\n\n  if (!showNotification) return null;\n\n  // Render turn notification\n  return (\n    <div className=\"turn-notification\" ref={notificationRef}>\n      <div className=\"turn-icon\">\n        {turnDirection === 'left' && <i className=\"fas fa-arrow-left\"></i>}\n        {turnDirection === 'right' && <i className=\"fas fa-arrow-right\"></i>}\n        {turnDirection === 'straight' && <i className=\"fas fa-arrow-up\"></i>}\n      </div>\n      <div className=\"turn-text\">\n        {turnDirection === 'left' && <p>Turn left in {Math.round(distance)} meters</p>}\n        {turnDirection === 'right' && <p>Turn right in {Math.round(distance)} meters</p>}\n        {turnDirection === 'straight' && <p>Continue straight for {Math.round(distance)} meters</p>}\n      </div>\n    </div>\n  );\n};\n\n// Component to update next stop distance in the UI\nconst NextStopDistanceUpdater = ({ position, nextStop }) => {\n  useEffect(() => {\n    if (!position || !nextStop) return;\n\n    const updateDistance = () => {\n      const nextStopPosition = [\n        parseFloat(nextStop.latitude),\n        parseFloat(nextStop.longitude)\n      ];\n\n      // Calculate distance between driver and next stop (in meters)\n      const distance = L.latLng(position).distanceTo(L.latLng(nextStopPosition));\n\n      // Update the distance display in the UI\n      const distanceElement = document.getElementById('next-stop-distance');\n      if (distanceElement) {\n        distanceElement.textContent = `${Math.round(distance)} meters`;\n      }\n    };\n\n    // Update immediately and then every second\n    updateDistance();\n    const interval = setInterval(updateDistance, 1000);\n\n    return () => clearInterval(interval);\n  }, [position, nextStop]);\n\n  return null;\n};\n\n// Simplified permanent directions component\nconst PermanentDirections = ({ stops, currentPosition, lastClearedStopIndex, nextStopIndex }) => {\n  const [direction, setDirection] = useState(null);\n  const [distance, setDistance] = useState(null);\n\n  useEffect(() => {\n    if (!stops || !currentPosition || lastClearedStopIndex === null || nextStopIndex === null) return;\n\n    // Use nextStop directly and remove reference to lastStop that isn't used\n    const nextStop = stops[nextStopIndex];\n\n    // Calculate heading and distance continuously\n    const calculateDirections = () => {\n      const currentPos = L.latLng(currentPosition);\n      const nextStopPos = L.latLng(\n        parseFloat(nextStop.latitude),\n        parseFloat(nextStop.longitude)\n      );\n\n      // Calculate distance to next stop\n      const distanceToNext = currentPos.distanceTo(nextStopPos);\n      setDistance(Math.round(distanceToNext));\n\n      // Get route from current position to next stop using Leaflet routing\n      // (This is a simplification - in a real app we'd use the OSRM route data)\n      const bearing = calculateBearing(currentPos, nextStopPos);\n\n      // Determine direction based on bearing\n      if (bearing >= 337.5 || bearing < 22.5) {\n        setDirection('north');\n      } else if (bearing >= 22.5 && bearing < 67.5) {\n        setDirection('northeast');\n      } else if (bearing >= 67.5 && bearing < 112.5) {\n        setDirection('east');\n      } else if (bearing >= 112.5 && bearing < 157.5) {\n        setDirection('southeast');\n      } else if (bearing >= 157.5 && bearing < 202.5) {\n        setDirection('south');\n      } else if (bearing >= 202.5 && bearing < 247.5) {\n        setDirection('southwest');\n      } else if (bearing >= 247.5 && bearing < 292.5) {\n        setDirection('west');\n      } else {\n        setDirection('northwest');\n      }\n    };\n\n    // Calculate initially and then every second\n    calculateDirections();\n    const interval = setInterval(calculateDirections, 1000);\n\n    return () => clearInterval(interval);\n  }, [stops, currentPosition, lastClearedStopIndex, nextStopIndex]);\n\n  // Helper function to calculate bearing between two points\n  const calculateBearing = (start, end) => {\n    const startLat = start.lat * Math.PI / 180;\n    const startLng = start.lng * Math.PI / 180;\n    const endLat = end.lat * Math.PI / 180;\n    const endLng = end.lng * Math.PI / 180;\n\n    const y = Math.sin(endLng - startLng) * Math.cos(endLat);\n    const x = Math.cos(startLat) * Math.sin(endLat) -\n      Math.sin(startLat) * Math.cos(endLat) * Math.cos(endLng - startLng);\n\n    let bearing = Math.atan2(y, x) * 180 / Math.PI;\n    if (bearing < 0) bearing += 360;\n\n    return bearing;\n  };\n\n  // Always render the directions panel\n  return (\n    <div className=\"permanent-directions\">\n      <div className=\"direction-icon\">\n        {direction === 'north' && <i className=\"fas fa-arrow-up\"></i>}\n        {direction === 'northeast' && <i className=\"fas fa-arrow-up\" style={{ transform: 'rotate(45deg)' }}></i>}\n        {direction === 'east' && <i className=\"fas fa-arrow-right\"></i>}\n        {direction === 'southeast' && <i className=\"fas fa-arrow-down\" style={{ transform: 'rotate(-45deg)' }}></i>}\n        {direction === 'south' && <i className=\"fas fa-arrow-down\"></i>}\n        {direction === 'southwest' && <i className=\"fas fa-arrow-down\" style={{ transform: 'rotate(45deg)' }}></i>}\n        {direction === 'west' && <i className=\"fas fa-arrow-left\"></i>}\n        {direction === 'northwest' && <i className=\"fas fa-arrow-up\" style={{ transform: 'rotate(-45deg)' }}></i>}\n      </div>\n      <div className=\"direction-text\">\n        <p>Head <strong>{direction}</strong> for {distance} meters</p>\n        <p>Next stop: <strong>{stops[nextStopIndex].name}</strong></p>\n        <p>estimated time: <strong>{stops[nextStopIndex].time}</strong></p>\n      </div>\n    </div>\n  );\n};\n\nfunction DriverMapScreen() {\n  const [position, setPosition] = useState(null);\n  const [center, setCenter] = useState(null);\n  const [zoom, setZoom] = useState(15); // Add zoom state\n  const [busInfo, setBusInfo] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // For the map\n  const mapRef = useRef(null);\n\n  // Set up axios interceptor for JWT expiration\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response && (error.response.status === 401 || error.response.data?.expired)) {\n          console.log('Authentication token expired or invalid. Redirecting to login.');\n          localStorage.removeItem('jwtToken');\n          localStorage.removeItem('user');\n          navigate('/login');\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, [navigate]);\n\n  // Fetch driver's bus info and route\n  useEffect(() => {\n    const fetchDriverBus = async () => {\n      try {\n        setLoading(true);\n\n        const response = await axios.get(\n          getApiUrl('/driver/my-bus'),\n          {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n            }\n          }\n        );\n\n        if (response.data && response.data.data) {\n          setBusInfo(response.data.data);\n          console.log('Driver bus info loaded:', response.data.data);\n        } else {\n          setError('No bus assigned to you');\n        }\n      } catch (error) {\n        console.error('Error fetching driver bus:', error);\n        setError('Failed to load your bus information');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchDriverBus();\n\n    // Refresh bus info every 60 seconds\n    const interval = setInterval(fetchDriverBus, 60000);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  // Center map when position is first determined\n  useEffect(() => {\n    if (position && !center) {\n      setCenter(position);\n    }\n  }, [position, center]);\n\n  // Handle stop reached automatically (replaces manual clearing)\n  const handleStopReached = async (busId, stopId) => {\n    try {\n      const response = await axios.post(\n        getApiUrl('/driver/clear-stop'),\n        { busId, stopId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n          }\n        }\n      );\n\n      if (response.data) {\n        console.log('Stop cleared automatically');\n\n        // Update the local state with the new stops_cleared value\n        setBusInfo(prev => ({\n          ...prev,\n          bus: response.data.data,\n          stopsCleared: parseInt(response.data.data.stops_cleared)\n        }));\n\n        // Refresh the bus info to get updated last/next stop\n        const fetchDriverBus = async () => {\n          try {\n            const response = await axios.get(\n              getApiUrl('/driver/my-bus'),\n              {\n                headers: {\n                  Authorization: `Bearer ${localStorage.getItem('jwtToken')}`\n                }\n              }\n            );\n\n            if (response.data && response.data.data) {\n              setBusInfo(response.data.data);\n            }\n          } catch (error) {\n            console.error('Error refreshing driver bus info:', error);\n          }\n        };\n\n        fetchDriverBus();\n      }\n    } catch (error) {\n      console.error('Error auto-clearing stop:', error);\n    }\n  };\n\n  // Find indices for last cleared stop and next stop\n  const getStopIndices = () => {\n    if (!busInfo || !busInfo.route || busInfo.route.length === 0) {\n      return { lastClearedStopIndex: null, nextStopIndex: null };\n    }\n\n    const stops = busInfo.route;\n    const stopsCleared = busInfo.stopsCleared || 0;\n\n    // If stopsCleared is 0, the last cleared stop is the last one in the route (circular)\n    // and the next stop is the first in the route\n    if (stopsCleared === 0) {\n      return {\n        lastClearedStopIndex: stops.length - 1,\n        nextStopIndex: 0\n      };\n    }\n\n    // Normalize stopsCleared to be within the route length (for circular routes)\n    const normalizedStopsCleared = stopsCleared % stops.length;\n\n    return {\n      lastClearedStopIndex: normalizedStopsCleared - 1,\n      nextStopIndex: normalizedStopsCleared % stops.length\n    };\n  };\n\n  const { lastClearedStopIndex, nextStopIndex } = getStopIndices();\n\n  // If still loading, show a spinner\n  if (loading) {\n    return (\n      <div className=\"driver-map-loading\">\n        <div className=\"spinner\"></div>\n        <p>Loading your bus information...</p>\n      </div>\n    );\n  }\n\n  // If there's an error, show error message\n  if (error) {\n    return (\n      <div className=\"driver-map-error driver-map-container\">\n        <h2>Error</h2>\n        <p>{error}</p>\n        <button onClick={() => window.location.reload()}>Retry</button>\n      </div>\n    );\n  }\n\n  // If no bus assigned, show message\n  if (!busInfo || !busInfo.bus) {\n    return (\n      <div className=\"driver-map-error driver-map-container\">\n        <h2>No Bus Assigned</h2>\n        <p>You do not have a bus assigned to you. Please contact an administrator.</p>\n      </div>\n    );\n  }\n\n  // Function to set both center and zoom at the same time\n  const handleCenterMap = (newCenter) => {\n    setCenter(newCenter);\n    setZoom(19); // Set maximum zoom when centering\n  };\n\n  return (\n    <div className=\"driver-map-screen\">\n      <div className=\"driver-map-container\">\n        <MapContainer\n          center={center || [22.3190, 87.3091]} // Default to IIT KGP if no position yet\n          zoom={zoom} // Use zoom state instead of hard-coded value\n          className=\"driver-map\"\n          ref={mapRef}\n        >\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n\n          {/* Map controller to center map */}\n          <MapController center={center} zoom={zoom} />\n\n          {/* Driver location tracker */}\n          <DriverLocationTracker setPosition={setPosition} />\n\n          {/* Keep bus in view component */}\n          {position && (\n            <KeepBusInView position={position} />\n          )}\n\n          {/* Location updater component */}\n          {position && busInfo && (\n            <LocationUpdater\n              driverId={localStorage.getItem('userId')}\n              busId={busInfo.bus.id}\n              position={position}\n            />\n          )}\n\n          {/* Proximity detector for auto-clearing stops */}\n          {position && busInfo && busInfo.nextStop && (\n            <ProximityDetector\n              busId={busInfo.bus.id}\n              position={position}\n              nextStop={busInfo.nextStop}\n              onStopReached={handleStopReached}\n            />\n          )}\n\n          {/* Driver marker */}\n          {position && (\n            <Marker position={position} icon={busIcon}>\n              <Popup>\n                <div className=\"driver-popup\">\n                  <strong>Your Location (Bus {busInfo.bus.name})</strong>\n                  <p>You are here.</p>\n                </div>\n              </Popup>\n            </Marker>\n          )}\n\n          {/* Show all stops in the route */}\n          {busInfo && busInfo.route && busInfo.route.map((stop, index) => (\n            <Marker\n              key={stop.id}\n              position={[parseFloat(stop.latitude), parseFloat(stop.longitude)]}\n              icon={index === nextStopIndex ? nextStopIcon : busStopIcon}\n            >\n              <Popup>\n                <div className=\"stop-popup\">\n                  <strong>{stop.name}</strong>\n                  <p>Stop #{index + 1} in route</p>\n                  {index === nextStopIndex && (\n                    <p className=\"next-stop-label\">This is your next stop</p>\n                  )}\n                  <p>\n                    {index < nextStopIndex ? (\n                      <span>Arrived at: {stop.time || \"N/A\"}</span>\n                    ) : index === nextStopIndex ? (\n                      <span>Expected arrival: {stop.time || \"N/A\"}</span>\n                    ) : (\n                      <span>Scheduled for: {stop.time || \"N/A\"}</span>\n                    )}\n                  </p>\n                </div>\n              </Popup>\n            </Marker>\n          ))}\n\n          {/* OSRM routes */}\n          {busInfo && busInfo.route && position && (\n            <OsrmRoutes\n              stops={busInfo.route}\n              currentPosition={position}\n              lastClearedStopIndex={lastClearedStopIndex}\n              nextStopIndex={nextStopIndex}\n            />\n          )}\n\n          {/* Distance updater for next stop */}\n          {position && busInfo && busInfo.nextStop && (\n            <NextStopDistanceUpdater\n              position={position}\n              nextStop={busInfo.nextStop}\n            />\n          )}\n\n          {/* Location button outside map - moved inside MapContainer to fix the context error */}\n          <div className=\"location-button-container\">\n            <button\n              className=\"location-button\"\n              onClick={() => handleCenterMap(position ||\n                (busInfo && busInfo.nextStop ?\n                  [parseFloat(busInfo.nextStop.latitude), parseFloat(busInfo.nextStop.longitude)] :\n                  (busInfo && busInfo.route && busInfo.route.length > 0 ?\n                    [parseFloat(busInfo.route[0].latitude), parseFloat(busInfo.route[0].longitude)] :\n                    [22.3190, 87.3091])))}\n              title={position ? \"Center map on your location\" : \"Center map on route\"}\n            >\n              <i className=\"fas fa-location-arrow\"></i> {position ? \"Your Location\" : \"Center Map\"}\n            </button>\n          </div>\n        </MapContainer>\n\n        {/* Permanent directions panel */}\n        {busInfo && busInfo.route && position && (\n          <PermanentDirections\n            stops={busInfo.route}\n            currentPosition={position}\n            lastClearedStopIndex={lastClearedStopIndex}\n            nextStopIndex={nextStopIndex}\n          />\n        )}\n\n        {/* Bus info panel */}\n        <div className=\"bus-info-panel\">\n          <h3>Bus: {busInfo.bus.name}</h3>\n          {busInfo.nextStop && (\n            <div className=\"next-stop-info\">\n              <p><strong>Next Stop:</strong> {busInfo.nextStop.name}</p>\n              <p><strong>Distance:</strong> <span id=\"next-stop-distance\">Calculating...</span></p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DriverMapScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}