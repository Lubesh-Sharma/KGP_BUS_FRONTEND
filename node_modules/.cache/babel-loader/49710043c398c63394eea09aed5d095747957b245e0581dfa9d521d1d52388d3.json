{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 3 * 1000; // 3 seconds timeout instead of 10\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Completely revised RoutingControl component using the direct approach from HTML example\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading\n}) => {\n  _s();\n  const map = useMap();\n  const routeRef = useRef(null);\n  const animationRef = useRef(null);\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Show loading indicator\n    setIsPathLoading(true);\n\n    // Clear previous route\n    if (routeRef.current) {\n      map.removeControl(routeRef.current);\n      routeRef.current = null;\n    }\n\n    // Clear any animation timeouts\n    if (animationRef.current) {\n      animationRef.current.forEach(timeoutId => clearTimeout(timeoutId));\n      animationRef.current = [];\n    }\n    try {\n      // Direct approach as shown in the HTML example\n      const control = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        lineOptions: {\n          styles: [{\n            color: color,\n            opacity: 0.7,\n            weight: weight\n          }]\n        },\n        createMarker: () => null // No markers\n      });\n\n      // Handle successful route finding\n      control.on('routesfound', function (e) {\n        console.log(\"Route found:\", e.routes[0]);\n        setIsPathLoading(false);\n      });\n\n      // Add to map\n      control.addTo(map);\n      routeRef.current = control;\n\n      // Set a timeout in case routing takes too long\n      const timeoutId = setTimeout(() => {\n        if (setIsPathLoading) {\n          console.log(\"Routing timed out - drawing direct line instead\");\n          map.removeControl(control);\n          drawDirectLine();\n          setIsPathLoading(false);\n        }\n      }, 5000);\n\n      // Clean up function\n      return () => {\n        clearTimeout(timeoutId);\n        if (routeRef.current) {\n          map.removeControl(routeRef.current);\n        }\n        if (animationRef.current) {\n          animationRef.current.forEach(timeoutId => clearTimeout(timeoutId));\n        }\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      drawDirectLine();\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n\n  // Draw a direct line if routing fails\n  const drawDirectLine = () => {\n    if (!map || !startPoint || !endPoint) return;\n    try {\n      const line = L.polyline([[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]], {\n        color: color,\n        weight: weight,\n        opacity: 0.7,\n        dashArray: '5, 10' // Dashed line\n      }).addTo(map);\n\n      // Store reference for cleanup\n      routeRef.current = {\n        _line: line,\n        remove: function () {\n          map.removeLayer(this._line);\n        }\n      };\n    } catch (err) {\n      console.error(\"Error drawing direct line:\", err);\n    }\n  };\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"oL1YJUYGNDoBF5HKPjPN+fGoHd8=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Component to handle map clicks\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst MapClickHandler = ({\n  setCoordinates\n}) => {\n  _s3();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n    }\n  });\n  return null;\n};\n\n// Button to center on user's location\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 9\n  }, this);\n};\n_c4 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s4();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  // Initialize searchMarker with current coordinates or map center\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [directLineFallback, setDirectLineFallback] = useState(false);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Function to clear any existing routes on the map - improved error handling and reliability\n  const clearExistingRoutes = () => {\n    var _mapRef$current;\n    const map = (_mapRef$current = mapRef.current) === null || _mapRef$current === void 0 ? void 0 : _mapRef$current._leaflet_map;\n    if (!map) return;\n    console.log(\"Clearing all existing routes\");\n    try {\n      // First remove any routing containers from the DOM\n      document.querySelectorAll('.leaflet-routing-container').forEach(el => el.remove());\n\n      // Then find and remove all routing layers and polylines\n      map.eachLayer(layer => {\n        // Check if it's a polyline (direct line or route path)\n        if (layer instanceof L.Polyline) {\n          map.removeLayer(layer);\n        }\n      });\n\n      // Also check for and remove any routing controls that might be attached to the map\n      Object.keys(map._layers).forEach(key => {\n        const layer = map._layers[key];\n        if (layer._route || layer._plan || layer.options && layer.options.waypoints) {\n          map.removeLayer(layer);\n        }\n      });\n\n      // Reset state\n      setSelectedStop(null);\n      setDirectLineFallback(false);\n      setIsPathLoading(false);\n    } catch (err) {\n      console.error(\"Error during route clearing:\", err);\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation); // Also update the search marker when user location changes\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      // The API returns { statusCode, data, message } structure\n      if (response.data && response.data.data) {\n        return response.data.data; // Return just the array of bus stops\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops - Fixed error handling\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n\n      // Clear any existing routes before continuing\n      clearExistingRoutes();\n      setError(null);\n      setSearchMarker([lat, lng]);\n\n      // Make sure busStops is an array before processing\n      if (!Array.isArray(busStops) || busStops.length === 0) {\n        setError(\"No bus stops data available\");\n        setSearchResults([]);\n        setHasSearched(true);\n        return;\n      }\n\n      // Calculate distance from specified point to all bus stops\n      const results = busStops.map(stop => {\n        // Skip invalid coordinates\n        if (stop === null || typeof stop !== 'object' || typeof stop.latitude !== 'number' || typeof stop.longitude !== 'number' || isNaN(stop.latitude) || isNaN(stop.longitude)) {\n          return null;\n        }\n\n        // Calculate distance in meters using Haversine formula\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      }).filter(stop => stop !== null); // Remove any null results\n\n      // Sort by distance (closest first)\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n\n      // Center map on search marker\n      setMapCenter([lat, lng]);\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search. Please try again.\");\n    }\n  };\n\n  // Handle click on search result item - Improved with better error handling\n  const handleStopSelect = stop => {\n    try {\n      console.log(\"Stop selected:\", stop);\n\n      // First, explicitly call clearExistingRoutes to remove any existing routes\n      clearExistingRoutes();\n\n      // Set the map center and zoom\n      setMapCenter([stop.latitude, stop.longitude]);\n      setZoom(18);\n\n      // Delay adding the new route to ensure complete cleanup\n      setTimeout(() => {\n        try {\n          // Set the new selected stop\n          setSelectedStop(stop);\n\n          // Open the popup for this marker\n          const marker = markerRefs.current[stop.id];\n          if (marker) {\n            marker.openPopup();\n          }\n        } catch (err) {\n          console.error(\"Error setting selected stop:\", err);\n        }\n      }, 500); // Increased timeout for more reliable clearing\n    } catch (err) {\n      console.error(\"Error in handleStopSelect:\", err);\n    }\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    // Ensure all coordinates are valid numbers\n    if (isNaN(lat1) || isNaN(lon1) || isNaN(lat2) || isNaN(lon2)) {\n      return Infinity; // Return a very large distance for invalid coordinates\n    }\n    try {\n      const R = 6371e3; // Earth's radius in meters\n      const φ1 = lat1 * Math.PI / 180;\n      const φ2 = lat2 * Math.PI / 180;\n      const Δφ = (lat2 - lat1) * Math.PI / 180;\n      const Δλ = (lon2 - lon1) * Math.PI / 180;\n      const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      return R * c; // Distance in meters\n    } catch (error) {\n      console.error(\"Error calculating distance:\", error);\n      return Infinity; // Return a very large distance if calculation fails\n    }\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading route. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }, this), directLineFallback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routing-fail-message\",\n      children: \"Showing direct line to bus stop. Road routing unavailable.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 536,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 573,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 41\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 25\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: ref => {\n          // Store reference to the map for route clearing\n          if (ref) {\n            mapRef.current = {\n              _leaflet_map: ref\n            };\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 628,\n                columnNumber: 67\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 25\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 69\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 638,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 25\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 657,\n                columnNumber: 65\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 25\n        }, this)), searchMarker && selectedStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: searchMarker,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading\n        }, `route-${selectedStop.id}-${Date.now()}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 512,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated component to handle map clicks\n_s4(BusStopSearch, \"HWxoeUUKR4SSS+skJ5X86QqPd08=\");\n_c5 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker\n}) => {\n  _s5();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]); // Update marker immediately\n    }\n  });\n  return null;\n};\n_s5(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c6 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"LocationButton\");\n$RefreshReg$(_c5, \"BusStopSearch\");\n$RefreshReg$(_c6, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","L","axios","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","_s","map","routeRef","animationRef","current","removeControl","forEach","timeoutId","clearTimeout","control","waypoints","latLng","routeWhileDragging","showAlternatives","fitSelectedRoutes","lineOptions","styles","opacity","createMarker","on","log","routes","addTo","setTimeout","drawDirectLine","error","line","polyline","dashArray","_line","remove","err","_c","MapController","center","zoom","_s2","setView","getZoom","_c2","MapClickHandler","setCoordinates","_s3","click","lat","lng","latlng","latitude","toFixed","longitude","_c3","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","BusStopSearch","setUserLocation","_s4","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","coordinates","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","directLineFallback","setDirectLineFallback","mapRef","markerRefs","registerMarker","id","markerRef","clearExistingRoutes","_mapRef$current","_leaflet_map","document","querySelectorAll","el","eachLayer","layer","Polyline","Object","keys","key","_plan","fetchBusStops","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","stop","parseFloat","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","length","results","distance","calculateDistance","filter","sortedResults","sort","a","b","handleStopSelect","marker","openPopup","lat1","lon1","lat2","lon2","Infinity","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","htmlFor","type","onChange","placeholder","index","style","height","width","ref","attribution","url","MapEvents","position","icon","Date","now","_c5","_s5","_c6","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap } from 'react-leaflet';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Configure OSRM routing to load faster - similar to BusTracking.js\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Modify the global routing options\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 3 * 1000; // 3 seconds timeout instead of 10\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix issues with the layer removal\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route && this._route._layers) {\n            originalClearLines.call(this);\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Manual cleanup as fallback\n          if (this._map && this._route) {\n            try {\n              this._map.removeLayer(this._route);\n            } catch (e) {\n              console.warn(\"Also failed with manual cleanup:\", e);\n            }\n          }\n        }\n      };\n    }\n  }\n}\n\n// Completely revised RoutingControl component using the direct approach from HTML example\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading }) => {\n  const map = useMap();\n  const routeRef = useRef(null);\n  const animationRef = useRef(null);\n\n  useEffect(() => {\n    if (!startPoint || !endPoint) return;\n\n    // Show loading indicator\n    setIsPathLoading(true);\n    \n    // Clear previous route\n    if (routeRef.current) {\n      map.removeControl(routeRef.current);\n      routeRef.current = null;\n    }\n\n    // Clear any animation timeouts\n    if (animationRef.current) {\n      animationRef.current.forEach(timeoutId => clearTimeout(timeoutId));\n      animationRef.current = [];\n    }\n\n    try {\n      // Direct approach as shown in the HTML example\n      const control = L.Routing.control({\n        waypoints: [\n          L.latLng(startPoint[0], startPoint[1]),\n          L.latLng(endPoint[0], endPoint[1])\n        ],\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        lineOptions: {\n          styles: [{ color: color, opacity: 0.7, weight: weight }]\n        },\n        createMarker: () => null // No markers\n      });\n\n      // Handle successful route finding\n      control.on('routesfound', function(e) {\n        console.log(\"Route found:\", e.routes[0]);\n        setIsPathLoading(false);\n      });\n\n      // Add to map\n      control.addTo(map);\n      routeRef.current = control;\n\n      // Set a timeout in case routing takes too long\n      const timeoutId = setTimeout(() => {\n        if (setIsPathLoading) {\n          console.log(\"Routing timed out - drawing direct line instead\");\n          map.removeControl(control);\n          drawDirectLine();\n          setIsPathLoading(false);\n        }\n      }, 5000);\n\n      // Clean up function\n      return () => {\n        clearTimeout(timeoutId);\n        if (routeRef.current) {\n          map.removeControl(routeRef.current);\n        }\n        if (animationRef.current) {\n          animationRef.current.forEach(timeoutId => clearTimeout(timeoutId));\n        }\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      drawDirectLine();\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading]);\n\n  // Draw a direct line if routing fails\n  const drawDirectLine = () => {\n    if (!map || !startPoint || !endPoint) return;\n    \n    try {\n      const line = L.polyline(\n        [\n          [startPoint[0], startPoint[1]],\n          [endPoint[0], endPoint[1]]\n        ],\n        {\n          color: color,\n          weight: weight,\n          opacity: 0.7,\n          dashArray: '5, 10' // Dashed line\n        }\n      ).addTo(map);\n      \n      // Store reference for cleanup\n      routeRef.current = {\n        _line: line,\n        remove: function() {\n          map.removeLayer(this._line);\n        }\n      };\n    } catch (err) {\n      console.error(\"Error drawing direct line:\", err);\n    }\n  };\n\n  return null;\n};\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (center) {\n            map.setView(center, zoom || map.getZoom());\n        }\n    }, [map, center, zoom]);\n    \n    return null;\n};\n\n// Component to handle map clicks\nconst MapClickHandler = ({ setCoordinates }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n        }\n    });\n    \n    return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n    return (\n        <button \n            className=\"location-button\" \n            onClick={onClick}\n            disabled={!userLocation}\n            title=\"Center map on your location\"\n        >\n            <i className=\"fas fa-location-arrow\"></i> Your Current Location\n        </button>\n    );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n    const [busStops, setBusStops] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n    const [zoom, setZoom] = useState(15);\n    const [coordinates, setCoordinates] = useState({\n        latitude: '',\n        longitude: ''\n    });\n    // Initialize searchMarker with current coordinates or map center\n    const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n    const [selectedStop, setSelectedStop] = useState(null);\n    const [directLineFallback, setDirectLineFallback] = useState(false);\n    \n    const mapRef = useRef(null);\n    const markerRefs = useRef({});\n    \n    // Register marker references for later access\n    const registerMarker = (id, markerRef) => {\n        if (markerRef) {\n            markerRefs.current[id] = markerRef;\n        }\n    };\n\n    // Function to clear any existing routes on the map - improved error handling and reliability\n    const clearExistingRoutes = () => {\n        const map = mapRef.current?._leaflet_map;\n        if (!map) return;\n        \n        console.log(\"Clearing all existing routes\");\n        \n        try {\n            // First remove any routing containers from the DOM\n            document.querySelectorAll('.leaflet-routing-container').forEach(el => el.remove());\n            \n            // Then find and remove all routing layers and polylines\n            map.eachLayer(layer => {\n              // Check if it's a polyline (direct line or route path)\n              if (layer instanceof L.Polyline) {\n                map.removeLayer(layer);\n              }\n            });\n            \n            // Also check for and remove any routing controls that might be attached to the map\n            Object.keys(map._layers).forEach(key => {\n              const layer = map._layers[key];\n              if (layer._route || layer._plan || (layer.options && layer.options.waypoints)) {\n                map.removeLayer(layer);\n              }\n            });\n            \n            // Reset state\n            setSelectedStop(null);\n            setDirectLineFallback(false);\n            setIsPathLoading(false);\n          } catch (err) {\n            console.error(\"Error during route clearing:\", err);\n          }\n    };\n\n    // Initialize coordinates with user's location as soon as it's available\n    useEffect(() => {\n        if (userLocation) {\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n            setMapCenter(userLocation);\n            setSearchMarker(userLocation); // Also update the search marker when user location changes\n        }\n    }, [userLocation]);\n    \n    // Fetch all bus stops directly from the database\n    const fetchBusStops = async () => {\n        try {\n            console.log('Fetching bus stops from API');\n            const response = await api.get('/bus_stops/getAllBusStops');\n            console.log('Raw API response:', response.data);\n            \n            // Extract the actual bus stops array from the response\n            // The API returns { statusCode, data, message } structure\n            if (response.data && response.data.data) {\n                return response.data.data; // Return just the array of bus stops\n            } else {\n                console.error('Invalid response format:', response.data);\n                return [];\n            }\n        } catch (error) {\n            console.error('Error fetching bus stops from database:', error);\n            throw error;\n        }\n    };\n    \n    // Load bus stops on component mount\n    useEffect(() => {\n        const loadBusStops = async () => {\n            try {\n                setLoading(true);\n                const data = await fetchBusStops();\n                \n                // Ensure data is an array before mapping\n                const busStopsArray = Array.isArray(data) ? data : [];\n                \n                // Clean and format the data\n                const cleanedData = busStopsArray.map(stop => ({\n                    ...stop,\n                    latitude: parseFloat(stop.latitude),\n                    longitude: parseFloat(stop.longitude)\n                }));\n                \n                setBusStops(cleanedData);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error loading bus stops:\", err);\n                setError(\"Failed to load bus stops. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadBusStops();\n    }, []);\n    \n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCoordinates(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    \n    // Center map on user location with maximum zoom\n    const handleCenterOnUser = () => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n            setZoom(19); // Maximum zoom\n\n            // Also update the coordinate inputs to match user location\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n        }\n    };\n    \n    // Function to search for nearby bus stops - Fixed error handling\n    const handleSearch = () => {\n        try {\n            const lat = parseFloat(coordinates.latitude);\n            const lng = parseFloat(coordinates.longitude);\n            \n            // Validate coordinates\n            if (isNaN(lat) || isNaN(lng) || \n                lat < -90 || lat > 90 || \n                lng < -180 || lng > 180) {\n                setError(\"Please enter valid coordinates\");\n                return;\n            }\n            \n            // Clear any existing routes before continuing\n            clearExistingRoutes();\n            \n            setError(null);\n            setSearchMarker([lat, lng]);\n            \n            // Make sure busStops is an array before processing\n            if (!Array.isArray(busStops) || busStops.length === 0) {\n                setError(\"No bus stops data available\");\n                setSearchResults([]);\n                setHasSearched(true);\n                return;\n            }\n            \n            // Calculate distance from specified point to all bus stops\n            const results = busStops.map(stop => {\n                // Skip invalid coordinates\n                if (stop === null || typeof stop !== 'object' || \n                    typeof stop.latitude !== 'number' || \n                    typeof stop.longitude !== 'number' || \n                    isNaN(stop.latitude) || isNaN(stop.longitude)) {\n                    return null;\n                }\n                \n                // Calculate distance in meters using Haversine formula\n                const distance = calculateDistance(\n                    lat, lng,\n                    stop.latitude, stop.longitude\n                );\n                \n                return {\n                    ...stop,\n                    distance: distance\n                };\n            }).filter(stop => stop !== null); // Remove any null results\n            \n            // Sort by distance (closest first)\n            const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n            setSearchResults(sortedResults);\n            setHasSearched(true);\n            \n            // Center map on search marker\n            setMapCenter([lat, lng]);\n            setZoom(16);\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            setError(\"An error occurred during search. Please try again.\");\n        }\n    };\n    \n    // Handle click on search result item - Improved with better error handling\n    const handleStopSelect = (stop) => {\n        try {\n            console.log(\"Stop selected:\", stop);\n            \n            // First, explicitly call clearExistingRoutes to remove any existing routes\n            clearExistingRoutes();\n            \n            // Set the map center and zoom\n            setMapCenter([stop.latitude, stop.longitude]);\n            setZoom(18);\n            \n            // Delay adding the new route to ensure complete cleanup\n            setTimeout(() => {\n                try {\n                    // Set the new selected stop\n                    setSelectedStop(stop);\n                    \n                    // Open the popup for this marker\n                    const marker = markerRefs.current[stop.id];\n                    if (marker) {\n                        marker.openPopup();\n                    }\n                } catch (err) {\n                    console.error(\"Error setting selected stop:\", err);\n                }\n            }, 500); // Increased timeout for more reliable clearing\n        } catch (err) {\n            console.error(\"Error in handleStopSelect:\", err);\n        }\n    };\n\n    // Calculate distance between two coordinates using Haversine formula\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        // Ensure all coordinates are valid numbers\n        if (isNaN(lat1) || isNaN(lon1) || isNaN(lat2) || isNaN(lon2)) {\n            return Infinity; // Return a very large distance for invalid coordinates\n        }\n        \n        try {\n            const R = 6371e3; // Earth's radius in meters\n            const φ1 = lat1 * Math.PI / 180;\n            const φ2 = lat2 * Math.PI / 180;\n            const Δφ = (lat2 - lat1) * Math.PI / 180;\n            const Δλ = (lon2 - lon1) * Math.PI / 180;\n            \n            const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n                    Math.cos(φ1) * Math.cos(φ2) *\n                    Math.sin(Δλ/2) * Math.sin(Δλ/2);\n            const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n            \n            return R * c; // Distance in meters\n        } catch (error) {\n            console.error(\"Error calculating distance:\", error);\n            return Infinity; // Return a very large distance if calculation fails\n        }\n    };\n    \n    // Format distance for display\n    const formatDistance = (meters) => {\n        if (meters < 1000) {\n            return `${Math.round(meters)} meters`;\n        } else {\n            return `${(meters / 1000).toFixed(2)} km`;\n        }\n    };\n    \n    return (\n        <div className=\"bus-stop-search\">\n            {/* Full-page loading overlay for OSRM loading */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Loading route. Please wait...</div>\n                </div>\n            )}\n            \n            {/* Direct line message when OSRM fails */}\n            {directLineFallback && (\n                <div className=\"routing-fail-message\">\n                    Showing direct line to bus stop. Road routing unavailable.\n                </div>\n            )}\n            \n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Search Bus Stops</h2>\n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"latitude\">Latitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"latitude\" \n                                name=\"latitude\" \n                                value={coordinates.latitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 22.3190\"\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"longitude\">Longitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"longitude\" \n                                name=\"longitude\" \n                                value={coordinates.longitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 87.3091\"\n                            />\n                        </div>\n                        \n                        <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n                        \n                        <button \n                            className=\"search-btn\"\n                            onClick={handleSearch}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"location-panel-bottom\">\n                    {hasSearched && searchResults.length > 0 && (\n                        <div className=\"search-results\">\n                            <h3>Nearest Bus Stops</h3>\n                            <div className=\"results-list\">\n                                {searchResults.map((stop, index) => (\n                                    <div \n                                        key={stop.id} \n                                        className=\"result-item\"\n                                        onClick={() => handleStopSelect(stop)}\n                                    >\n                                        <div className=\"result-index\">{index + 1}</div>\n                                        <div className=\"result-details\">\n                                            <h4>{stop.name}</h4>\n                                            <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                                            <p className=\"coordinates\">\n                                                {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                    \n                    {hasSearched && searchResults.length === 0 && (\n                        <div className=\"no-results\">\n                            <p>No bus stops found near the selected location.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            \n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={zoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={(ref) => {\n                        // Store reference to the map for route clearing\n                        if (ref) {\n                            mapRef.current = { _leaflet_map: ref };\n                        }\n                    }}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <MapController center={mapCenter} zoom={zoom} />\n                    <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} />\n                    \n                    {/* Display user location */}\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Your Location</strong><br />\n                                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Always display search marker */}\n                    {searchMarker && (\n                        <Marker position={searchMarker} icon={searchMarkerIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Search Location</strong><br />\n                                    {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Display all bus stops */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={busStopIcon}\n                            ref={(ref) => registerMarker(stop.id, ref)}\n                        >\n                            <Popup>\n                                <div>\n                                    <strong>{stop.name}</strong><br />\n                                    {searchMarker && (\n                                        <span>\n                                            Distance: {formatDistance(\n                                                calculateDistance(\n                                                    searchMarker[0], searchMarker[1],\n                                                    stop.latitude, stop.longitude\n                                                )\n                                            )}\n                                        </span>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Add routing control for selected bus stop with forced re-creation and a longer random key */}\n                    {searchMarker && selectedStop && (\n                        <RoutingControl\n                            key={`route-${selectedStop.id}-${Date.now()}`}\n                            startPoint={searchMarker}\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={4}\n                            setIsPathLoading={setIsPathLoading}\n                        />\n                    )}\n                    \n                    {/* Button inside map container for centering on user location */}\n                    <div className=\"map-controls\">\n                        <LocationButton\n                            userLocation={userLocation}\n                            onClick={handleCenterOnUser}\n                        />\n                    </div>\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\n// Updated component to handle map clicks\nconst MapEvents = ({ setCoordinates, setSearchMarker }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n            setSearchMarker([lat, lng]); // Update marker immediately\n        }\n    });\n    \n    return null;\n};\n\nexport default BusStopSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}