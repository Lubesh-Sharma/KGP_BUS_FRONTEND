{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n\n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Component that draws a simple straight line between two points as fallback\nconst DirectPathLine = ({\n  startPoint,\n  endPoint,\n  color = '#ff6b6b',\n  weight = 3\n}) => {\n  if (!startPoint || !endPoint) return null;\n  return /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: [[startPoint[0], startPoint[1]], [endPoint[0], endPoint[1]]],\n    color: color,\n    weight: weight,\n    dashArray: \"5, 10\",\n    opacity: 0.7\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n// Create a utility function to safely remove a routing control\n_c = DirectPathLine;\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n  try {\n    // First, clear any routes to avoid the removeLayer error\n    if (routingControl._router) {\n      routingControl._router._routes = [];\n    }\n\n    // Then, if the control has a router with a route, clear it manually\n    if (routingControl._router && routingControl._router._currentRoute) {\n      routingControl._router._currentRoute = null;\n    }\n\n    // Next, if the control has a line with a route, remove it properly\n    if (routingControl._line && routingControl._line._route) {\n      try {\n        if (routingControl._line._map && routingControl._line._route) {\n          routingControl._line._route = null;\n        }\n      } catch (e) {\n        console.warn(\"Error clearing line route:\", e);\n      }\n    }\n\n    // Finally, remove the control from the map\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Component to handle routing between points with improved performance\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading,\n  onRoutingFailed\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const animationMarkerRef = useRef(null);\n  const [routingFailed, setRoutingFailed] = useState(false);\n\n  // Handle cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (routingControlRef.current && map) {\n        safelyRemoveRoutingControl(routingControlRef.current, map);\n        routingControlRef.current = null;\n      }\n\n      // Remove animation marker if exists\n      if (animationMarkerRef.current && map) {\n        map.removeLayer(animationMarkerRef.current);\n        animationMarkerRef.current = null;\n      }\n    };\n  }, [map]);\n  useEffect(() => {\n    console.log(\"Creating route with startPoint:\", startPoint, \"endPoint:\", endPoint);\n\n    // Clear previous routing control regardless of new points\n    if (routingControlRef.current && map) {\n      safelyRemoveRoutingControl(routingControlRef.current, map);\n      routingControlRef.current = null;\n    }\n\n    // Clear previous animation marker\n    if (animationMarkerRef.current && map) {\n      map.removeLayer(animationMarkerRef.current);\n      animationMarkerRef.current = null;\n    }\n\n    // Reset routing failed state for new route attempt\n    setRoutingFailed(false);\n\n    // If we don't have both points, don't create a new routing control\n    if (!startPoint || !endPoint) {\n      setIsPathLoading(false);\n      return;\n    }\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n    try {\n      // Create waypoints from the startPoint and endPoint\n      const waypoints = [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])];\n      console.log(\"Creating direct Leaflet routing with waypoints:\", waypoints);\n\n      // Create animation marker (will be visible during route animation)\n      const animIcon = L.divIcon({\n        html: '<div class=\"pulse-marker\"></div>',\n        className: '',\n        iconSize: [12, 12],\n        iconAnchor: [6, 6]\n      });\n\n      // Create the marker but don't add to map yet\n      animationMarkerRef.current = L.marker([startPoint[0], startPoint[1]], {\n        icon: animIcon,\n        zIndexOffset: 1000 // Ensure it's above other markers\n      });\n\n      // Create the routing control with direct Leaflet routing\n      const routingControl = L.Routing.control({\n        waypoints: waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        show: false,\n        // Don't show the routing interface\n        lineOptions: {\n          styles: [{\n            color: color,\n            opacity: 0.7,\n            weight: weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10\n        },\n        createMarker: () => null,\n        // No markers from routing\n        addWaypoints: false\n      });\n\n      // Handle successful route finding with animation\n      routingControl.on('routesfound', function (e) {\n        console.log(\"Routes found:\", e.routes.length);\n        setIsPathLoading(false);\n\n        // If we have route coordinates, animate a marker along the path\n        if (e.routes && e.routes.length > 0 && e.routes[0].coordinates) {\n          const coordinates = e.routes[0].coordinates;\n          console.log(\"Animating along path with\", coordinates.length, \"points\");\n\n          // Add the animation marker to the map now that we have a route\n          animationMarkerRef.current.addTo(map);\n\n          // Animate the marker along the route\n          coordinates.forEach((coord, index) => {\n            setTimeout(() => {\n              if (animationMarkerRef.current) {\n                animationMarkerRef.current.setLatLng([coord.lat, coord.lng]);\n              }\n            }, 50 * index); // Speed up animation (50ms per point)\n          });\n\n          // Remove marker after animation completes\n          setTimeout(() => {\n            if (animationMarkerRef.current && map) {\n              map.removeLayer(animationMarkerRef.current);\n              animationMarkerRef.current = null;\n            }\n          }, 50 * coordinates.length + 500);\n        }\n      });\n\n      // Handle routing errors\n      routingControl.on('routingerror', function (e) {\n        console.warn(\"Routing error:\", e);\n        setRoutingFailed(true);\n        if (onRoutingFailed) onRoutingFailed();\n        setIsPathLoading(false);\n      });\n\n      // Add to map with a slight delay to ensure map is ready\n      setTimeout(() => {\n        try {\n          if (map && !routingFailed) {\n            routingControl.addTo(map);\n            console.log(\"Routing control added to map\");\n            routingControlRef.current = routingControl;\n          }\n        } catch (addError) {\n          console.error(\"Error adding routing control:\", addError);\n          setRoutingFailed(true);\n          if (onRoutingFailed) onRoutingFailed();\n          setIsPathLoading(false);\n        }\n      }, 100);\n\n      // Add a timeout in case routing takes too long\n      const timeout = setTimeout(() => {\n        if (!routingFailed) {\n          console.warn(\"Routing timeout - falling back to direct path\");\n          setRoutingFailed(true);\n          if (onRoutingFailed) onRoutingFailed();\n          setIsPathLoading(false);\n        }\n      }, 8000); // 8 second timeout\n\n      return () => {\n        clearTimeout(timeout);\n        // Clean up safely\n        if (routingControlRef.current && map) {\n          safelyRemoveRoutingControl(routingControlRef.current, map);\n          routingControlRef.current = null;\n        }\n        // Remove animation marker\n        if (animationMarkerRef.current && map) {\n          map.removeLayer(animationMarkerRef.current);\n          animationMarkerRef.current = null;\n        }\n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      setRoutingFailed(true);\n      if (onRoutingFailed) onRoutingFailed();\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"7RVcnrJ4AuHyanegD9dLN4Cm3ZU=\", false, function () {\n  return [useMap];\n});\n_c2 = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Component to handle map clicks\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c3 = MapController;\nconst MapClickHandler = ({\n  setCoordinates\n}) => {\n  _s3();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n    }\n  });\n  return null;\n};\n\n// Button to center on user's location\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c4 = MapClickHandler;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 9\n  }, this);\n};\n_c5 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s4();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  // Initialize searchMarker with current coordinates or map center\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [routingKey, setRoutingKey] = useState(0);\n  const [showDirectPath, setShowDirectPath] = useState(false);\n  const [directPathKey, setDirectPathKey] = useState(0);\n  const [routingFailMessage, setRoutingFailMessage] = useState(null);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation); // Also update the search marker when user location changes\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      // The API returns { statusCode, data, message } structure\n      if (response.data && response.data.data) {\n        return response.data.data; // Return just the array of bus stops\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      setError(null);\n      setSearchMarker([lat, lng]);\n\n      // Clear previous routes by clearing selected stop and changing routing key\n      setSelectedStop(null);\n      setRoutingKey(prevKey => prevKey + 1);\n      setShowDirectPath(false);\n      setDirectPathKey(prevKey => prevKey + 1);\n      setRoutingFailMessage(null);\n\n      // Clear routes cache when performing a new search\n      // This helps avoid memory issues with too many cached routes\n      if (typeof routeCache !== 'undefined' && routeCache.size > 20) {\n        routeCache.clear();\n      }\n\n      // Calculate distance from specified point to all bus stops\n      const results = busStops.map(stop => {\n        // Calculate distance in meters using Haversine formula\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      });\n\n      // Sort by distance (closest first)\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n\n      // Center map on search marker\n      setMapCenter([lat, lng]);\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n\n  // Handle click on search result item\n  const handleStopSelect = stop => {\n    // Set the map center and zoom\n    setMapCenter([stop.latitude, stop.longitude]);\n    setZoom(18);\n\n    // Clear previous path and set the new selected stop\n    setSelectedStop(stop);\n    setRoutingKey(prevKey => prevKey + 1);\n    setShowDirectPath(false);\n    setDirectPathKey(prevKey => prevKey + 1);\n    setRoutingFailMessage(null);\n\n    // Open the popup for this marker\n    const marker = markerRefs.current[stop.id];\n    if (marker) {\n      marker.openPopup();\n    }\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon1 - lon2) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in meters\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n  useEffect(() => {\n    // Ensure loading screen doesn't stay forever - reduce timeout\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n      }, 7000); // Reduced maximum timeout to 7 seconds\n\n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading]);\n\n  // Pre-configure routing machine on component mount for faster first load\n  useEffect(() => {\n    // Configure global Leaflet and Routing Machine settings \n    if (typeof L !== 'undefined') {\n      // Add safety methods to handle the removeLayer error\n      const originalRemoveLayer = L.Map.prototype.removeLayer;\n      L.Map.prototype.removeLayer = function (layer) {\n        if (!layer) {\n          console.warn(\"Attempted to remove null layer\");\n          return this;\n        }\n        if (!this.hasLayer(layer)) {\n          return this;\n        }\n        try {\n          return originalRemoveLayer.call(this, layer);\n        } catch (e) {\n          console.warn(\"Protected from removeLayer error:\", e);\n          return this;\n        }\n      };\n\n      // Prevent errors in the Layer prototype\n      const originalRemoveFrom = L.Layer.prototype.removeFrom;\n      L.Layer.prototype.removeFrom = function (map) {\n        if (!map) return this;\n        try {\n          return originalRemoveFrom.call(this, map);\n        } catch (e) {\n          console.warn(\"Protected from removeFrom error:\", e);\n          return this;\n        }\n      };\n      if (L.Routing) {\n        // Ensure timeout is set properly\n        L.Routing.timeout = 30 * 1000;\n\n        // Disable unnecessary features\n        if (L.Routing.Control.prototype.options) {\n          L.Routing.Control.prototype.options.showAlternatives = false;\n          L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n          L.Routing.Control.prototype.options.show = false;\n        }\n\n        // No need for OSRM warmup - using Leaflet's built-in routing\n      }\n    }\n\n    // Initialize an empty map of previously used routes\n    window._routeCache = new Map();\n  }, []);\n\n  // Clear any routes when component unmounts\n  useEffect(() => {\n    return () => {\n      // Clear any cached data\n      if (window._routeCache) {\n        window._routeCache.clear();\n      }\n    };\n  }, []);\n\n  // Handle routing failure\n  const handleRoutingFailed = () => {\n    setShowDirectPath(true);\n    setDirectPathKey(prevKey => prevKey + 1);\n    setRoutingFailMessage(\"OSRM route not available. Showing direct path instead.\");\n\n    // Auto-hide the message after 5 seconds\n    setTimeout(() => {\n      setRoutingFailMessage(null);\n    }, 5000);\n  };\n  useEffect(() => {\n    // Ensure loading screen doesn't stay forever\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n        // If still loading after timeout, show direct path\n        if (selectedStop && userLocation) {\n          handleRoutingFailed();\n        }\n      }, 5000); // Further reduced maximum timeout to 5 seconds\n\n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading, selectedStop, userLocation]);\n\n  // Enhanced cleanup when component unmounts\n  useEffect(() => {\n    return () => {\n      // Clear any pending routing operations\n      if (routeCache.size > 0) {\n        routeCache.clear();\n      }\n\n      // Reset all states to prevent memory leaks\n      setSelectedStop(null);\n      setShowDirectPath(false);\n      setIsPathLoading(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 716,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading route. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 17\n    }, this), routingFailMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routing-fail-message\",\n      children: routingFailMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 723,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 730,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 735,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 783,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 784,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 785,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 41\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 776,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 25\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 728,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 816,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 67\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 822,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 821,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 820,\n          columnNumber: 25\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 835,\n                columnNumber: 69\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 25\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 852,\n                columnNumber: 65\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 25\n        }, this)), searchMarker && selectedStop && !showDirectPath && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: searchMarker // Using search marker as start point\n          ,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading,\n          onRoutingFailed: handleRoutingFailed\n        }, `route-${routingKey}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 870,\n          columnNumber: 25\n        }, this), searchMarker && selectedStop && showDirectPath && /*#__PURE__*/_jsxDEV(DirectPathLine, {\n          startPoint: searchMarker // Using search marker as start point\n          ,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 3\n        }, `direct-${directPathKey}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 883,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 894,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 803,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 712,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated component to handle map clicks\n_s4(BusStopSearch, \"irYZ9wM66p0Lgax08fr9sdQgU38=\");\n_c6 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker\n}) => {\n  _s5();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]); // Update marker immediately\n    }\n  });\n  return null;\n};\n_s5(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c7 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"DirectPathLine\");\n$RefreshReg$(_c2, \"RoutingControl\");\n$RefreshReg$(_c3, \"MapController\");\n$RefreshReg$(_c4, \"MapClickHandler\");\n$RefreshReg$(_c5, \"LocationButton\");\n$RefreshReg$(_c6, \"BusStopSearch\");\n$RefreshReg$(_c7, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","Polyline","L","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","Control","showAlternatives","useZoomParameter","routeWhileDragging","addWaypoints","waypoints","createMarker","geocoder","fitSelectedRoutes","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","routeCache","Map","getRouteCacheKey","start","end","DirectPathLine","startPoint","endPoint","color","weight","positions","dashArray","opacity","fileName","_jsxFileName","lineNumber","columnNumber","_c","safelyRemoveRoutingControl","routingControl","map","_router","_routes","_currentRoute","_line","removeControl","error","RoutingControl","setIsPathLoading","onRoutingFailed","_s","routingControlRef","animationMarkerRef","routingFailed","setRoutingFailed","current","log","latLng","animIcon","divIcon","html","className","marker","icon","zIndexOffset","control","show","lineOptions","styles","extendToWaypoints","missingRouteTolerance","on","routes","length","coordinates","addTo","forEach","coord","index","setTimeout","setLatLng","lat","lng","addError","clearTimeout","_c2","MapController","center","zoom","_s2","setView","getZoom","_c3","MapClickHandler","setCoordinates","_s3","click","latlng","latitude","toFixed","longitude","_c4","LocationButton","userLocation","onClick","disabled","title","children","_c5","BusStopSearch","setUserLocation","_s4","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","routingKey","setRoutingKey","showDirectPath","setShowDirectPath","directPathKey","setDirectPathKey","routingFailMessage","setRoutingFailMessage","mapRef","markerRefs","registerMarker","id","markerRef","fetchBusStops","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","stop","parseFloat","err","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","prevKey","size","clear","results","distance","calculateDistance","sortedResults","sort","a","b","handleStopSelect","openPopup","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","originalRemoveLayer","layer","hasLayer","originalRemoveFrom","Layer","removeFrom","window","_routeCache","handleRoutingFailed","htmlFor","type","onChange","placeholder","style","height","width","ref","attribution","url","MapEvents","position","_c6","_s5","_c7","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n    \n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Component that draws a simple straight line between two points as fallback\nconst DirectPathLine = ({ startPoint, endPoint, color = '#ff6b6b', weight = 3 }) => {\n  if (!startPoint || !endPoint) return null;\n\n  return (\n    <Polyline \n      positions={[\n        [startPoint[0], startPoint[1]],\n        [endPoint[0], endPoint[1]]\n      ]}\n      color={color}\n      weight={weight}\n      dashArray=\"5, 10\"\n      opacity={0.7}\n    />\n  );\n};\n\n// Create a utility function to safely remove a routing control\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n\n  try {\n    // First, clear any routes to avoid the removeLayer error\n    if (routingControl._router) {\n      routingControl._router._routes = [];\n    }\n    \n    // Then, if the control has a router with a route, clear it manually\n    if (routingControl._router && routingControl._router._currentRoute) {\n      routingControl._router._currentRoute = null;\n    }\n    \n    // Next, if the control has a line with a route, remove it properly\n    if (routingControl._line && routingControl._line._route) {\n      try {\n        if (routingControl._line._map && routingControl._line._route) {\n          routingControl._line._route = null;\n        }\n      } catch (e) {\n        console.warn(\"Error clearing line route:\", e);\n      }\n    }\n    \n    // Finally, remove the control from the map\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Component to handle routing between points with improved performance\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading, onRoutingFailed }) => {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  const animationMarkerRef = useRef(null);\n  const [routingFailed, setRoutingFailed] = useState(false);\n  \n  // Handle cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (routingControlRef.current && map) {\n        safelyRemoveRoutingControl(routingControlRef.current, map);\n        routingControlRef.current = null;\n      }\n      \n      // Remove animation marker if exists\n      if (animationMarkerRef.current && map) {\n        map.removeLayer(animationMarkerRef.current);\n        animationMarkerRef.current = null;\n      }\n    };\n  }, [map]);\n  \n  useEffect(() => {\n    console.log(\"Creating route with startPoint:\", startPoint, \"endPoint:\", endPoint);\n    \n    // Clear previous routing control regardless of new points\n    if (routingControlRef.current && map) {\n      safelyRemoveRoutingControl(routingControlRef.current, map);\n      routingControlRef.current = null;\n    }\n    \n    // Clear previous animation marker\n    if (animationMarkerRef.current && map) {\n      map.removeLayer(animationMarkerRef.current);\n      animationMarkerRef.current = null;\n    }\n\n    // Reset routing failed state for new route attempt\n    setRoutingFailed(false);\n\n    // If we don't have both points, don't create a new routing control\n    if (!startPoint || !endPoint) {\n      setIsPathLoading(false);\n      return;\n    }\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    try {\n      // Create waypoints from the startPoint and endPoint\n      const waypoints = [\n        L.latLng(startPoint[0], startPoint[1]),\n        L.latLng(endPoint[0], endPoint[1])\n      ];\n      \n      console.log(\"Creating direct Leaflet routing with waypoints:\", waypoints);\n\n      // Create animation marker (will be visible during route animation)\n      const animIcon = L.divIcon({\n        html: '<div class=\"pulse-marker\"></div>',\n        className: '',\n        iconSize: [12, 12],\n        iconAnchor: [6, 6]\n      });\n      \n      // Create the marker but don't add to map yet\n      animationMarkerRef.current = L.marker([startPoint[0], startPoint[1]], {\n        icon: animIcon,\n        zIndexOffset: 1000 // Ensure it's above other markers\n      });\n\n      // Create the routing control with direct Leaflet routing\n      const routingControl = L.Routing.control({\n        waypoints: waypoints,\n        routeWhileDragging: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        show: false, // Don't show the routing interface\n        lineOptions: {\n          styles: [{ color: color, opacity: 0.7, weight: weight }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10\n        },\n        createMarker: () => null, // No markers from routing\n        addWaypoints: false\n      });\n\n      // Handle successful route finding with animation\n      routingControl.on('routesfound', function(e) {\n        console.log(\"Routes found:\", e.routes.length);\n        setIsPathLoading(false);\n        \n        // If we have route coordinates, animate a marker along the path\n        if (e.routes && e.routes.length > 0 && e.routes[0].coordinates) {\n          const coordinates = e.routes[0].coordinates;\n          console.log(\"Animating along path with\", coordinates.length, \"points\");\n          \n          // Add the animation marker to the map now that we have a route\n          animationMarkerRef.current.addTo(map);\n          \n          // Animate the marker along the route\n          coordinates.forEach((coord, index) => {\n            setTimeout(() => {\n              if (animationMarkerRef.current) {\n                animationMarkerRef.current.setLatLng([coord.lat, coord.lng]);\n              }\n            }, 50 * index); // Speed up animation (50ms per point)\n          });\n          \n          // Remove marker after animation completes\n          setTimeout(() => {\n            if (animationMarkerRef.current && map) {\n              map.removeLayer(animationMarkerRef.current);\n              animationMarkerRef.current = null;\n            }\n          }, 50 * coordinates.length + 500);\n        }\n      });\n\n      // Handle routing errors\n      routingControl.on('routingerror', function(e) {\n        console.warn(\"Routing error:\", e);\n        setRoutingFailed(true);\n        if (onRoutingFailed) onRoutingFailed();\n        setIsPathLoading(false);\n      });\n\n      // Add to map with a slight delay to ensure map is ready\n      setTimeout(() => {\n        try {\n          if (map && !routingFailed) {\n            routingControl.addTo(map);\n            console.log(\"Routing control added to map\");\n            routingControlRef.current = routingControl;\n          }\n        } catch (addError) {\n          console.error(\"Error adding routing control:\", addError);\n          setRoutingFailed(true);\n          if (onRoutingFailed) onRoutingFailed();\n          setIsPathLoading(false);\n        }\n      }, 100);\n\n      // Add a timeout in case routing takes too long\n      const timeout = setTimeout(() => {\n        if (!routingFailed) {\n          console.warn(\"Routing timeout - falling back to direct path\");\n          setRoutingFailed(true);\n          if (onRoutingFailed) onRoutingFailed();\n          setIsPathLoading(false);\n        }\n      }, 8000); // 8 second timeout\n\n      return () => {\n        clearTimeout(timeout);\n        // Clean up safely\n        if (routingControlRef.current && map) {\n          safelyRemoveRoutingControl(routingControlRef.current, map);\n          routingControlRef.current = null;\n        }\n        // Remove animation marker\n        if (animationMarkerRef.current && map) {\n          map.removeLayer(animationMarkerRef.current);\n          animationMarkerRef.current = null;\n        }\n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      setRoutingFailed(true);\n      if (onRoutingFailed) onRoutingFailed();\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n\n  return null;\n};\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (center) {\n            map.setView(center, zoom || map.getZoom());\n        }\n    }, [map, center, zoom]);\n    \n    return null;\n};\n\n// Component to handle map clicks\nconst MapClickHandler = ({ setCoordinates }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n        }\n    });\n    \n    return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n    return (\n        <button \n            className=\"location-button\" \n            onClick={onClick}\n            disabled={!userLocation}\n            title=\"Center map on your location\"\n        >\n            <i className=\"fas fa-location-arrow\"></i> Your Current Location\n        </button>\n    );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n    const [busStops, setBusStops] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n    const [zoom, setZoom] = useState(15);\n    const [coordinates, setCoordinates] = useState({\n        latitude: '',\n        longitude: ''\n    });\n    // Initialize searchMarker with current coordinates or map center\n    const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n    const [selectedStop, setSelectedStop] = useState(null);\n    const [routingKey, setRoutingKey] = useState(0);\n    const [showDirectPath, setShowDirectPath] = useState(false);\n    const [directPathKey, setDirectPathKey] = useState(0);\n    const [routingFailMessage, setRoutingFailMessage] = useState(null);\n    \n    const mapRef = useRef(null);\n    const markerRefs = useRef({});\n    \n    // Register marker references for later access\n    const registerMarker = (id, markerRef) => {\n        if (markerRef) {\n            markerRefs.current[id] = markerRef;\n        }\n    };\n\n    // Initialize coordinates with user's location as soon as it's available\n    useEffect(() => {\n        if (userLocation) {\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n            setMapCenter(userLocation);\n            setSearchMarker(userLocation); // Also update the search marker when user location changes\n        }\n    }, [userLocation]);\n    \n    // Fetch all bus stops directly from the database\n    const fetchBusStops = async () => {\n        try {\n            console.log('Fetching bus stops from API');\n            const response = await api.get('/bus_stops/getAllBusStops');\n            console.log('Raw API response:', response.data);\n            \n            // Extract the actual bus stops array from the response\n            // The API returns { statusCode, data, message } structure\n            if (response.data && response.data.data) {\n                return response.data.data; // Return just the array of bus stops\n            } else {\n                console.error('Invalid response format:', response.data);\n                return [];\n            }\n        } catch (error) {\n            console.error('Error fetching bus stops from database:', error);\n            throw error;\n        }\n    };\n    \n    // Load bus stops on component mount\n    useEffect(() => {\n        const loadBusStops = async () => {\n            try {\n                setLoading(true);\n                const data = await fetchBusStops();\n                \n                // Ensure data is an array before mapping\n                const busStopsArray = Array.isArray(data) ? data : [];\n                \n                // Clean and format the data\n                const cleanedData = busStopsArray.map(stop => ({\n                    ...stop,\n                    latitude: parseFloat(stop.latitude),\n                    longitude: parseFloat(stop.longitude)\n                }));\n                \n                setBusStops(cleanedData);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error loading bus stops:\", err);\n                setError(\"Failed to load bus stops. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadBusStops();\n    }, []);\n    \n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCoordinates(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    \n    // Center map on user location with maximum zoom\n    const handleCenterOnUser = () => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n            setZoom(19); // Maximum zoom\n\n            // Also update the coordinate inputs to match user location\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n        }\n    };\n    \n    // Function to search for nearby bus stops\n    const handleSearch = () => {\n        try {\n            const lat = parseFloat(coordinates.latitude);\n            const lng = parseFloat(coordinates.longitude);\n            \n            // Validate coordinates\n            if (isNaN(lat) || isNaN(lng) || \n                lat < -90 || lat > 90 || \n                lng < -180 || lng > 180) {\n                setError(\"Please enter valid coordinates\");\n                return;\n            }\n            \n            setError(null);\n            setSearchMarker([lat, lng]);\n            \n            // Clear previous routes by clearing selected stop and changing routing key\n            setSelectedStop(null);\n            setRoutingKey(prevKey => prevKey + 1);\n            setShowDirectPath(false);\n            setDirectPathKey(prevKey => prevKey + 1);\n            setRoutingFailMessage(null);\n            \n            // Clear routes cache when performing a new search\n            // This helps avoid memory issues with too many cached routes\n            if (typeof routeCache !== 'undefined' && routeCache.size > 20) {\n                routeCache.clear();\n            }\n            \n            // Calculate distance from specified point to all bus stops\n            const results = busStops.map(stop => {\n                // Calculate distance in meters using Haversine formula\n                const distance = calculateDistance(\n                    lat, lng,\n                    stop.latitude, stop.longitude\n                );\n                \n                return {\n                    ...stop,\n                    distance: distance\n                };\n            });\n            \n            // Sort by distance (closest first)\n            const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n            setSearchResults(sortedResults);\n            setHasSearched(true);\n            \n            // Center map on search marker\n            setMapCenter([lat, lng]);\n            setZoom(16);\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            setError(\"An error occurred during search\");\n        }\n    };\n    \n    // Handle click on search result item\n    const handleStopSelect = (stop) => {\n        // Set the map center and zoom\n        setMapCenter([stop.latitude, stop.longitude]);\n        setZoom(18);\n        \n        // Clear previous path and set the new selected stop\n        setSelectedStop(stop);\n        setRoutingKey(prevKey => prevKey + 1);\n        setShowDirectPath(false);\n        setDirectPathKey(prevKey => prevKey + 1);\n        setRoutingFailMessage(null);\n        \n        // Open the popup for this marker\n        const marker = markerRefs.current[stop.id];\n        if (marker) {\n            marker.openPopup();\n        }\n    };\n    \n    // Calculate distance between two coordinates using Haversine formula\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        const R = 6371e3; // Earth's radius in meters\n        const φ1 = lat1 * Math.PI / 180;\n        const φ2 = lat2 * Math.PI / 180;\n        const Δφ = (lat2 - lat1) * Math.PI / 180;\n        const Δλ = (lon1 - lon2) * Math.PI / 180;\n        \n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n                Math.cos(φ1) * Math.cos(φ2) *\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n        \n        return R * c; // Distance in meters\n    };\n    \n    // Format distance for display\n    const formatDistance = (meters) => {\n        if (meters < 1000) {\n            return `${Math.round(meters)} meters`;\n        } else {\n            return `${(meters / 1000).toFixed(2)} km`;\n        }\n    };\n    \n    useEffect(() => {\n        // Ensure loading screen doesn't stay forever - reduce timeout\n        if (isPathLoading) {\n            const timeout = setTimeout(() => {\n                setIsPathLoading(false);\n            }, 7000); // Reduced maximum timeout to 7 seconds\n            \n            return () => clearTimeout(timeout);\n        }\n    }, [isPathLoading]);\n    \n    // Pre-configure routing machine on component mount for faster first load\n    useEffect(() => {\n        // Configure global Leaflet and Routing Machine settings \n        if (typeof L !== 'undefined') {\n            // Add safety methods to handle the removeLayer error\n            const originalRemoveLayer = L.Map.prototype.removeLayer;\n            L.Map.prototype.removeLayer = function(layer) {\n                if (!layer) {\n                    console.warn(\"Attempted to remove null layer\");\n                    return this;\n                }\n                if (!this.hasLayer(layer)) {\n                    return this;\n                }\n                try {\n                    return originalRemoveLayer.call(this, layer);\n                } catch (e) {\n                    console.warn(\"Protected from removeLayer error:\", e);\n                    return this;\n                }\n            };\n            \n            // Prevent errors in the Layer prototype\n            const originalRemoveFrom = L.Layer.prototype.removeFrom;\n            L.Layer.prototype.removeFrom = function(map) {\n                if (!map) return this;\n                try {\n                    return originalRemoveFrom.call(this, map);\n                } catch (e) {\n                    console.warn(\"Protected from removeFrom error:\", e);\n                    return this;\n                }\n            };\n            \n            if (L.Routing) {\n                // Ensure timeout is set properly\n                L.Routing.timeout = 30 * 1000;\n                \n                // Disable unnecessary features\n                if (L.Routing.Control.prototype.options) {\n                    L.Routing.Control.prototype.options.showAlternatives = false;\n                    L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n                    L.Routing.Control.prototype.options.show = false;\n                }\n                \n                // No need for OSRM warmup - using Leaflet's built-in routing\n            }\n        }\n        \n        // Initialize an empty map of previously used routes\n        window._routeCache = new Map();\n    }, []);\n    \n    // Clear any routes when component unmounts\n    useEffect(() => {\n        return () => {\n            // Clear any cached data\n            if (window._routeCache) {\n                window._routeCache.clear();\n            }\n        };\n    }, []);\n    \n    // Handle routing failure\n    const handleRoutingFailed = () => {\n        setShowDirectPath(true);\n        setDirectPathKey(prevKey => prevKey + 1);\n        setRoutingFailMessage(\"OSRM route not available. Showing direct path instead.\");\n        \n        // Auto-hide the message after 5 seconds\n        setTimeout(() => {\n            setRoutingFailMessage(null);\n        }, 5000);\n    };\n    \n    useEffect(() => {\n        // Ensure loading screen doesn't stay forever\n        if (isPathLoading) {\n            const timeout = setTimeout(() => {\n                setIsPathLoading(false);\n                // If still loading after timeout, show direct path\n                if (selectedStop && userLocation) {\n                    handleRoutingFailed();\n                }\n            }, 5000); // Further reduced maximum timeout to 5 seconds\n            \n            return () => clearTimeout(timeout);\n        }\n    }, [isPathLoading, selectedStop, userLocation]);\n    \n    // Enhanced cleanup when component unmounts\n    useEffect(() => {\n        return () => {\n            // Clear any pending routing operations\n            if (routeCache.size > 0) {\n                routeCache.clear();\n            }\n            \n            // Reset all states to prevent memory leaks\n            setSelectedStop(null);\n            setShowDirectPath(false);\n            setIsPathLoading(false);\n        };\n    }, []);\n    \n    return (\n        <div className=\"bus-stop-search\">\n            {/* Full-page loading overlay for OSRM loading */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Loading route. Please wait...</div>\n                </div>\n            )}\n            \n            {/* Routing fail message */}\n            {routingFailMessage && (\n                <div className=\"routing-fail-message\">\n                    {routingFailMessage}\n                </div>\n            )}\n            \n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Search Bus Stops</h2>\n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"latitude\">Latitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"latitude\" \n                                name=\"latitude\" \n                                value={coordinates.latitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 22.3190\"\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"longitude\">Longitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"longitude\" \n                                name=\"longitude\" \n                                value={coordinates.longitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 87.3091\"\n                            />\n                        </div>\n                        \n                        <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n                        \n                        <button \n                            className=\"search-btn\"\n                            onClick={handleSearch}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"location-panel-bottom\">\n                    {hasSearched && searchResults.length > 0 && (\n                        <div className=\"search-results\">\n                            <h3>Nearest Bus Stops</h3>\n                            <div className=\"results-list\">\n                                {searchResults.map((stop, index) => (\n                                    <div \n                                        key={stop.id} \n                                        className=\"result-item\"\n                                        onClick={() => handleStopSelect(stop)}\n                                    >\n                                        <div className=\"result-index\">{index + 1}</div>\n                                        <div className=\"result-details\">\n                                            <h4>{stop.name}</h4>\n                                            <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                                            <p className=\"coordinates\">\n                                                {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                    \n                    {hasSearched && searchResults.length === 0 && (\n                        <div className=\"no-results\">\n                            <p>No bus stops found near the selected location.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            \n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={zoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={mapRef}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <MapController center={mapCenter} zoom={zoom} />\n                    <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} />\n                    \n                    {/* Display user location */}\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Your Location</strong><br />\n                                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Always display search marker */}\n                    {searchMarker && (\n                        <Marker position={searchMarker} icon={searchMarkerIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Search Location</strong><br />\n                                    {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Display all bus stops */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={busStopIcon}\n                            ref={(ref) => registerMarker(stop.id, ref)}\n                        >\n                            <Popup>\n                                <div>\n                                    <strong>{stop.name}</strong><br />\n                                    {searchMarker && (\n                                        <span>\n                                            Distance: {formatDistance(\n                                                calculateDistance(\n                                                    searchMarker[0], searchMarker[1],\n                                                    stop.latitude, stop.longitude\n                                                )\n                                            )}\n                                        </span>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Add routing control for selected bus stop - use key to force re-creation */}\n                    {searchMarker && selectedStop && !showDirectPath && (\n                        <RoutingControl\n                            key={`route-${routingKey}`}\n                            startPoint={searchMarker} // Using search marker as start point\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={4}\n                            setIsPathLoading={setIsPathLoading}\n                            onRoutingFailed={handleRoutingFailed}\n                        />\n                    )}\n                    \n                    {/* Add direct path as fallback when OSRM fails or for faster display */}\n                    {searchMarker && selectedStop && showDirectPath && (\n                        <DirectPathLine\n                            key={`direct-${directPathKey}`}\n                            startPoint={searchMarker} // Using search marker as start point\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={3}\n                        />\n                    )}\n                    \n                    {/* Button inside map container for centering on user location */}\n                    <div className=\"map-controls\">\n                        <LocationButton\n                            userLocation={userLocation}\n                            onClick={handleCenterOnUser}\n                        />\n                    </div>\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\n// Updated component to handle map clicks\nconst MapEvents = ({ setCoordinates, setSearchMarker }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n            setSearchMarker([lat, lng]); // Update marker immediately\n        }\n    });\n    \n    return null;\n};\n\nexport default BusStopSearch;\n"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,EAAEC,YAAY,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,eAAe;AACtG,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAOC,GAAG,MAAM,iBAAiB;AACjC,OAAO,yBAAyB;AAChC,OAAO,0DAA0D;AACjE,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAG,IAAIJ,CAAC,CAACK,IAAI,CAAC;EAC3BC,OAAO,EAAE,eAAe;EAAE;EAC1BC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACxB,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAG,IAAIV,CAAC,CAACK,IAAI,CAAC;EACxBC,OAAO,EAAE,oGAAoG;EAC7GK,SAAS,EAAE,+EAA+E;EAC1FJ,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACrBG,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACvB,CAAC,CAAC;;AAEF;AACA,MAAMC,gBAAgB,GAAG,IAAIb,CAAC,CAACK,IAAI,CAAC;EAChCC,OAAO,EAAE,mGAAmG;EAC5GK,SAAS,EAAE,+EAA+E;EAC1FJ,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EACrBG,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE;AACvB,CAAC,CAAC;;AAEF;AACA,SAASE,uBAAuBA,CAAA,EAAG;EACjC,IAAI,OAAOd,CAAC,KAAK,WAAW,IAAIA,CAAC,CAACe,OAAO,EAAE;IACzC;IACAf,CAAC,CAACe,OAAO,CAACC,SAAS,CAACC,SAAS,CAACC,OAAO,CAACC,kBAAkB,GAAG,KAAK;IAChEnB,CAAC,CAACe,OAAO,CAACK,OAAO,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;;IAE9B;IACA,IAAIpB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,EAAE;MACvClB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACI,gBAAgB,GAAG,KAAK;MAC5DtB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACK,gBAAgB,GAAG,KAAK;MAC5DvB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACM,kBAAkB,GAAG,KAAK;MAC9DxB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACO,YAAY,GAAG,KAAK;MACxDzB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACQ,SAAS,GAAG,EAAE;MAClD1B,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACS,YAAY,GAAG,IAAI;MACvD3B,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACU,QAAQ,GAAG,IAAI;MACnD5B,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACW,iBAAiB,GAAG,KAAK;IAC/D;;IAEA;IACA,IAAI7B,CAAC,CAACe,OAAO,CAACe,YAAY,IAAI9B,CAAC,CAACe,OAAO,CAACe,YAAY,CAACb,SAAS,EAAE;MAC9DjB,CAAC,CAACe,OAAO,CAACe,YAAY,CAACb,SAAS,CAACc,oBAAoB,GAAG,UAAUC,CAAC,EAAE;QACnEC,OAAO,CAACC,IAAI,CAAC,wBAAwB,EAAEF,CAAC,CAAC;QACzC;MACF,CAAC;IACH;;IAEA;IACA,IAAIhC,CAAC,CAACe,OAAO,CAACoB,IAAI,IAAInC,CAAC,CAACe,OAAO,CAACoB,IAAI,CAAClB,SAAS,EAAE;MAC9C,MAAMmB,kBAAkB,GAAGpC,CAAC,CAACe,OAAO,CAACoB,IAAI,CAAClB,SAAS,CAACoB,WAAW;MAC/DrC,CAAC,CAACe,OAAO,CAACoB,IAAI,CAAClB,SAAS,CAACoB,WAAW,GAAG,YAAY;QACjD,IAAI;UACF;UACA,IAAI,IAAI,CAACC,IAAI,IAAI,IAAI,CAACC,MAAM,EAAE;YAC5B;YACA,IAAI,IAAI,CAACA,MAAM,CAACC,OAAO,EAAE;cACvBJ,kBAAkB,CAACK,IAAI,CAAC,IAAI,CAAC;YAC/B,CAAC,MAAM;cACL;cACA,IAAI,IAAI,CAACH,IAAI,IAAI,IAAI,CAACC,MAAM,EAAE;gBAC5B,IAAI;kBACF,IAAI,CAACD,IAAI,CAACI,WAAW,CAAC,IAAI,CAACH,MAAM,CAAC;gBACpC,CAAC,CAAC,OAAOP,CAAC,EAAE;kBACVC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;gBACtD;cACF;YACF;UACF;QACF,CAAC,CAAC,OAAOA,CAAC,EAAE;UACVC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;UACpD;QACF;MACF,CAAC;IACH;EACF;AACF;;AAEA;AACA,MAAMW,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;;AAE5B;AACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,GAAG,KAAK;EACvC,OAAO,GAAGD,KAAK,CAAC,CAAC,CAAC,IAAIA,KAAK,CAAC,CAAC,CAAC,IAAIC,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,EAAE;AACtD,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,QAAQ;EAAEC,KAAK,GAAG,SAAS;EAAEC,MAAM,GAAG;AAAE,CAAC,KAAK;EAClF,IAAI,CAACH,UAAU,IAAI,CAACC,QAAQ,EAAE,OAAO,IAAI;EAEzC,oBACE/C,OAAA,CAACJ,QAAQ;IACPsD,SAAS,EAAE,CACT,CAACJ,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC,EAC9B,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC1B;IACFC,KAAK,EAAEA,KAAM;IACbC,MAAM,EAAEA,MAAO;IACfE,SAAS,EAAC,OAAO;IACjBC,OAAO,EAAE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEN,CAAC;;AAED;AAAAC,EAAA,GAjBMZ,cAAc;AAkBpB,MAAMa,0BAA0B,GAAGA,CAACC,cAAc,EAAEC,GAAG,KAAK;EAC1D,IAAI,CAACD,cAAc,IAAI,CAACC,GAAG,EAAE;EAE7B,IAAI;IACF;IACA,IAAID,cAAc,CAACE,OAAO,EAAE;MAC1BF,cAAc,CAACE,OAAO,CAACC,OAAO,GAAG,EAAE;IACrC;;IAEA;IACA,IAAIH,cAAc,CAACE,OAAO,IAAIF,cAAc,CAACE,OAAO,CAACE,aAAa,EAAE;MAClEJ,cAAc,CAACE,OAAO,CAACE,aAAa,GAAG,IAAI;IAC7C;;IAEA;IACA,IAAIJ,cAAc,CAACK,KAAK,IAAIL,cAAc,CAACK,KAAK,CAAC5B,MAAM,EAAE;MACvD,IAAI;QACF,IAAIuB,cAAc,CAACK,KAAK,CAAC7B,IAAI,IAAIwB,cAAc,CAACK,KAAK,CAAC5B,MAAM,EAAE;UAC5DuB,cAAc,CAACK,KAAK,CAAC5B,MAAM,GAAG,IAAI;QACpC;MACF,CAAC,CAAC,OAAOP,CAAC,EAAE;QACVC,OAAO,CAACC,IAAI,CAAC,4BAA4B,EAAEF,CAAC,CAAC;MAC/C;IACF;;IAEA;IACA+B,GAAG,CAACK,aAAa,CAACN,cAAc,CAAC;EACnC,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdpC,OAAO,CAACC,IAAI,CAAC,sBAAsB,EAAEmC,KAAK,CAAC;EAC7C;AACF,CAAC;;AAED;AACA,MAAMC,cAAc,GAAGA,CAAC;EAAErB,UAAU;EAAEC,QAAQ;EAAEC,KAAK,GAAG,SAAS;EAAEC,MAAM,GAAG,CAAC;EAAEmB,gBAAgB;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACrH,MAAMV,GAAG,GAAGjE,MAAM,CAAC,CAAC;EACpB,MAAM4E,iBAAiB,GAAGlF,MAAM,CAAC,IAAI,CAAC;EACtC,MAAMmF,kBAAkB,GAAGnF,MAAM,CAAC,IAAI,CAAC;EACvC,MAAM,CAACoF,aAAa,EAAEC,gBAAgB,CAAC,GAAGvF,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAImF,iBAAiB,CAACI,OAAO,IAAIf,GAAG,EAAE;QACpCF,0BAA0B,CAACa,iBAAiB,CAACI,OAAO,EAAEf,GAAG,CAAC;QAC1DW,iBAAiB,CAACI,OAAO,GAAG,IAAI;MAClC;;MAEA;MACA,IAAIH,kBAAkB,CAACG,OAAO,IAAIf,GAAG,EAAE;QACrCA,GAAG,CAACrB,WAAW,CAACiC,kBAAkB,CAACG,OAAO,CAAC;QAC3CH,kBAAkB,CAACG,OAAO,GAAG,IAAI;MACnC;IACF,CAAC;EACH,CAAC,EAAE,CAACf,GAAG,CAAC,CAAC;EAETxE,SAAS,CAAC,MAAM;IACd0C,OAAO,CAAC8C,GAAG,CAAC,iCAAiC,EAAE9B,UAAU,EAAE,WAAW,EAAEC,QAAQ,CAAC;;IAEjF;IACA,IAAIwB,iBAAiB,CAACI,OAAO,IAAIf,GAAG,EAAE;MACpCF,0BAA0B,CAACa,iBAAiB,CAACI,OAAO,EAAEf,GAAG,CAAC;MAC1DW,iBAAiB,CAACI,OAAO,GAAG,IAAI;IAClC;;IAEA;IACA,IAAIH,kBAAkB,CAACG,OAAO,IAAIf,GAAG,EAAE;MACrCA,GAAG,CAACrB,WAAW,CAACiC,kBAAkB,CAACG,OAAO,CAAC;MAC3CH,kBAAkB,CAACG,OAAO,GAAG,IAAI;IACnC;;IAEA;IACAD,gBAAgB,CAAC,KAAK,CAAC;;IAEvB;IACA,IAAI,CAAC5B,UAAU,IAAI,CAACC,QAAQ,EAAE;MAC5BqB,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACF;;IAEA;IACAA,gBAAgB,CAAC,IAAI,CAAC;IAEtB,IAAI;MACF;MACA,MAAM7C,SAAS,GAAG,CAChB1B,CAAC,CAACgF,MAAM,CAAC/B,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC,EACtCjD,CAAC,CAACgF,MAAM,CAAC9B,QAAQ,CAAC,CAAC,CAAC,EAAEA,QAAQ,CAAC,CAAC,CAAC,CAAC,CACnC;MAEDjB,OAAO,CAAC8C,GAAG,CAAC,iDAAiD,EAAErD,SAAS,CAAC;;MAEzE;MACA,MAAMuD,QAAQ,GAAGjF,CAAC,CAACkF,OAAO,CAAC;QACzBC,IAAI,EAAE,kCAAkC;QACxCC,SAAS,EAAE,EAAE;QACb7E,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;QAClBC,UAAU,EAAE,CAAC,CAAC,EAAE,CAAC;MACnB,CAAC,CAAC;;MAEF;MACAmE,kBAAkB,CAACG,OAAO,GAAG9E,CAAC,CAACqF,MAAM,CAAC,CAACpC,UAAU,CAAC,CAAC,CAAC,EAAEA,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE;QACpEqC,IAAI,EAAEL,QAAQ;QACdM,YAAY,EAAE,IAAI,CAAC;MACrB,CAAC,CAAC;;MAEF;MACA,MAAMzB,cAAc,GAAG9D,CAAC,CAACe,OAAO,CAACyE,OAAO,CAAC;QACvC9D,SAAS,EAAEA,SAAS;QACpBF,kBAAkB,EAAE,KAAK;QACzBF,gBAAgB,EAAE,KAAK;QACvBO,iBAAiB,EAAE,KAAK;QACxB4D,IAAI,EAAE,KAAK;QAAE;QACbC,WAAW,EAAE;UACXC,MAAM,EAAE,CAAC;YAAExC,KAAK,EAAEA,KAAK;YAAEI,OAAO,EAAE,GAAG;YAAEH,MAAM,EAAEA;UAAO,CAAC,CAAC;UACxDwC,iBAAiB,EAAE,IAAI;UACvBC,qBAAqB,EAAE;QACzB,CAAC;QACDlE,YAAY,EAAEA,CAAA,KAAM,IAAI;QAAE;QAC1BF,YAAY,EAAE;MAChB,CAAC,CAAC;;MAEF;MACAqC,cAAc,CAACgC,EAAE,CAAC,aAAa,EAAE,UAAS9D,CAAC,EAAE;QAC3CC,OAAO,CAAC8C,GAAG,CAAC,eAAe,EAAE/C,CAAC,CAAC+D,MAAM,CAACC,MAAM,CAAC;QAC7CzB,gBAAgB,CAAC,KAAK,CAAC;;QAEvB;QACA,IAAIvC,CAAC,CAAC+D,MAAM,IAAI/D,CAAC,CAAC+D,MAAM,CAACC,MAAM,GAAG,CAAC,IAAIhE,CAAC,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW,EAAE;UAC9D,MAAMA,WAAW,GAAGjE,CAAC,CAAC+D,MAAM,CAAC,CAAC,CAAC,CAACE,WAAW;UAC3ChE,OAAO,CAAC8C,GAAG,CAAC,2BAA2B,EAAEkB,WAAW,CAACD,MAAM,EAAE,QAAQ,CAAC;;UAEtE;UACArB,kBAAkB,CAACG,OAAO,CAACoB,KAAK,CAACnC,GAAG,CAAC;;UAErC;UACAkC,WAAW,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;YACpCC,UAAU,CAAC,MAAM;cACf,IAAI3B,kBAAkB,CAACG,OAAO,EAAE;gBAC9BH,kBAAkB,CAACG,OAAO,CAACyB,SAAS,CAAC,CAACH,KAAK,CAACI,GAAG,EAAEJ,KAAK,CAACK,GAAG,CAAC,CAAC;cAC9D;YACF,CAAC,EAAE,EAAE,GAAGJ,KAAK,CAAC,CAAC,CAAC;UAClB,CAAC,CAAC;;UAEF;UACAC,UAAU,CAAC,MAAM;YACf,IAAI3B,kBAAkB,CAACG,OAAO,IAAIf,GAAG,EAAE;cACrCA,GAAG,CAACrB,WAAW,CAACiC,kBAAkB,CAACG,OAAO,CAAC;cAC3CH,kBAAkB,CAACG,OAAO,GAAG,IAAI;YACnC;UACF,CAAC,EAAE,EAAE,GAAGmB,WAAW,CAACD,MAAM,GAAG,GAAG,CAAC;QACnC;MACF,CAAC,CAAC;;MAEF;MACAlC,cAAc,CAACgC,EAAE,CAAC,cAAc,EAAE,UAAS9D,CAAC,EAAE;QAC5CC,OAAO,CAACC,IAAI,CAAC,gBAAgB,EAAEF,CAAC,CAAC;QACjC6C,gBAAgB,CAAC,IAAI,CAAC;QACtB,IAAIL,eAAe,EAAEA,eAAe,CAAC,CAAC;QACtCD,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,CAAC;;MAEF;MACA+B,UAAU,CAAC,MAAM;QACf,IAAI;UACF,IAAIvC,GAAG,IAAI,CAACa,aAAa,EAAE;YACzBd,cAAc,CAACoC,KAAK,CAACnC,GAAG,CAAC;YACzB9B,OAAO,CAAC8C,GAAG,CAAC,8BAA8B,CAAC;YAC3CL,iBAAiB,CAACI,OAAO,GAAGhB,cAAc;UAC5C;QACF,CAAC,CAAC,OAAO4C,QAAQ,EAAE;UACjBzE,OAAO,CAACoC,KAAK,CAAC,+BAA+B,EAAEqC,QAAQ,CAAC;UACxD7B,gBAAgB,CAAC,IAAI,CAAC;UACtB,IAAIL,eAAe,EAAEA,eAAe,CAAC,CAAC;UACtCD,gBAAgB,CAAC,KAAK,CAAC;QACzB;MACF,CAAC,EAAE,GAAG,CAAC;;MAEP;MACA,MAAMnD,OAAO,GAAGkF,UAAU,CAAC,MAAM;QAC/B,IAAI,CAAC1B,aAAa,EAAE;UAClB3C,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC;UAC7D2C,gBAAgB,CAAC,IAAI,CAAC;UACtB,IAAIL,eAAe,EAAEA,eAAe,CAAC,CAAC;UACtCD,gBAAgB,CAAC,KAAK,CAAC;QACzB;MACF,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAM;QACXoC,YAAY,CAACvF,OAAO,CAAC;QACrB;QACA,IAAIsD,iBAAiB,CAACI,OAAO,IAAIf,GAAG,EAAE;UACpCF,0BAA0B,CAACa,iBAAiB,CAACI,OAAO,EAAEf,GAAG,CAAC;UAC1DW,iBAAiB,CAACI,OAAO,GAAG,IAAI;QAClC;QACA;QACA,IAAIH,kBAAkB,CAACG,OAAO,IAAIf,GAAG,EAAE;UACrCA,GAAG,CAACrB,WAAW,CAACiC,kBAAkB,CAACG,OAAO,CAAC;UAC3CH,kBAAkB,CAACG,OAAO,GAAG,IAAI;QACnC;QACAP,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC;IACH,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdpC,OAAO,CAACoC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjDQ,gBAAgB,CAAC,IAAI,CAAC;MACtB,IAAIL,eAAe,EAAEA,eAAe,CAAC,CAAC;MACtCD,gBAAgB,CAAC,KAAK,CAAC;IACzB;EACF,CAAC,EAAE,CAACR,GAAG,EAAEd,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,EAAEmB,gBAAgB,EAAEC,eAAe,CAAC,CAAC;EAEjF,OAAO,IAAI;AACb,CAAC;;AAED;AAAAC,EAAA,CAnLMH,cAAc;EAAA,QACNxE,MAAM;AAAA;AAAA8G,GAAA,GADdtC,cAAc;AAoLpB,MAAMuC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAK,CAAC,KAAK;EAAAC,GAAA;EACxC,MAAMjD,GAAG,GAAGjE,MAAM,CAAC,CAAC;EAEpBP,SAAS,CAAC,MAAM;IACZ,IAAIuH,MAAM,EAAE;MACR/C,GAAG,CAACkD,OAAO,CAACH,MAAM,EAAEC,IAAI,IAAIhD,GAAG,CAACmD,OAAO,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACnD,GAAG,EAAE+C,MAAM,EAAEC,IAAI,CAAC,CAAC;EAEvB,OAAO,IAAI;AACf,CAAC;;AAED;AAAAC,GAAA,CAZMH,aAAa;EAAA,QACH/G,MAAM;AAAA;AAAAqH,GAAA,GADhBN,aAAa;AAanB,MAAMO,eAAe,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EAAAC,GAAA;EAC5CzH,YAAY,CAAC;IACT0H,KAAK,EAAGvF,CAAC,IAAK;MACV,MAAM;QAAEwE,GAAG;QAAEC;MAAI,CAAC,GAAGzE,CAAC,CAACwF,MAAM;MAC7BH,cAAc,CAAC;QACXI,QAAQ,EAAEjB,GAAG,CAACkB,OAAO,CAAC,CAAC,CAAC;QACxBC,SAAS,EAAElB,GAAG,CAACiB,OAAO,CAAC,CAAC;MAC5B,CAAC,CAAC;IACN;EACJ,CAAC,CAAC;EAEF,OAAO,IAAI;AACf,CAAC;;AAED;AAAAJ,GAAA,CAdMF,eAAe;EAAA,QACjBvH,YAAY;AAAA;AAAA+H,GAAA,GADVR,eAAe;AAerB,MAAMS,cAAc,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAQ,CAAC,KAAK;EAClD,oBACI5H,OAAA;IACIiF,SAAS,EAAC,iBAAiB;IAC3B2C,OAAO,EAAEA,OAAQ;IACjBC,QAAQ,EAAE,CAACF,YAAa;IACxBG,KAAK,EAAC,6BAA6B;IAAAC,QAAA,gBAEnC/H,OAAA;MAAGiF,SAAS,EAAC;IAAuB;MAAA5B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,0BAC7C;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEjB,CAAC;AAACwE,GAAA,GAXIN,cAAc;AAapB,MAAMO,aAAa,GAAGA,CAAC;EAAEN,YAAY;EAAEO;AAAgB,CAAC,KAAK;EAAAC,GAAA;EACzD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlJ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmJ,OAAO,EAAEC,UAAU,CAAC,GAAGpJ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAAC+E,KAAK,EAAEsE,QAAQ,CAAC,GAAGrJ,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACsJ,SAAS,EAAEC,YAAY,CAAC,GAAGvJ,QAAQ,CAACwI,YAAY,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;EAChF,MAAM,CAACf,IAAI,EAAE+B,OAAO,CAAC,GAAGxJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAAC2G,WAAW,EAAEoB,cAAc,CAAC,GAAG/H,QAAQ,CAAC;IAC3CmI,QAAQ,EAAE,EAAE;IACZE,SAAS,EAAE;EACf,CAAC,CAAC;EACF;EACA,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAG1J,QAAQ,CAACwI,YAAY,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;EACpF,MAAM,CAACmB,aAAa,EAAEC,gBAAgB,CAAC,GAAG5J,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAC6J,WAAW,EAAEC,cAAc,CAAC,GAAG9J,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+J,aAAa,EAAE9E,gBAAgB,CAAC,GAAGjF,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACgK,YAAY,EAAEC,eAAe,CAAC,GAAGjK,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkK,UAAU,EAAEC,aAAa,CAAC,GAAGnK,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACoK,cAAc,EAAEC,iBAAiB,CAAC,GAAGrK,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACsK,aAAa,EAAEC,gBAAgB,CAAC,GAAGvK,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACwK,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGzK,QAAQ,CAAC,IAAI,CAAC;EAElE,MAAM0K,MAAM,GAAGxK,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMyK,UAAU,GAAGzK,MAAM,CAAC,CAAC,CAAC,CAAC;;EAE7B;EACA,MAAM0K,cAAc,GAAGA,CAACC,EAAE,EAAEC,SAAS,KAAK;IACtC,IAAIA,SAAS,EAAE;MACXH,UAAU,CAACnF,OAAO,CAACqF,EAAE,CAAC,GAAGC,SAAS;IACtC;EACJ,CAAC;;EAED;EACA7K,SAAS,CAAC,MAAM;IACZ,IAAIuI,YAAY,EAAE;MACdT,cAAc,CAAC;QACXI,QAAQ,EAAEK,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC;QACpCC,SAAS,EAAEG,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC;MACxC,CAAC,CAAC;MACFmB,YAAY,CAACf,YAAY,CAAC;MAC1BkB,eAAe,CAAClB,YAAY,CAAC,CAAC,CAAC;IACnC;EACJ,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMuC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACApI,OAAO,CAAC8C,GAAG,CAAC,6BAA6B,CAAC;MAC1C,MAAMuF,QAAQ,GAAG,MAAMrK,GAAG,CAACsK,GAAG,CAAC,2BAA2B,CAAC;MAC3DtI,OAAO,CAAC8C,GAAG,CAAC,mBAAmB,EAAEuF,QAAQ,CAACE,IAAI,CAAC;;MAE/C;MACA;MACA,IAAIF,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACA,IAAI,EAAE;QACrC,OAAOF,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CAAC;MAC/B,CAAC,MAAM;QACHvI,OAAO,CAACoC,KAAK,CAAC,0BAA0B,EAAEiG,QAAQ,CAACE,IAAI,CAAC;QACxD,OAAO,EAAE;MACb;IACJ,CAAC,CAAC,OAAOnG,KAAK,EAAE;MACZpC,OAAO,CAACoC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAC/D,MAAMA,KAAK;IACf;EACJ,CAAC;;EAED;EACA9E,SAAS,CAAC,MAAM;IACZ,MAAMkL,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA/B,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM8B,IAAI,GAAG,MAAMH,aAAa,CAAC,CAAC;;QAElC;QACA,MAAMK,aAAa,GAAGC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;;QAErD;QACA,MAAMK,WAAW,GAAGH,aAAa,CAAC3G,GAAG,CAAC+G,IAAI,KAAK;UAC3C,GAAGA,IAAI;UACPrD,QAAQ,EAAEsD,UAAU,CAACD,IAAI,CAACrD,QAAQ,CAAC;UACnCE,SAAS,EAAEoD,UAAU,CAACD,IAAI,CAACnD,SAAS;QACxC,CAAC,CAAC,CAAC;QAEHa,WAAW,CAACqC,WAAW,CAAC;QACxBlC,QAAQ,CAAC,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOqC,GAAG,EAAE;QACV/I,OAAO,CAACoC,KAAK,CAAC,0BAA0B,EAAE2G,GAAG,CAAC;QAC9CrC,QAAQ,CAAC,mDAAmD,CAAC;MACjE,CAAC,SAAS;QACND,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAED+B,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,iBAAiB,GAAIjJ,CAAC,IAAK;IAC7B,MAAM;MAAEkJ,IAAI;MAAEC;IAAM,CAAC,GAAGnJ,CAAC,CAACoJ,MAAM;IAChC/D,cAAc,CAACgE,IAAI,KAAK;MACpB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;;EAED;EACA,MAAMG,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIxD,YAAY,EAAE;MACde,YAAY,CAACf,YAAY,CAAC;MAC1BgB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;;MAEb;MACAzB,cAAc,CAAC;QACXI,QAAQ,EAAEK,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC;QACpCC,SAAS,EAAEG,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC;MACxC,CAAC,CAAC;IACN;EACJ,CAAC;;EAED;EACA,MAAM6D,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAI;MACA,MAAM/E,GAAG,GAAGuE,UAAU,CAAC9E,WAAW,CAACwB,QAAQ,CAAC;MAC5C,MAAMhB,GAAG,GAAGsE,UAAU,CAAC9E,WAAW,CAAC0B,SAAS,CAAC;;MAE7C;MACA,IAAI6D,KAAK,CAAChF,GAAG,CAAC,IAAIgF,KAAK,CAAC/E,GAAG,CAAC,IACxBD,GAAG,GAAG,CAAC,EAAE,IAAIA,GAAG,GAAG,EAAE,IACrBC,GAAG,GAAG,CAAC,GAAG,IAAIA,GAAG,GAAG,GAAG,EAAE;QACzBkC,QAAQ,CAAC,gCAAgC,CAAC;QAC1C;MACJ;MAEAA,QAAQ,CAAC,IAAI,CAAC;MACdK,eAAe,CAAC,CAACxC,GAAG,EAAEC,GAAG,CAAC,CAAC;;MAE3B;MACA8C,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAACgC,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;MACrC9B,iBAAiB,CAAC,KAAK,CAAC;MACxBE,gBAAgB,CAAC4B,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;MACxC1B,qBAAqB,CAAC,IAAI,CAAC;;MAE3B;MACA;MACA,IAAI,OAAOpH,UAAU,KAAK,WAAW,IAAIA,UAAU,CAAC+I,IAAI,GAAG,EAAE,EAAE;QAC3D/I,UAAU,CAACgJ,KAAK,CAAC,CAAC;MACtB;;MAEA;MACA,MAAMC,OAAO,GAAGrD,QAAQ,CAACxE,GAAG,CAAC+G,IAAI,IAAI;QACjC;QACA,MAAMe,QAAQ,GAAGC,iBAAiB,CAC9BtF,GAAG,EAAEC,GAAG,EACRqE,IAAI,CAACrD,QAAQ,EAAEqD,IAAI,CAACnD,SACxB,CAAC;QAED,OAAO;UACH,GAAGmD,IAAI;UACPe,QAAQ,EAAEA;QACd,CAAC;MACL,CAAC,CAAC;;MAEF;MACA,MAAME,aAAa,GAAG,CAAC,GAAGH,OAAO,CAAC,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAACJ,QAAQ,GAAGK,CAAC,CAACL,QAAQ,CAAC;MAC1E3C,gBAAgB,CAAC6C,aAAa,CAAC;MAC/B3C,cAAc,CAAC,IAAI,CAAC;;MAEpB;MACAP,YAAY,CAAC,CAACrC,GAAG,EAAEC,GAAG,CAAC,CAAC;MACxBqC,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,OAAOzE,KAAK,EAAE;MACZpC,OAAO,CAACoC,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCsE,QAAQ,CAAC,iCAAiC,CAAC;IAC/C;EACJ,CAAC;;EAED;EACA,MAAMwD,gBAAgB,GAAIrB,IAAI,IAAK;IAC/B;IACAjC,YAAY,CAAC,CAACiC,IAAI,CAACrD,QAAQ,EAAEqD,IAAI,CAACnD,SAAS,CAAC,CAAC;IAC7CmB,OAAO,CAAC,EAAE,CAAC;;IAEX;IACAS,eAAe,CAACuB,IAAI,CAAC;IACrBrB,aAAa,CAACgC,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;IACrC9B,iBAAiB,CAAC,KAAK,CAAC;IACxBE,gBAAgB,CAAC4B,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;IACxC1B,qBAAqB,CAAC,IAAI,CAAC;;IAE3B;IACA,MAAM1E,MAAM,GAAG4E,UAAU,CAACnF,OAAO,CAACgG,IAAI,CAACX,EAAE,CAAC;IAC1C,IAAI9E,MAAM,EAAE;MACRA,MAAM,CAAC+G,SAAS,CAAC,CAAC;IACtB;EACJ,CAAC;;EAED;EACA,MAAMN,iBAAiB,GAAGA,CAACO,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,KAAK;IAClD,MAAMC,CAAC,GAAG,MAAM,CAAC,CAAC;IAClB,MAAMC,EAAE,GAAGL,IAAI,GAAGM,IAAI,CAACC,EAAE,GAAG,GAAG;IAC/B,MAAMC,EAAE,GAAGN,IAAI,GAAGI,IAAI,CAACC,EAAE,GAAG,GAAG;IAC/B,MAAME,EAAE,GAAG,CAACP,IAAI,GAAGF,IAAI,IAAIM,IAAI,CAACC,EAAE,GAAG,GAAG;IACxC,MAAMG,EAAE,GAAG,CAACT,IAAI,GAAGE,IAAI,IAAIG,IAAI,CAACC,EAAE,GAAG,GAAG;IAExC,MAAMX,CAAC,GAAGU,IAAI,CAACK,GAAG,CAACF,EAAE,GAAC,CAAC,CAAC,GAAGH,IAAI,CAACK,GAAG,CAACF,EAAE,GAAC,CAAC,CAAC,GACjCH,IAAI,CAACM,GAAG,CAACP,EAAE,CAAC,GAAGC,IAAI,CAACM,GAAG,CAACJ,EAAE,CAAC,GAC3BF,IAAI,CAACK,GAAG,CAACD,EAAE,GAAC,CAAC,CAAC,GAAGJ,IAAI,CAACK,GAAG,CAACD,EAAE,GAAC,CAAC,CAAC;IACvC,MAAMG,CAAC,GAAG,CAAC,GAAGP,IAAI,CAACQ,KAAK,CAACR,IAAI,CAACS,IAAI,CAACnB,CAAC,CAAC,EAAEU,IAAI,CAACS,IAAI,CAAC,CAAC,GAACnB,CAAC,CAAC,CAAC;IAEtD,OAAOQ,CAAC,GAAGS,CAAC,CAAC,CAAC;EAClB,CAAC;;EAED;EACA,MAAMG,cAAc,GAAIC,MAAM,IAAK;IAC/B,IAAIA,MAAM,GAAG,IAAI,EAAE;MACf,OAAO,GAAGX,IAAI,CAACY,KAAK,CAACD,MAAM,CAAC,SAAS;IACzC,CAAC,MAAM;MACH,OAAO,GAAG,CAACA,MAAM,GAAG,IAAI,EAAE5F,OAAO,CAAC,CAAC,CAAC,KAAK;IAC7C;EACJ,CAAC;EAEDnI,SAAS,CAAC,MAAM;IACZ;IACA,IAAI8J,aAAa,EAAE;MACf,MAAMjI,OAAO,GAAGkF,UAAU,CAAC,MAAM;QAC7B/B,gBAAgB,CAAC,KAAK,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMoC,YAAY,CAACvF,OAAO,CAAC;IACtC;EACJ,CAAC,EAAE,CAACiI,aAAa,CAAC,CAAC;;EAEnB;EACA9J,SAAS,CAAC,MAAM;IACZ;IACA,IAAI,OAAOS,CAAC,KAAK,WAAW,EAAE;MAC1B;MACA,MAAMwN,mBAAmB,GAAGxN,CAAC,CAAC4C,GAAG,CAAC3B,SAAS,CAACyB,WAAW;MACvD1C,CAAC,CAAC4C,GAAG,CAAC3B,SAAS,CAACyB,WAAW,GAAG,UAAS+K,KAAK,EAAE;QAC1C,IAAI,CAACA,KAAK,EAAE;UACRxL,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;UAC9C,OAAO,IAAI;QACf;QACA,IAAI,CAAC,IAAI,CAACwL,QAAQ,CAACD,KAAK,CAAC,EAAE;UACvB,OAAO,IAAI;QACf;QACA,IAAI;UACA,OAAOD,mBAAmB,CAAC/K,IAAI,CAAC,IAAI,EAAEgL,KAAK,CAAC;QAChD,CAAC,CAAC,OAAOzL,CAAC,EAAE;UACRC,OAAO,CAACC,IAAI,CAAC,mCAAmC,EAAEF,CAAC,CAAC;UACpD,OAAO,IAAI;QACf;MACJ,CAAC;;MAED;MACA,MAAM2L,kBAAkB,GAAG3N,CAAC,CAAC4N,KAAK,CAAC3M,SAAS,CAAC4M,UAAU;MACvD7N,CAAC,CAAC4N,KAAK,CAAC3M,SAAS,CAAC4M,UAAU,GAAG,UAAS9J,GAAG,EAAE;QACzC,IAAI,CAACA,GAAG,EAAE,OAAO,IAAI;QACrB,IAAI;UACA,OAAO4J,kBAAkB,CAAClL,IAAI,CAAC,IAAI,EAAEsB,GAAG,CAAC;QAC7C,CAAC,CAAC,OAAO/B,CAAC,EAAE;UACRC,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAEF,CAAC,CAAC;UACnD,OAAO,IAAI;QACf;MACJ,CAAC;MAED,IAAIhC,CAAC,CAACe,OAAO,EAAE;QACX;QACAf,CAAC,CAACe,OAAO,CAACK,OAAO,GAAG,EAAE,GAAG,IAAI;;QAE7B;QACA,IAAIpB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,EAAE;UACrClB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACI,gBAAgB,GAAG,KAAK;UAC5DtB,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACW,iBAAiB,GAAG,KAAK;UAC7D7B,CAAC,CAACe,OAAO,CAACM,OAAO,CAACJ,SAAS,CAACC,OAAO,CAACuE,IAAI,GAAG,KAAK;QACpD;;QAEA;MACJ;IACJ;;IAEA;IACAqI,MAAM,CAACC,WAAW,GAAG,IAAInL,GAAG,CAAC,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACArD,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT;MACA,IAAIuO,MAAM,CAACC,WAAW,EAAE;QACpBD,MAAM,CAACC,WAAW,CAACpC,KAAK,CAAC,CAAC;MAC9B;IACJ,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMqC,mBAAmB,GAAGA,CAAA,KAAM;IAC9BrE,iBAAiB,CAAC,IAAI,CAAC;IACvBE,gBAAgB,CAAC4B,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC;IACxC1B,qBAAqB,CAAC,wDAAwD,CAAC;;IAE/E;IACAzD,UAAU,CAAC,MAAM;MACbyD,qBAAqB,CAAC,IAAI,CAAC;IAC/B,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAEDxK,SAAS,CAAC,MAAM;IACZ;IACA,IAAI8J,aAAa,EAAE;MACf,MAAMjI,OAAO,GAAGkF,UAAU,CAAC,MAAM;QAC7B/B,gBAAgB,CAAC,KAAK,CAAC;QACvB;QACA,IAAI+E,YAAY,IAAIxB,YAAY,EAAE;UAC9BkG,mBAAmB,CAAC,CAAC;QACzB;MACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMrH,YAAY,CAACvF,OAAO,CAAC;IACtC;EACJ,CAAC,EAAE,CAACiI,aAAa,EAAEC,YAAY,EAAExB,YAAY,CAAC,CAAC;;EAE/C;EACAvI,SAAS,CAAC,MAAM;IACZ,OAAO,MAAM;MACT;MACA,IAAIoD,UAAU,CAAC+I,IAAI,GAAG,CAAC,EAAE;QACrB/I,UAAU,CAACgJ,KAAK,CAAC,CAAC;MACtB;;MAEA;MACApC,eAAe,CAAC,IAAI,CAAC;MACrBI,iBAAiB,CAAC,KAAK,CAAC;MACxBpF,gBAAgB,CAAC,KAAK,CAAC;IAC3B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIpE,OAAA;IAAKiF,SAAS,EAAC,iBAAiB;IAAA8C,QAAA,GAE3BmB,aAAa,iBACVlJ,OAAA;MAAKiF,SAAS,EAAC,2BAA2B;MAAA8C,QAAA,gBACtC/H,OAAA;QAAKiF,SAAS,EAAC;MAAS;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC/BxD,OAAA;QAAA+H,QAAA,EAAK;MAA6B;QAAA1E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACR,EAGAmG,kBAAkB,iBACf3J,OAAA;MAAKiF,SAAS,EAAC,sBAAsB;MAAA8C,QAAA,EAChC4B;IAAkB;MAAAtG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CACR,eAEDxD,OAAA;MAAKiF,SAAS,EAAC,gBAAgB;MAAA8C,QAAA,gBAC3B/H,OAAA;QAAKiF,SAAS,EAAC,oBAAoB;QAAA8C,QAAA,gBAC/B/H,OAAA;UAAA+H,QAAA,EAAI;QAAgB;UAAA1E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBU,KAAK,iBAAIlE,OAAA;UAAKiF,SAAS,EAAC,eAAe;UAAA8C,QAAA,EAAE7D;QAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAEtDxD,OAAA;UAAKiF,SAAS,EAAC,aAAa;UAAA8C,QAAA,gBACxB/H,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAA8C,QAAA,gBACvB/H,OAAA;cAAO8N,OAAO,EAAC,UAAU;cAAA/F,QAAA,EAAC;YAAS;cAAA1E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3CxD,OAAA;cACI+N,IAAI,EAAC,MAAM;cACX/D,EAAE,EAAC,UAAU;cACbe,IAAI,EAAC,UAAU;cACfC,KAAK,EAAElF,WAAW,CAACwB,QAAS;cAC5B0G,QAAQ,EAAElD,iBAAkB;cAC5BmD,WAAW,EAAC;YAAc;cAAA5K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENxD,OAAA;YAAKiF,SAAS,EAAC,YAAY;YAAA8C,QAAA,gBACvB/H,OAAA;cAAO8N,OAAO,EAAC,WAAW;cAAA/F,QAAA,EAAC;YAAU;cAAA1E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC7CxD,OAAA;cACI+N,IAAI,EAAC,MAAM;cACX/D,EAAE,EAAC,WAAW;cACde,IAAI,EAAC,WAAW;cAChBC,KAAK,EAAElF,WAAW,CAAC0B,SAAU;cAC7BwG,QAAQ,EAAElD,iBAAkB;cAC5BmD,WAAW,EAAC;YAAc;cAAA5K,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eAENxD,OAAA;YAAGiF,SAAS,EAAC,WAAW;YAAA8C,QAAA,EAAC;UAAgE;YAAA1E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAE7FxD,OAAA;YACIiF,SAAS,EAAC,YAAY;YACtB2C,OAAO,EAAEwD,YAAa;YACtBvD,QAAQ,EAAES,OAAQ;YAAAP,QAAA,EAEjBO,OAAO,GAAG,YAAY,GAAG;UAAwB;YAAAjF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENxD,OAAA;QAAKiF,SAAS,EAAC,uBAAuB;QAAA8C,QAAA,GACjCiB,WAAW,IAAIF,aAAa,CAACjD,MAAM,GAAG,CAAC,iBACpC7F,OAAA;UAAKiF,SAAS,EAAC,gBAAgB;UAAA8C,QAAA,gBAC3B/H,OAAA;YAAA+H,QAAA,EAAI;UAAiB;YAAA1E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BxD,OAAA;YAAKiF,SAAS,EAAC,cAAc;YAAA8C,QAAA,EACxBe,aAAa,CAAClF,GAAG,CAAC,CAAC+G,IAAI,EAAEzE,KAAK,kBAC3BlG,OAAA;cAEIiF,SAAS,EAAC,aAAa;cACvB2C,OAAO,EAAEA,CAAA,KAAMoE,gBAAgB,CAACrB,IAAI,CAAE;cAAA5C,QAAA,gBAEtC/H,OAAA;gBAAKiF,SAAS,EAAC,cAAc;gBAAA8C,QAAA,EAAE7B,KAAK,GAAG;cAAC;gBAAA7C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC/CxD,OAAA;gBAAKiF,SAAS,EAAC,gBAAgB;gBAAA8C,QAAA,gBAC3B/H,OAAA;kBAAA+H,QAAA,EAAK4C,IAAI,CAACI;gBAAI;kBAAA1H,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpBxD,OAAA;kBAAGiF,SAAS,EAAC,UAAU;kBAAA8C,QAAA,GAAC,YAAU,EAACmF,cAAc,CAACvC,IAAI,CAACe,QAAQ,CAAC;gBAAA;kBAAArI,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACrExD,OAAA;kBAAGiF,SAAS,EAAC,aAAa;kBAAA8C,QAAA,GACrB4C,IAAI,CAACrD,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACoD,IAAI,CAACnD,SAAS,CAACD,OAAO,CAAC,CAAC,CAAC;gBAAA;kBAAAlE,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvD,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC;YAAA,GAXDmH,IAAI,CAACX,EAAE;cAAA3G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYX,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,EAEAwF,WAAW,IAAIF,aAAa,CAACjD,MAAM,KAAK,CAAC,iBACtC7F,OAAA;UAAKiF,SAAS,EAAC,YAAY;UAAA8C,QAAA,eACvB/H,OAAA;YAAA+H,QAAA,EAAG;UAA8C;YAAA1E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAENxD,OAAA;MAAKiF,SAAS,EAAC,eAAe;MAAA8C,QAAA,eAC1B/H,OAAA,CAACV,YAAY;QACTqH,MAAM,EAAE8B,SAAU;QAClB7B,IAAI,EAAEA,IAAK;QACXsH,KAAK,EAAE;UAAEC,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAO,CAAE;QACzCC,GAAG,EAAExE,MAAO;QAAA9B,QAAA,gBAEZ/H,OAAA,CAACT,SAAS;UACN+O,WAAW,EAAC,yFAAyF;UACrGC,GAAG,EAAC;QAAoD;UAAAlL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC,eAEFxD,OAAA,CAAC0G,aAAa;UAACC,MAAM,EAAE8B,SAAU;UAAC7B,IAAI,EAAEA;QAAK;UAAAvD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChDxD,OAAA,CAACwO,SAAS;UAACtH,cAAc,EAAEA,cAAe;UAAC2B,eAAe,EAAEA;QAAgB;UAAAxF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAG9EmE,YAAY,iBACT3H,OAAA,CAACR,MAAM;UAACiP,QAAQ,EAAE9G,YAAa;UAACxC,IAAI,EAAE5E,QAAS;UAAAwH,QAAA,eAC3C/H,OAAA,CAACP,KAAK;YAAAsI,QAAA,eACF/H,OAAA;cAAA+H,QAAA,gBACI/H,OAAA;gBAAA+H,QAAA,EAAQ;cAAa;gBAAA1E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAAxD,OAAA;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACnCmE,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACI,YAAY,CAAC,CAAC,CAAC,CAACJ,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAlE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACX,EAGAoF,YAAY,iBACT5I,OAAA,CAACR,MAAM;UAACiP,QAAQ,EAAE7F,YAAa;UAACzD,IAAI,EAAEzE,gBAAiB;UAAAqH,QAAA,eACnD/H,OAAA,CAACP,KAAK;YAAAsI,QAAA,eACF/H,OAAA;cAAA+H,QAAA,gBACI/H,OAAA;gBAAA+H,QAAA,EAAQ;cAAe;gBAAA1E,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAAAxD,OAAA;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACrCoF,YAAY,CAAC,CAAC,CAAC,CAACrB,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE,EAACqB,YAAY,CAAC,CAAC,CAAC,CAACrB,OAAO,CAAC,CAAC,CAAC;YAAA;cAAAlE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CACX,EAGA4E,QAAQ,CAACxE,GAAG,CAAC+G,IAAI,iBACd3K,OAAA,CAACR,MAAM;UAEHiP,QAAQ,EAAE,CAAC9D,IAAI,CAACrD,QAAQ,EAAEqD,IAAI,CAACnD,SAAS,CAAE;UAC1CrC,IAAI,EAAElF,WAAY;UAClBoO,GAAG,EAAGA,GAAG,IAAKtE,cAAc,CAACY,IAAI,CAACX,EAAE,EAAEqE,GAAG,CAAE;UAAAtG,QAAA,eAE3C/H,OAAA,CAACP,KAAK;YAAAsI,QAAA,eACF/H,OAAA;cAAA+H,QAAA,gBACI/H,OAAA;gBAAA+H,QAAA,EAAS4C,IAAI,CAACI;cAAI;gBAAA1H,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAS,CAAC,eAAAxD,OAAA;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,EACjCoF,YAAY,iBACT5I,OAAA;gBAAA+H,QAAA,GAAM,YACQ,EAACmF,cAAc,CACrBvB,iBAAiB,CACb/C,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,CAAC,CAAC,CAAC,EAChC+B,IAAI,CAACrD,QAAQ,EAAEqD,IAAI,CAACnD,SACxB,CACJ,CAAC;cAAA;gBAAAnE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACC,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GAnBHmH,IAAI,CAACX,EAAE;UAAA3G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAoBR,CACX,CAAC,EAGDoF,YAAY,IAAIO,YAAY,IAAI,CAACI,cAAc,iBAC5CvJ,OAAA,CAACmE,cAAc;UAEXrB,UAAU,EAAE8F,YAAa,CAAC;UAAA;UAC1B7F,QAAQ,EAAE,CAACoG,YAAY,CAAC7B,QAAQ,EAAE6B,YAAY,CAAC3B,SAAS,CAAE;UAC1DxE,KAAK,EAAC,SAAS;UACfC,MAAM,EAAE,CAAE;UACVmB,gBAAgB,EAAEA,gBAAiB;UACnCC,eAAe,EAAEwJ;QAAoB,GANhC,SAASxE,UAAU,EAAE;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAO7B,CACJ,EAGAoF,YAAY,IAAIO,YAAY,IAAII,cAAc,iBAC3CvJ,OAAA,CAAC6C,cAAc;UAEXC,UAAU,EAAE8F,YAAa,CAAC;UAAA;UAC1B7F,QAAQ,EAAE,CAACoG,YAAY,CAAC7B,QAAQ,EAAE6B,YAAY,CAAC3B,SAAS,CAAE;UAC1DxE,KAAK,EAAC,SAAS;UACfC,MAAM,EAAE;QAAE,GAJL,UAAUwG,aAAa,EAAE;UAAApG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKjC,CACJ,eAGDxD,OAAA;UAAKiF,SAAS,EAAC,cAAc;UAAA8C,QAAA,eACzB/H,OAAA,CAAC0H,cAAc;YACXC,YAAY,EAAEA,YAAa;YAC3BC,OAAO,EAAEuD;UAAmB;YAAA9H,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;;AAED;AAAA2E,GAAA,CAlhBMF,aAAa;AAAAyG,GAAA,GAAbzG,aAAa;AAmhBnB,MAAMuG,SAAS,GAAGA,CAAC;EAAEtH,cAAc;EAAE2B;AAAgB,CAAC,KAAK;EAAA8F,GAAA;EACvDjP,YAAY,CAAC;IACT0H,KAAK,EAAGvF,CAAC,IAAK;MACV,MAAM;QAAEwE,GAAG;QAAEC;MAAI,CAAC,GAAGzE,CAAC,CAACwF,MAAM;MAC7BH,cAAc,CAAC;QACXI,QAAQ,EAAEjB,GAAG,CAACkB,OAAO,CAAC,CAAC,CAAC;QACxBC,SAAS,EAAElB,GAAG,CAACiB,OAAO,CAAC,CAAC;MAC5B,CAAC,CAAC;MACFsB,eAAe,CAAC,CAACxC,GAAG,EAAEC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjC;EACJ,CAAC,CAAC;EAEF,OAAO,IAAI;AACf,CAAC;AAACqI,GAAA,CAbIH,SAAS;EAAA,QACX9O,YAAY;AAAA;AAAAkP,GAAA,GADVJ,SAAS;AAef,eAAevG,aAAa;AAAC,IAAAxE,EAAA,EAAAgD,GAAA,EAAAO,GAAA,EAAAS,GAAA,EAAAO,GAAA,EAAA0G,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAApL,EAAA;AAAAoL,YAAA,CAAApI,GAAA;AAAAoI,YAAA,CAAA7H,GAAA;AAAA6H,YAAA,CAAApH,GAAA;AAAAoH,YAAA,CAAA7G,GAAA;AAAA6G,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}