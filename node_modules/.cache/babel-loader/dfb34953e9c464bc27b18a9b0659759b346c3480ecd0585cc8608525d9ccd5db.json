{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  // Make sure this file exists in public folder\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n\n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Create a utility function to safely remove a routing control\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n  try {\n    // Safely clear routes before removing control\n    if (routingControl._router) {\n      routingControl._router._routes = [];\n    }\n\n    // Clear any planned routes\n    if (routingControl._plan) {\n      routingControl._plan.setWaypoints([]);\n    }\n\n    // Then remove the control\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Component to handle routing between points using a simple approach without OSRM\nconst RoutingControl = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  setIsPathLoading,\n  onRoutingFailed\n}) => {\n  _s();\n  const map = useMap();\n  const routingControlRef = useRef(null);\n\n  // Handle cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (routingControlRef.current && map) {\n        safelyRemoveRoutingControl(routingControlRef.current, map);\n        routingControlRef.current = null;\n      }\n    };\n  }, [map]);\n  useEffect(() => {\n    console.log(\"Creating route with startPoint:\", startPoint, \"endPoint:\", endPoint);\n\n    // Clear previous routing control\n    if (routingControlRef.current && map) {\n      safelyRemoveRoutingControl(routingControlRef.current, map);\n      routingControlRef.current = null;\n    }\n\n    // If we don't have both points, don't create a new routing control\n    if (!startPoint || !endPoint) {\n      setIsPathLoading(false);\n      return;\n    }\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n    try {\n      // Create a simple polyline routing control instead of using OSRM\n      const routingControl = L.Routing.control({\n        waypoints: [L.latLng(startPoint[0], startPoint[1]), L.latLng(endPoint[0], endPoint[1])],\n        // Don't specify a router - let Leaflet handle it internally\n        useZoomParameter: false,\n        showAlternatives: false,\n        fitSelectedRoutes: false,\n        show: false,\n        // Don't show the routing interface\n        lineOptions: {\n          styles: [{\n            color: color,\n            opacity: 0.7,\n            weight: weight\n          }],\n          extendToWaypoints: true,\n          missingRouteTolerance: 10\n        },\n        createMarker: () => null,\n        // No markers from routing \n        addWaypoints: false,\n        draggableWaypoints: false,\n        routeWhileDragging: false\n      });\n\n      // Add to map with a slight delay to ensure map is ready\n      setTimeout(() => {\n        try {\n          if (map) {\n            routingControl.addTo(map);\n            console.log(\"Simple routing control added to map\");\n            routingControlRef.current = routingControl;\n\n            // End loading state after a brief delay (simulate routing calculation)\n            setTimeout(() => {\n              setIsPathLoading(false);\n            }, 500);\n          }\n        } catch (addError) {\n          console.error(\"Error adding routing control:\", addError);\n          if (onRoutingFailed) onRoutingFailed();\n          setIsPathLoading(false);\n        }\n      }, 100);\n      return () => {\n        if (routingControlRef.current && map) {\n          safelyRemoveRoutingControl(routingControlRef.current, map);\n          routingControlRef.current = null;\n        }\n        setIsPathLoading(false);\n      };\n    } catch (error) {\n      console.error(\"Error setting up routing:\", error);\n      if (onRoutingFailed) onRoutingFailed();\n      setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n  return null;\n};\n\n// Component to update map center when user location changes\n_s(RoutingControl, \"ShuARGfR1HN0DfW1LRGQ0q0mgoQ=\", false, function () {\n  return [useMap];\n});\n_c = RoutingControl;\nconst MapController = ({\n  center,\n  zoom\n}) => {\n  _s2();\n  const map = useMap();\n  useEffect(() => {\n    if (center) {\n      map.setView(center, zoom || map.getZoom());\n    }\n  }, [map, center, zoom]);\n  return null;\n};\n\n// Component to handle map clicks\n_s2(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c2 = MapController;\nconst MapClickHandler = ({\n  setCoordinates\n}) => {\n  _s3();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n    }\n  });\n  return null;\n};\n\n// Button to center on user's location\n_s3(MapClickHandler, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c3 = MapClickHandler;\nconst LocationButton = ({\n  userLocation,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"location-button\",\n    onClick: onClick,\n    disabled: !userLocation,\n    title: \"Center map on your location\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-location-arrow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), \" Your Current Location\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n};\n_c4 = LocationButton;\nconst BusStopSearch = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s4();\n  const [busStops, setBusStops] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n  const [zoom, setZoom] = useState(15);\n  const [coordinates, setCoordinates] = useState({\n    latitude: '',\n    longitude: ''\n  });\n  // Initialize searchMarker with current coordinates or map center\n  const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [hasSearched, setHasSearched] = useState(false);\n  const [isPathLoading, setIsPathLoading] = useState(false);\n  const [selectedStop, setSelectedStop] = useState(null);\n  const [routingKey, setRoutingKey] = useState(0);\n  const [routingFailMessage, setRoutingFailMessage] = useState(null);\n  const mapRef = useRef(null);\n  const markerRefs = useRef({});\n\n  // Register marker references for later access\n  const registerMarker = (id, markerRef) => {\n    if (markerRef) {\n      markerRefs.current[id] = markerRef;\n    }\n  };\n\n  // Initialize coordinates with user's location as soon as it's available\n  useEffect(() => {\n    if (userLocation) {\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n      setMapCenter(userLocation);\n      setSearchMarker(userLocation); // Also update the search marker when user location changes\n    }\n  }, [userLocation]);\n\n  // Fetch all bus stops directly from the database\n  const fetchBusStops = async () => {\n    try {\n      console.log('Fetching bus stops from API');\n      const response = await api.get('/bus_stops/getAllBusStops');\n      console.log('Raw API response:', response.data);\n\n      // Extract the actual bus stops array from the response\n      // The API returns { statusCode, data, message } structure\n      if (response.data && response.data.data) {\n        return response.data.data; // Return just the array of bus stops\n      } else {\n        console.error('Invalid response format:', response.data);\n        return [];\n      }\n    } catch (error) {\n      console.error('Error fetching bus stops from database:', error);\n      throw error;\n    }\n  };\n\n  // Load bus stops on component mount\n  useEffect(() => {\n    const loadBusStops = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBusStops();\n\n        // Ensure data is an array before mapping\n        const busStopsArray = Array.isArray(data) ? data : [];\n\n        // Clean and format the data\n        const cleanedData = busStopsArray.map(stop => ({\n          ...stop,\n          latitude: parseFloat(stop.latitude),\n          longitude: parseFloat(stop.longitude)\n        }));\n        setBusStops(cleanedData);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading bus stops:\", err);\n        setError(\"Failed to load bus stops. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadBusStops();\n  }, []);\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCoordinates(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Center map on user location with maximum zoom\n  const handleCenterOnUser = () => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n      setZoom(19); // Maximum zoom\n\n      // Also update the coordinate inputs to match user location\n      setCoordinates({\n        latitude: userLocation[0].toFixed(6),\n        longitude: userLocation[1].toFixed(6)\n      });\n    }\n  };\n\n  // Function to search for nearby bus stops\n  const handleSearch = () => {\n    try {\n      const lat = parseFloat(coordinates.latitude);\n      const lng = parseFloat(coordinates.longitude);\n\n      // Validate coordinates\n      if (isNaN(lat) || isNaN(lng) || lat < -90 || lat > 90 || lng < -180 || lng > 180) {\n        setError(\"Please enter valid coordinates\");\n        return;\n      }\n      setError(null);\n      setSearchMarker([lat, lng]);\n\n      // Clear previous routes by clearing selected stop and changing routing key\n      setSelectedStop(null);\n      setRoutingKey(prevKey => prevKey + 1);\n      setRoutingFailMessage(null);\n\n      // Clear routes cache when performing a new search\n      // This helps avoid memory issues with too many cached routes\n      if (typeof routeCache !== 'undefined' && routeCache.size > 20) {\n        routeCache.clear();\n      }\n\n      // Calculate distance from specified point to all bus stops\n      const results = busStops.map(stop => {\n        // Calculate distance in meters using Haversine formula\n        const distance = calculateDistance(lat, lng, stop.latitude, stop.longitude);\n        return {\n          ...stop,\n          distance: distance\n        };\n      });\n\n      // Sort by distance (closest first)\n      const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n      setSearchResults(sortedResults);\n      setHasSearched(true);\n\n      // Center map on search marker\n      setMapCenter([lat, lng]);\n      setZoom(16);\n    } catch (error) {\n      console.error(\"Search error:\", error);\n      setError(\"An error occurred during search\");\n    }\n  };\n\n  // Handle click on search result item\n  const handleStopSelect = stop => {\n    // Set the map center and zoom\n    setMapCenter([stop.latitude, stop.longitude]);\n    setZoom(18);\n\n    // Clear previous path and set the new selected stop\n    setSelectedStop(null);\n    setRoutingKey(prevKey => prevKey + 1);\n    setRoutingFailMessage(null);\n\n    // Open the popup for this marker\n    const marker = markerRefs.current[stop.id];\n    if (marker) {\n      marker.openPopup();\n    }\n  };\n\n  // Calculate distance between two coordinates using Haversine formula\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371e3; // Earth's radius in meters\n    const φ1 = lat1 * Math.PI / 180;\n    const φ2 = lat2 * Math.PI / 180;\n    const Δφ = (lat2 - lat1) * Math.PI / 180;\n    const Δλ = (lon1 - lon2) * Math.PI / 180;\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) + Math.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c; // Distance in meters\n  };\n\n  // Format distance for display\n  const formatDistance = meters => {\n    if (meters < 1000) {\n      return `${Math.round(meters)} meters`;\n    } else {\n      return `${(meters / 1000).toFixed(2)} km`;\n    }\n  };\n  useEffect(() => {\n    // Ensure loading screen doesn't stay forever - reduce timeout\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n      }, 7000); // Reduced maximum timeout to 7 seconds\n\n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading]);\n\n  // Pre-configure routing machine on component mount for faster first load\n  useEffect(() => {\n    // Configure global Leaflet settings\n    if (typeof L !== 'undefined') {\n      // Add safety methods to handle the removeLayer error\n      const originalRemoveLayer = L.Map.prototype.removeLayer;\n      L.Map.prototype.removeLayer = function (layer) {\n        if (!layer) {\n          console.warn(\"Attempted to remove null layer\");\n          return this;\n        }\n        if (!this.hasLayer(layer)) {\n          return this;\n        }\n        try {\n          return originalRemoveLayer.call(this, layer);\n        } catch (e) {\n          console.warn(\"Protected from removeLayer error:\", e);\n          return this;\n        }\n      };\n\n      // Fix specifically for the _clearLines method that's causing the error\n      if (L.Routing && L.Routing.Line && L.Routing.Line.prototype) {\n        const originalClearLines = L.Routing.Line.prototype._clearLines;\n        L.Routing.Line.prototype._clearLines = function () {\n          try {\n            // Add defensive checks before calling original method\n            if (!this._map || !this._route) {\n              return;\n            }\n\n            // Check if the route has _layers property before using it\n            if (this._route && typeof this._route._layers !== 'undefined') {\n              originalClearLines.call(this);\n            } else if (this._map && this._route) {\n              // Alternative cleanup if _layers doesn't exist\n              try {\n                this._map.removeLayer(this._route);\n              } catch (e) {\n                console.warn(\"Protected from inner removeLayer error:\", e);\n              }\n            }\n          } catch (e) {\n            console.warn(\"Protected from _clearLines error:\", e);\n          }\n        };\n      }\n\n      // Set up Leaflet Routing Machine defaults for better performance\n      if (L.Routing) {\n        L.Routing.timeout = 5000; // 5 second timeout\n\n        if (L.Routing.Control.prototype.options) {\n          L.Routing.Control.prototype.options.showAlternatives = false;\n          L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n          L.Routing.Control.prototype.options.show = false;\n        }\n      }\n    }\n  }, []);\n\n  // Clear any routes when component unmounts\n  useEffect(() => {\n    return () => {\n      // Clear any cached data\n      if (window._routeCache) {\n        window._routeCache.clear();\n      }\n    };\n  }, []);\n\n  // Handle routing failure\n  const handleRoutingFailed = () => {\n    // Set an error message instead of showing direct path\n    setRoutingFailMessage(\"Routing failed. Please try again later.\");\n\n    // Auto-hide the message after 5 seconds\n    setTimeout(() => {\n      setRoutingFailMessage(null);\n    }, 5000);\n  };\n  useEffect(() => {\n    // Ensure loading screen doesn't stay forever\n    if (isPathLoading) {\n      const timeout = setTimeout(() => {\n        setIsPathLoading(false);\n        // If still loading after timeout, show direct path\n        if (selectedStop && userLocation) {\n          handleRoutingFailed();\n        }\n      }, 5000); // Further reduced maximum timeout to 5 seconds\n\n      return () => clearTimeout(timeout);\n    }\n  }, [isPathLoading, selectedStop, userLocation]);\n\n  // Enhanced cleanup when component unmounts\n  useEffect(() => {\n    return () => {\n      // Clear any pending routing operations\n      if (routeCache.size > 0) {\n        routeCache.clear();\n      }\n\n      // Reset all states to prevent memory leaks\n      setSelectedStop(null);\n      setIsPathLoading(false);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stop-search\",\n    children: [isPathLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full-page-loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Drawing path. Please wait...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 17\n    }, this), routingFailMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"routing-fail-message\",\n      children: routingFailMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Search Bus Stops\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 21\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"latitude\",\n              name: \"latitude\",\n              value: coordinates.latitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 22.3190\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 621,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"longitude\",\n              name: \"longitude\",\n              value: coordinates.longitude,\n              onChange: handleInputChange,\n              placeholder: \"e.g. 87.3091\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"help-text\",\n            children: \"Click on the map to set coordinates or use your current location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"search-btn\",\n            onClick: handleSearch,\n            disabled: loading,\n            children: loading ? 'Loading...' : 'Find Nearest Bus Stops'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 614,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-panel-bottom\",\n        children: [hasSearched && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-results\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Nearest Bus Stops\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"results-list\",\n            children: searchResults.map((stop, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"result-item\",\n              onClick: () => handleStopSelect(stop),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-index\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"result-details\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: stop.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 668,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"distance\",\n                  children: [\"Distance: \", formatDistance(stop.distance)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 669,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"coordinates\",\n                  children: [stop.latitude.toFixed(6), \", \", stop.longitude.toFixed(6)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 41\n              }, this)]\n            }, stop.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 25\n        }, this), hasSearched && searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-results\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No bus stops found near the selected location.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter,\n        zoom: zoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        ref: mapRef,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          center: mapCenter,\n          zoom: zoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MapEvents, {\n          setCoordinates: setCoordinates,\n          setSearchMarker: setSearchMarker\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 21\n        }, this), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Your Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 67\n              }, this), userLocation[0].toFixed(6), \", \", userLocation[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 25\n        }, this), searchMarker && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchMarker,\n          icon: searchMarkerIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Search Location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 720,\n                columnNumber: 69\n              }, this), searchMarker[0].toFixed(6), \", \", searchMarker[1].toFixed(6)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 718,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 717,\n          columnNumber: 25\n        }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n          position: [stop.latitude, stop.longitude],\n          icon: busStopIcon,\n          ref: ref => registerMarker(stop.id, ref),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: stop.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 65\n              }, this), searchMarker && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Distance: \", formatDistance(calculateDistance(searchMarker[0], searchMarker[1], stop.latitude, stop.longitude))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 735,\n            columnNumber: 29\n          }, this)\n        }, stop.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 25\n        }, this)), searchMarker && selectedStop && /*#__PURE__*/_jsxDEV(RoutingControl, {\n          startPoint: searchMarker // Using search marker as start point\n          ,\n          endPoint: [selectedStop.latitude, selectedStop.longitude],\n          color: \"#ff6b6b\",\n          weight: 4,\n          setIsPathLoading: setIsPathLoading,\n          onRoutingFailed: handleRoutingFailed\n        }, `route-${routingKey}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"map-controls\",\n          children: /*#__PURE__*/_jsxDEV(LocationButton, {\n            userLocation: userLocation,\n            onClick: handleCenterOnUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 688,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 9\n  }, this);\n};\n\n// Updated component to handle map clicks\n_s4(BusStopSearch, \"NZPeQbrtIgzOkXMf4V6VzV1UJbE=\");\n_c5 = BusStopSearch;\nconst MapEvents = ({\n  setCoordinates,\n  setSearchMarker\n}) => {\n  _s5();\n  useMapEvents({\n    click: e => {\n      const {\n        lat,\n        lng\n      } = e.latlng;\n      setCoordinates({\n        latitude: lat.toFixed(6),\n        longitude: lng.toFixed(6)\n      });\n      setSearchMarker([lat, lng]); // Update marker immediately\n    }\n  });\n  return null;\n};\n_s5(MapEvents, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n  return [useMapEvents];\n});\n_c6 = MapEvents;\nexport default BusStopSearch;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"RoutingControl\");\n$RefreshReg$(_c2, \"MapController\");\n$RefreshReg$(_c3, \"MapClickHandler\");\n$RefreshReg$(_c4, \"LocationButton\");\n$RefreshReg$(_c5, \"BusStopSearch\");\n$RefreshReg$(_c6, \"MapEvents\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMapEvents","useMap","Polyline","L","api","jsxDEV","_jsxDEV","busStopIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","userIcon","shadowUrl","shadowSize","searchMarkerIcon","configureRoutingMachine","Routing","Itinerary","prototype","options","createGeocoderPane","timeout","Control","showAlternatives","useZoomParameter","routeWhileDragging","addWaypoints","waypoints","createMarker","geocoder","fitSelectedRoutes","ErrorControl","_routingErrorHandler","e","console","warn","Line","originalClearLines","_clearLines","_map","_route","_layers","call","removeLayer","routeCache","Map","getRouteCacheKey","start","end","safelyRemoveRoutingControl","routingControl","map","_router","_routes","_plan","setWaypoints","removeControl","error","RoutingControl","startPoint","endPoint","color","weight","setIsPathLoading","onRoutingFailed","_s","routingControlRef","current","log","control","latLng","show","lineOptions","styles","opacity","extendToWaypoints","missingRouteTolerance","draggableWaypoints","setTimeout","addTo","addError","_c","MapController","center","zoom","_s2","setView","getZoom","_c2","MapClickHandler","setCoordinates","_s3","click","lat","lng","latlng","latitude","toFixed","longitude","_c3","LocationButton","userLocation","onClick","className","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c4","BusStopSearch","setUserLocation","_s4","busStops","setBusStops","loading","setLoading","setError","mapCenter","setMapCenter","setZoom","coordinates","searchMarker","setSearchMarker","searchResults","setSearchResults","hasSearched","setHasSearched","isPathLoading","selectedStop","setSelectedStop","routingKey","setRoutingKey","routingFailMessage","setRoutingFailMessage","mapRef","markerRefs","registerMarker","id","markerRef","fetchBusStops","response","get","data","loadBusStops","busStopsArray","Array","isArray","cleanedData","stop","parseFloat","err","handleInputChange","name","value","target","prev","handleCenterOnUser","handleSearch","isNaN","prevKey","size","clear","results","distance","calculateDistance","sortedResults","sort","a","b","handleStopSelect","marker","openPopup","lat1","lon1","lat2","lon2","R","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","c","atan2","sqrt","formatDistance","meters","round","clearTimeout","originalRemoveLayer","layer","hasLayer","window","_routeCache","handleRoutingFailed","htmlFor","type","onChange","placeholder","length","index","style","height","width","ref","attribution","url","MapEvents","position","icon","_c5","_s5","_c6","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMapEvents, useMap, Polyline } from 'react-leaflet';\nimport L from 'leaflet';\nimport api from '../../utils/api';\nimport 'leaflet-routing-machine';\nimport 'leaflet-routing-machine/dist/leaflet-routing-machine.css';\nimport '../../css/user.css';\n\n// Bus stop icon\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png', // Make sure this file exists in public folder\n    iconSize: [24, 24],\n    iconAnchor: [12, 24],\n    popupAnchor: [0, -24]\n});\n\n// User location icon - BLUE color as requested\nconst userIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Search marker icon - RED color as requested\nconst searchMarkerIcon = new L.Icon({\n    iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n    popupAnchor: [1, -34],\n    shadowSize: [41, 41]\n});\n\n// Enhanced configuration for faster OSRM routing\nfunction configureRoutingMachine() {\n  if (typeof L !== 'undefined' && L.Routing) {\n    // Optimize global routing options for speed\n    L.Routing.Itinerary.prototype.options.createGeocoderPane = false;\n    L.Routing.timeout = 5 * 1000; // Reduced timeout to 5 seconds\n    \n    // Disable unnecessary features\n    if (L.Routing.Control.prototype.options) {\n      L.Routing.Control.prototype.options.showAlternatives = false;\n      L.Routing.Control.prototype.options.useZoomParameter = false;\n      L.Routing.Control.prototype.options.routeWhileDragging = false;\n      L.Routing.Control.prototype.options.addWaypoints = false;\n      L.Routing.Control.prototype.options.waypoints = [];\n      L.Routing.Control.prototype.options.createMarker = null;\n      L.Routing.Control.prototype.options.geocoder = null;\n      L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n    }\n\n    // Override the error handling globally\n    if (L.Routing.ErrorControl && L.Routing.ErrorControl.prototype) {\n      L.Routing.ErrorControl.prototype._routingErrorHandler = function (e) {\n        console.warn(\"Handled routing error:\", e);\n        // No UI updates or errors thrown\n      };\n    }\n\n    // Fix for \"Cannot read properties of null (reading 'removeLayer')\" error\n    if (L.Routing.Line && L.Routing.Line.prototype) {\n      const originalClearLines = L.Routing.Line.prototype._clearLines;\n      L.Routing.Line.prototype._clearLines = function () {\n        try {\n          // Safety check before calling the original function\n          if (this._map && this._route) {\n            // Additional null checks before accessing _layers\n            if (this._route._layers) {\n              originalClearLines.call(this);\n            } else {\n              // Alternative cleanup if _layers doesn't exist\n              if (this._map && this._route) {\n                try {\n                  this._map.removeLayer(this._route);\n                } catch (e) {\n                  console.warn(\"Protected from removeLayer error:\", e);\n                }\n              }\n            }\n          }\n        } catch (e) {\n          console.warn(\"Protected from _clearLines error:\", e);\n          // Don't attempt manual cleanup here as it's causing the error\n        }\n      };\n    }\n  }\n}\n\n// Route caching system to avoid repeated requests for the same route\nconst routeCache = new Map();\n\n// Calculate cache key for routes\nconst getRouteCacheKey = (start, end) => {\n  return `${start[0]},${start[1]}_${end[0]},${end[1]}`;\n};\n\n// Create a utility function to safely remove a routing control\nconst safelyRemoveRoutingControl = (routingControl, map) => {\n  if (!routingControl || !map) return;\n\n  try {\n    // Safely clear routes before removing control\n    if (routingControl._router) {\n        routingControl._router._routes = [];\n    }\n    \n    // Clear any planned routes\n    if (routingControl._plan) {\n        routingControl._plan.setWaypoints([]);\n    }\n    \n    // Then remove the control\n    map.removeControl(routingControl);\n  } catch (error) {\n    console.warn(\"Safe removal failed:\", error);\n  }\n};\n\n// Component to handle routing between points using a simple approach without OSRM\nconst RoutingControl = ({ startPoint, endPoint, color = '#3388ff', weight = 4, setIsPathLoading, onRoutingFailed }) => {\n  const map = useMap();\n  const routingControlRef = useRef(null);\n  \n  // Handle cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (routingControlRef.current && map) {\n        safelyRemoveRoutingControl(routingControlRef.current, map);\n        routingControlRef.current = null;\n      }\n    };\n  }, [map]);\n  \n  useEffect(() => {\n    console.log(\"Creating route with startPoint:\", startPoint, \"endPoint:\", endPoint);\n    \n    // Clear previous routing control\n    if (routingControlRef.current && map) {\n        safelyRemoveRoutingControl(routingControlRef.current, map);\n        routingControlRef.current = null;\n    }\n\n    // If we don't have both points, don't create a new routing control\n    if (!startPoint || !endPoint) {\n        setIsPathLoading(false);\n        return;\n    }\n\n    // Indicate loading has started\n    setIsPathLoading(true);\n\n    try {\n        // Create a simple polyline routing control instead of using OSRM\n        const routingControl = L.Routing.control({\n            waypoints: [\n                L.latLng(startPoint[0], startPoint[1]),\n                L.latLng(endPoint[0], endPoint[1])\n            ],\n            // Don't specify a router - let Leaflet handle it internally\n            useZoomParameter: false,\n            showAlternatives: false,\n            fitSelectedRoutes: false,\n            show: false, // Don't show the routing interface\n            lineOptions: {\n                styles: [{ color: color, opacity: 0.7, weight: weight }],\n                extendToWaypoints: true,\n                missingRouteTolerance: 10\n            },\n            createMarker: () => null, // No markers from routing \n            addWaypoints: false,\n            draggableWaypoints: false,\n            routeWhileDragging: false\n        });\n\n        // Add to map with a slight delay to ensure map is ready\n        setTimeout(() => {\n            try {\n                if (map) {\n                    routingControl.addTo(map);\n                    console.log(\"Simple routing control added to map\");\n                    routingControlRef.current = routingControl;\n                    \n                    // End loading state after a brief delay (simulate routing calculation)\n                    setTimeout(() => {\n                        setIsPathLoading(false);\n                    }, 500);\n                }\n            } catch (addError) {\n                console.error(\"Error adding routing control:\", addError);\n                if (onRoutingFailed) onRoutingFailed();\n                setIsPathLoading(false);\n            }\n        }, 100);\n\n        return () => {\n            if (routingControlRef.current && map) {\n                safelyRemoveRoutingControl(routingControlRef.current, map);\n                routingControlRef.current = null;\n            }\n            setIsPathLoading(false);\n        };\n    } catch (error) {\n        console.error(\"Error setting up routing:\", error);\n        if (onRoutingFailed) onRoutingFailed();\n        setIsPathLoading(false);\n    }\n  }, [map, startPoint, endPoint, color, weight, setIsPathLoading, onRoutingFailed]);\n\n  return null;\n};\n\n// Component to update map center when user location changes\nconst MapController = ({ center, zoom }) => {\n    const map = useMap();\n    \n    useEffect(() => {\n        if (center) {\n            map.setView(center, zoom || map.getZoom());\n        }\n    }, [map, center, zoom]);\n    \n    return null;\n};\n\n// Component to handle map clicks\nconst MapClickHandler = ({ setCoordinates }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n        }\n    });\n    \n    return null;\n};\n\n// Button to center on user's location\nconst LocationButton = ({ userLocation, onClick }) => {\n    return (\n        <button \n            className=\"location-button\" \n            onClick={onClick}\n            disabled={!userLocation}\n            title=\"Center map on your location\"\n        >\n            <i className=\"fas fa-location-arrow\"></i> Your Current Location\n        </button>\n    );\n};\n\nconst BusStopSearch = ({ userLocation, setUserLocation }) => {\n    const [busStops, setBusStops] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [mapCenter, setMapCenter] = useState(userLocation || [22.3190, 87.3091]); // Default to user location if available\n    const [zoom, setZoom] = useState(15);\n    const [coordinates, setCoordinates] = useState({\n        latitude: '',\n        longitude: ''\n    });\n    // Initialize searchMarker with current coordinates or map center\n    const [searchMarker, setSearchMarker] = useState(userLocation || [22.3190, 87.3091]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [hasSearched, setHasSearched] = useState(false);\n    const [isPathLoading, setIsPathLoading] = useState(false);\n    const [selectedStop, setSelectedStop] = useState(null);\n    const [routingKey, setRoutingKey] = useState(0);\n    const [routingFailMessage, setRoutingFailMessage] = useState(null);\n    \n    const mapRef = useRef(null);\n    const markerRefs = useRef({});\n    \n    // Register marker references for later access\n    const registerMarker = (id, markerRef) => {\n        if (markerRef) {\n            markerRefs.current[id] = markerRef;\n        }\n    };\n\n    // Initialize coordinates with user's location as soon as it's available\n    useEffect(() => {\n        if (userLocation) {\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n            setMapCenter(userLocation);\n            setSearchMarker(userLocation); // Also update the search marker when user location changes\n        }\n    }, [userLocation]);\n    \n    // Fetch all bus stops directly from the database\n    const fetchBusStops = async () => {\n        try {\n            console.log('Fetching bus stops from API');\n            const response = await api.get('/bus_stops/getAllBusStops');\n            console.log('Raw API response:', response.data);\n            \n            // Extract the actual bus stops array from the response\n            // The API returns { statusCode, data, message } structure\n            if (response.data && response.data.data) {\n                return response.data.data; // Return just the array of bus stops\n            } else {\n                console.error('Invalid response format:', response.data);\n                return [];\n            }\n        } catch (error) {\n            console.error('Error fetching bus stops from database:', error);\n            throw error;\n        }\n    };\n    \n    // Load bus stops on component mount\n    useEffect(() => {\n        const loadBusStops = async () => {\n            try {\n                setLoading(true);\n                const data = await fetchBusStops();\n                \n                // Ensure data is an array before mapping\n                const busStopsArray = Array.isArray(data) ? data : [];\n                \n                // Clean and format the data\n                const cleanedData = busStopsArray.map(stop => ({\n                    ...stop,\n                    latitude: parseFloat(stop.latitude),\n                    longitude: parseFloat(stop.longitude)\n                }));\n                \n                setBusStops(cleanedData);\n                setError(null);\n            } catch (err) {\n                console.error(\"Error loading bus stops:\", err);\n                setError(\"Failed to load bus stops. Please try again later.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        loadBusStops();\n    }, []);\n    \n    // Handle form input changes\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setCoordinates(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n    \n    // Center map on user location with maximum zoom\n    const handleCenterOnUser = () => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n            setZoom(19); // Maximum zoom\n\n            // Also update the coordinate inputs to match user location\n            setCoordinates({\n                latitude: userLocation[0].toFixed(6),\n                longitude: userLocation[1].toFixed(6)\n            });\n        }\n    };\n    \n    // Function to search for nearby bus stops\n    const handleSearch = () => {\n        try {\n            const lat = parseFloat(coordinates.latitude);\n            const lng = parseFloat(coordinates.longitude);\n            \n            // Validate coordinates\n            if (isNaN(lat) || isNaN(lng) || \n                lat < -90 || lat > 90 || \n                lng < -180 || lng > 180) {\n                setError(\"Please enter valid coordinates\");\n                return;\n            }\n            \n            setError(null);\n            setSearchMarker([lat, lng]);\n            \n            // Clear previous routes by clearing selected stop and changing routing key\n            setSelectedStop(null);\n            setRoutingKey(prevKey => prevKey + 1);\n            setRoutingFailMessage(null);\n            \n            // Clear routes cache when performing a new search\n            // This helps avoid memory issues with too many cached routes\n            if (typeof routeCache !== 'undefined' && routeCache.size > 20) {\n                routeCache.clear();\n            }\n            \n            // Calculate distance from specified point to all bus stops\n            const results = busStops.map(stop => {\n                // Calculate distance in meters using Haversine formula\n                const distance = calculateDistance(\n                    lat, lng,\n                    stop.latitude, stop.longitude\n                );\n                \n                return {\n                    ...stop,\n                    distance: distance\n                };\n            });\n            \n            // Sort by distance (closest first)\n            const sortedResults = [...results].sort((a, b) => a.distance - b.distance);\n            setSearchResults(sortedResults);\n            setHasSearched(true);\n            \n            // Center map on search marker\n            setMapCenter([lat, lng]);\n            setZoom(16);\n        } catch (error) {\n            console.error(\"Search error:\", error);\n            setError(\"An error occurred during search\");\n        }\n    };\n    \n    // Handle click on search result item\n    const handleStopSelect = (stop) => {\n        // Set the map center and zoom\n        setMapCenter([stop.latitude, stop.longitude]);\n        setZoom(18);\n        \n        // Clear previous path and set the new selected stop\n        setSelectedStop(null);\n        setRoutingKey(prevKey => prevKey + 1);\n        setRoutingFailMessage(null);\n\n        // Open the popup for this marker\n        const marker = markerRefs.current[stop.id];\n        if (marker) {\n            marker.openPopup();\n        }\n    };\n    \n    // Calculate distance between two coordinates using Haversine formula\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        const R = 6371e3; // Earth's radius in meters\n        const φ1 = lat1 * Math.PI / 180;\n        const φ2 = lat2 * Math.PI / 180;\n        const Δφ = (lat2 - lat1) * Math.PI / 180;\n        const Δλ = (lon1 - lon2) * Math.PI / 180;\n        \n        const a = Math.sin(Δφ/2) * Math.sin(Δφ/2) +\n                Math.cos(φ1) * Math.cos(φ2) *\n                Math.sin(Δλ/2) * Math.sin(Δλ/2);\n        const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n        \n        return R * c; // Distance in meters\n    };\n    \n    // Format distance for display\n    const formatDistance = (meters) => {\n        if (meters < 1000) {\n            return `${Math.round(meters)} meters`;\n        } else {\n            return `${(meters / 1000).toFixed(2)} km`;\n        }\n    };\n    \n    useEffect(() => {\n        // Ensure loading screen doesn't stay forever - reduce timeout\n        if (isPathLoading) {\n            const timeout = setTimeout(() => {\n                setIsPathLoading(false);\n            }, 7000); // Reduced maximum timeout to 7 seconds\n            \n            return () => clearTimeout(timeout);\n        }\n    }, [isPathLoading]);\n    \n    // Pre-configure routing machine on component mount for faster first load\n    useEffect(() => {\n        // Configure global Leaflet settings\n        if (typeof L !== 'undefined') {\n            // Add safety methods to handle the removeLayer error\n            const originalRemoveLayer = L.Map.prototype.removeLayer;\n            L.Map.prototype.removeLayer = function(layer) {\n                if (!layer) {\n                    console.warn(\"Attempted to remove null layer\");\n                    return this;\n                }\n                if (!this.hasLayer(layer)) {\n                    return this;\n                }\n                try {\n                    return originalRemoveLayer.call(this, layer);\n                } catch (e) {\n                    console.warn(\"Protected from removeLayer error:\", e);\n                    return this;\n                }\n            };\n            \n            // Fix specifically for the _clearLines method that's causing the error\n            if (L.Routing && L.Routing.Line && L.Routing.Line.prototype) {\n                const originalClearLines = L.Routing.Line.prototype._clearLines;\n                L.Routing.Line.prototype._clearLines = function() {\n                    try {\n                        // Add defensive checks before calling original method\n                        if (!this._map || !this._route) {\n                            return;\n                        }\n                        \n                        // Check if the route has _layers property before using it\n                        if (this._route && typeof this._route._layers !== 'undefined') {\n                            originalClearLines.call(this);\n                        } else if (this._map && this._route) {\n                            // Alternative cleanup if _layers doesn't exist\n                            try {\n                                this._map.removeLayer(this._route);\n                            } catch (e) {\n                                console.warn(\"Protected from inner removeLayer error:\", e);\n                            }\n                        }\n                    } catch (e) {\n                        console.warn(\"Protected from _clearLines error:\", e);\n                    }\n                };\n            }\n            \n            // Set up Leaflet Routing Machine defaults for better performance\n            if (L.Routing) {\n                L.Routing.timeout = 5000; // 5 second timeout\n                \n                if (L.Routing.Control.prototype.options) {\n                    L.Routing.Control.prototype.options.showAlternatives = false;\n                    L.Routing.Control.prototype.options.fitSelectedRoutes = false;\n                    L.Routing.Control.prototype.options.show = false;\n                }\n            }\n        }\n    }, []);\n    \n    // Clear any routes when component unmounts\n    useEffect(() => {\n        return () => {\n            // Clear any cached data\n            if (window._routeCache) {\n                window._routeCache.clear();\n            }\n        };\n    }, []);\n    \n    // Handle routing failure\n    const handleRoutingFailed = () => {\n        // Set an error message instead of showing direct path\n        setRoutingFailMessage(\"Routing failed. Please try again later.\");\n        \n        // Auto-hide the message after 5 seconds\n        setTimeout(() => {\n            setRoutingFailMessage(null);\n        }, 5000);\n    };\n    \n    useEffect(() => {\n        // Ensure loading screen doesn't stay forever\n        if (isPathLoading) {\n            const timeout = setTimeout(() => {\n                setIsPathLoading(false);\n                // If still loading after timeout, show direct path\n                if (selectedStop && userLocation) {\n                    handleRoutingFailed();\n                }\n            }, 5000); // Further reduced maximum timeout to 5 seconds\n            \n            return () => clearTimeout(timeout);\n        }\n    }, [isPathLoading, selectedStop, userLocation]);\n    \n    // Enhanced cleanup when component unmounts\n    useEffect(() => {\n        return () => {\n            // Clear any pending routing operations\n            if (routeCache.size > 0) {\n                routeCache.clear();\n            }\n            \n            // Reset all states to prevent memory leaks\n            setSelectedStop(null);\n            setIsPathLoading(false);\n        };\n    }, []);\n    \n    return (\n        <div className=\"bus-stop-search\">\n            {/* Full-page loading overlay for OSRM loading */}\n            {isPathLoading && (\n                <div className=\"full-page-loading-overlay\">\n                    <div className=\"spinner\"></div>\n                    <div>Drawing path. Please wait...</div>\n                </div>\n            )}\n            \n            {/* Routing fail message */}\n            {routingFailMessage && (\n                <div className=\"routing-fail-message\">\n                    {routingFailMessage}\n                </div>\n            )}\n            \n            <div className=\"location-panel\">\n                <div className=\"location-panel-top\">\n                    <h2>Search Bus Stops</h2>\n                    {error && <div className=\"error-message\">{error}</div>}\n                    \n                    <div className=\"search-form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"latitude\">Latitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"latitude\" \n                                name=\"latitude\" \n                                value={coordinates.latitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 22.3190\"\n                            />\n                        </div>\n                        \n                        <div className=\"form-group\">\n                            <label htmlFor=\"longitude\">Longitude:</label>\n                            <input \n                                type=\"text\" \n                                id=\"longitude\" \n                                name=\"longitude\" \n                                value={coordinates.longitude} \n                                onChange={handleInputChange} \n                                placeholder=\"e.g. 87.3091\"\n                            />\n                        </div>\n                        \n                        <p className=\"help-text\">Click on the map to set coordinates or use your current location</p>\n                        \n                        <button \n                            className=\"search-btn\"\n                            onClick={handleSearch}\n                            disabled={loading}\n                        >\n                            {loading ? 'Loading...' : 'Find Nearest Bus Stops'}\n                        </button>\n                    </div>\n                </div>\n                \n                <div className=\"location-panel-bottom\">\n                    {hasSearched && searchResults.length > 0 && (\n                        <div className=\"search-results\">\n                            <h3>Nearest Bus Stops</h3>\n                            <div className=\"results-list\">\n                                {searchResults.map((stop, index) => (\n                                    <div \n                                        key={stop.id} \n                                        className=\"result-item\"\n                                        onClick={() => handleStopSelect(stop)}\n                                    >\n                                        <div className=\"result-index\">{index + 1}</div>\n                                        <div className=\"result-details\">\n                                            <h4>{stop.name}</h4>\n                                            <p className=\"distance\">Distance: {formatDistance(stop.distance)}</p>\n                                            <p className=\"coordinates\">\n                                                {stop.latitude.toFixed(6)}, {stop.longitude.toFixed(6)}\n                                            </p>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    )}\n                    \n                    {hasSearched && searchResults.length === 0 && (\n                        <div className=\"no-results\">\n                            <p>No bus stops found near the selected location.</p>\n                        </div>\n                    )}\n                </div>\n            </div>\n            \n            <div className=\"map-container\">\n                <MapContainer\n                    center={mapCenter}\n                    zoom={zoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    ref={mapRef}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n                    \n                    <MapController center={mapCenter} zoom={zoom} />\n                    <MapEvents setCoordinates={setCoordinates} setSearchMarker={setSearchMarker} />\n                    \n                    {/* Display user location */}\n                    {userLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Your Location</strong><br />\n                                    {userLocation[0].toFixed(6)}, {userLocation[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Always display search marker */}\n                    {searchMarker && (\n                        <Marker position={searchMarker} icon={searchMarkerIcon}>\n                            <Popup>\n                                <div>\n                                    <strong>Search Location</strong><br />\n                                    {searchMarker[0].toFixed(6)}, {searchMarker[1].toFixed(6)}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    )}\n                    \n                    {/* Display all bus stops */}\n                    {busStops.map(stop => (\n                        <Marker\n                            key={stop.id}\n                            position={[stop.latitude, stop.longitude]}\n                            icon={busStopIcon}\n                            ref={(ref) => registerMarker(stop.id, ref)}\n                        >\n                            <Popup>\n                                <div>\n                                    <strong>{stop.name}</strong><br />\n                                    {searchMarker && (\n                                        <span>\n                                            Distance: {formatDistance(\n                                                calculateDistance(\n                                                    searchMarker[0], searchMarker[1],\n                                                    stop.latitude, stop.longitude\n                                                )\n                                            )}\n                                        </span>\n                                    )}\n                                </div>\n                            </Popup>\n                        </Marker>\n                    ))}\n                    \n                    {/* Add routing control for selected bus stop - use key to force re-creation */}\n                    {searchMarker && selectedStop && (\n                        <RoutingControl\n                            key={`route-${routingKey}`}\n                            startPoint={searchMarker} // Using search marker as start point\n                            endPoint={[selectedStop.latitude, selectedStop.longitude]}\n                            color=\"#ff6b6b\"\n                            weight={4}\n                            setIsPathLoading={setIsPathLoading}\n                            onRoutingFailed={handleRoutingFailed}\n                        />\n                    )}\n                    \n                    {/* Button inside map container for centering on user location */}\n                    <div className=\"map-controls\">\n                        <LocationButton\n                            userLocation={userLocation}\n                            onClick={handleCenterOnUser}\n                        />\n                    </div>\n                </MapContainer>\n            </div>\n        </div>\n    );\n};\n\n// Updated component to handle map clicks\nconst MapEvents = ({ setCoordinates, setSearchMarker }) => {\n    useMapEvents({\n        click: (e) => {\n            const { lat, lng } = e.latlng;\n            setCoordinates({\n                latitude: lat.toFixed(6),\n                longitude: lng.toFixed(6)\n            });\n            setSearchMarker([lat, lng]); // Update marker immediately\n        }\n    });\n    \n    return null;\n};\n\nexport default BusStopSearch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}