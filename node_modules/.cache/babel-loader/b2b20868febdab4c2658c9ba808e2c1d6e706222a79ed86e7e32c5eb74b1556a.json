{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js\",\n  _s = $RefreshSig$();\n// frontend/components/busStopsView.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../../css/user.css'; // Import common user CSS\nimport '../../css/busStopsView.css'; // Use busStopsView.css for specific styles\n\n// Custom bus icon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// Bus stop icon\nconst stopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/484/484167.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\nconst BusStopsView = () => {\n  _s();\n  const [busStops, setBusStops] = useState([]);\n  const [fromStop, setFromStop] = useState('');\n  const [toStop, setToStop] = useState('');\n  const [buses, setBuses] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [selectedBusLocation, setSelectedBusLocation] = useState(null);\n  const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default center coordinates\n\n  // Reference to map component\n  const mapRef = useRef(null);\n\n  // New states for custom dropdowns\n  const [isFromDropdownOpen, setIsFromDropdownOpen] = useState(false);\n  const [isToDropdownOpen, setIsToDropdownOpen] = useState(false);\n  const [searchFrom, setSearchFrom] = useState('');\n  const [searchTo, setSearchTo] = useState('');\n  const fromDropdownRef = useRef(null);\n  const toDropdownRef = useRef(null);\n\n  // Fetch all bus stops on component mount\n  useEffect(() => {\n    const fetchBusStops = async () => {\n      setLoading(true);\n      try {\n        console.log('Fetching bus stops...');\n        // Use the API utility instead of direct axios calls\n        const response = await api.get('/bus_stops/getAllBusStops');\n        console.log('Bus stops API response:', response.data);\n        if (response.data && response.data.data) {\n          const stops = response.data.data;\n          console.log(`Received ${stops.length} bus stops`);\n          setBusStops(stops);\n\n          // If we have stops, set the map center to the first stop\n          if (stops.length > 0) {\n            setMapCenter([stops[0].latitude, stops[0].longitude]);\n          }\n        } else {\n          console.error('Unexpected API response format:', response.data);\n          setError('Received an invalid response from the server.');\n        }\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching bus stops:', err);\n        setError('Failed to load bus stops: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchBusStops();\n  }, []);\n\n  // Add click-outside handler to close dropdowns\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n        setIsFromDropdownOpen(false);\n      }\n      if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n        setIsToDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n  }, []);\n\n  // Handle the search action for buses between stops\n  const handleSearch = async () => {\n    if (!fromStop || !toStop) {\n      setError('Please select both From and To stops.');\n      return;\n    }\n    if (fromStop === toStop) {\n      setError('From and To stops cannot be the same.');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Use the API utility with the correct endpoint\n      const response = await api.get(`/bus_routes/getBusesBetweenStops`, {\n        params: {\n          fromStopId: fromStop,\n          toStopId: toStop\n        }\n      });\n      if (response.data && response.data.data) {\n        setBuses(response.data.data);\n\n        // If there's at least one bus, pick the first bus location to show on the map\n        const firstBus = response.data.data[0];\n        if (firstBus && firstBus.location) {\n          setSelectedBusLocation(firstBus.location);\n          setMapCenter([firstBus.location.latitude, firstBus.location.longitude]);\n        } else {\n          // If no bus location, center on the \"from\" stop\n          const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n          if (fromStopObj) {\n            setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n          }\n        }\n      }\n      setError('');\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error('Error fetching buses:', err);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'No bus present on this route.');\n      setBuses([]);\n      setSelectedBusLocation(null);\n\n      // On error, reset map center to the \"from\" stop\n      const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n      if (fromStopObj) {\n        setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Helper function to find a stop by ID\n  const findStopById = id => {\n    return busStops.find(stop => stop.id === parseInt(id));\n  };\n  return (\n    /*#__PURE__*/\n    // Updated structure to match common user CSS\n    _jsxDEV(\"div\", {\n      className: \"page-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-panel\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-panel-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Find Buses by Route\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-form\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"fromStop\",\n                    children: \"From:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-dropdown\",\n                    ref: fromDropdownRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      id: \"fromStop\",\n                      value: searchFrom,\n                      onChange: e => {\n                        setSearchFrom(e.target.value);\n                        setIsFromDropdownOpen(true);\n                      },\n                      onClick: () => setIsFromDropdownOpen(!isFromDropdownOpen),\n                      placeholder: \"Select From Stop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 41\n                    }, this), isFromDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"dropdown-list\",\n                      children: loading ? /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"loading-item\",\n                        children: \"Loading bus stops...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 53\n                      }, this) : busStops.length > 0 ? busStops.filter(stop => stop.name.toLowerCase().includes(searchFrom.toLowerCase())).map(stop => /*#__PURE__*/_jsxDEV(\"li\", {\n                        onClick: () => {\n                          setFromStop(stop.id);\n                          setSearchFrom(stop.name);\n                          setIsFromDropdownOpen(false);\n                        },\n                        children: stop.name\n                      }, stop.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 61\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"error-item\",\n                        children: \"No bus stops available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"toStop\",\n                    children: \"To:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-dropdown\",\n                    ref: toDropdownRef,\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      id: \"toStop\",\n                      value: searchTo,\n                      onChange: e => {\n                        setSearchTo(e.target.value);\n                        setIsToDropdownOpen(true);\n                      },\n                      onClick: () => setIsToDropdownOpen(!isToDropdownOpen),\n                      placeholder: \"Select To Stop\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 41\n                    }, this), isToDropdownOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: \"dropdown-list\",\n                      children: loading ? /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"loading-item\",\n                        children: \"Loading bus stops...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 218,\n                        columnNumber: 53\n                      }, this) : busStops.length > 0 ? busStops.filter(stop => stop.name.toLowerCase().includes(searchTo.toLowerCase())).map(stop => /*#__PURE__*/_jsxDEV(\"li\", {\n                        onClick: () => {\n                          setToStop(stop.id);\n                          setSearchTo(stop.name);\n                          setIsToDropdownOpen(false);\n                        },\n                        children: stop.name\n                      }, stop.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 61\n                      }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                        className: \"error-item\",\n                        children: \"No bus stops available\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 232,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"search-btn\",\n                  onClick: handleSearch,\n                  disabled: loading || !fromStop || !toStop,\n                  children: loading ? \"Loading...\" : \"Search\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"location-panel-bottom\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"search-results\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Available Buses\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"results-list\",\n                  children: buses.length > 0 ? buses.map(bus => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"result-item\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"result-details\",\n                      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                        children: bus.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 259,\n                        columnNumber: 53\n                      }, this), bus.location ? /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"distance\",\n                        children: [\"Last seen: \", new Date(bus.location.timestamp).toLocaleTimeString()]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 261,\n                        columnNumber: 57\n                      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"distance\",\n                        children: \"Location: Unknown\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 265,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 258,\n                      columnNumber: 49\n                    }, this)\n                  }, bus.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 45\n                  }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"no-results\",\n                    children: \"No buses found for this route.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"map-container\",\n            children: /*#__PURE__*/_jsxDEV(MapContainer, {\n              center: mapCenter,\n              zoom: 15,\n              style: {\n                height: \"100%\",\n                width: \"100%\"\n              },\n              ref: mapRef,\n              children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n                attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n                url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 29\n              }, this), busStops.map(stop => /*#__PURE__*/_jsxDEV(Marker, {\n                position: [stop.latitude, stop.longitude],\n                icon: stopIcon,\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: stop.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 37\n                }, this)\n              }, stop.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)), selectedBusLocation && /*#__PURE__*/_jsxDEV(Marker, {\n                position: [selectedBusLocation.latitude, selectedBusLocation.longitude],\n                icon: busIcon,\n                children: /*#__PURE__*/_jsxDEV(Popup, {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Bus Location\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 70\n                  }, this), \"Last seen: \", new Date(selectedBusLocation.timestamp).toLocaleTimeString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(BusStopsView, \"Nhfzsvw+eu5ynLaGNA2JlBszUPI=\");\n_c = BusStopsView;\nexport default BusStopsView;\nvar _c;\n$RefreshReg$(_c, \"BusStopsView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","busIcon","Icon","iconUrl","iconSize","iconAnchor","popupAnchor","stopIcon","BusStopsView","_s","busStops","setBusStops","fromStop","setFromStop","toStop","setToStop","buses","setBuses","error","setError","loading","setLoading","selectedBusLocation","setSelectedBusLocation","mapCenter","setMapCenter","mapRef","isFromDropdownOpen","setIsFromDropdownOpen","isToDropdownOpen","setIsToDropdownOpen","searchFrom","setSearchFrom","searchTo","setSearchTo","fromDropdownRef","toDropdownRef","fetchBusStops","console","log","response","api","get","data","stops","length","latitude","longitude","err","_err$response","_err$response$data","message","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSearch","params","fromStopId","toStopId","firstBus","location","fromStopObj","find","stop","id","parseInt","_err$response2","_err$response2$data","findStopById","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","ref","type","value","onChange","e","onClick","placeholder","filter","name","toLowerCase","includes","map","disabled","bus","Date","timestamp","toLocaleTimeString","center","zoom","style","height","width","attribution","url","position","icon","_c","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js"],"sourcesContent":["// frontend/components/busStopsView.js\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../../css/user.css'; // Import common user CSS\nimport '../../css/busStopsView.css'; // Use busStopsView.css for specific styles\n\n// Custom bus icon\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// Bus stop icon\nconst stopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/484/484167.png',\n  iconSize: [24, 24],\n  iconAnchor: [12, 24],\n  popupAnchor: [0, -24]\n});\n\nconst BusStopsView = () => {\n    const [busStops, setBusStops] = useState([]);\n    const [fromStop, setFromStop] = useState('');\n    const [toStop, setToStop] = useState('');\n    const [buses, setBuses] = useState([]);\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [selectedBusLocation, setSelectedBusLocation] = useState(null);\n    const [mapCenter, setMapCenter] = useState([22.3190, 87.3091]); // Default center coordinates\n    \n    // Reference to map component\n    const mapRef = useRef(null);\n\n    // New states for custom dropdowns\n    const [isFromDropdownOpen, setIsFromDropdownOpen] = useState(false);\n    const [isToDropdownOpen, setIsToDropdownOpen] = useState(false);\n    const [searchFrom, setSearchFrom] = useState('');\n    const [searchTo, setSearchTo] = useState('');\n    const fromDropdownRef = useRef(null);\n    const toDropdownRef = useRef(null);\n\n    // Fetch all bus stops on component mount\n    useEffect(() => {\n        const fetchBusStops = async () => {\n            setLoading(true);\n            try {\n                console.log('Fetching bus stops...');\n                // Use the API utility instead of direct axios calls\n                const response = await api.get('/bus_stops/getAllBusStops');\n                console.log('Bus stops API response:', response.data);\n                \n                if(response.data && response.data.data) {\n                    const stops = response.data.data;\n                    console.log(`Received ${stops.length} bus stops`);\n                    setBusStops(stops);\n                    \n                    // If we have stops, set the map center to the first stop\n                    if (stops.length > 0) {\n                        setMapCenter([stops[0].latitude, stops[0].longitude]);\n                    }\n                } else {\n                    console.error('Unexpected API response format:', response.data);\n                    setError('Received an invalid response from the server.');\n                }\n            } catch (err) {\n                console.error('Error fetching bus stops:', err);\n                setError('Failed to load bus stops: ' + (err.response?.data?.message || err.message));\n            } finally {\n                setLoading(false);\n            }\n        };\n        \n        fetchBusStops();\n    }, []);\n\n    // Add click-outside handler to close dropdowns\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (fromDropdownRef.current && !fromDropdownRef.current.contains(event.target)) {\n                setIsFromDropdownOpen(false);\n            }\n            if (toDropdownRef.current && !toDropdownRef.current.contains(event.target)) {\n                setIsToDropdownOpen(false);\n            }\n        };\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => document.removeEventListener(\"mousedown\", handleClickOutside);\n    }, []);\n\n    // Handle the search action for buses between stops\n    const handleSearch = async () => {\n        if (!fromStop || !toStop) {\n            setError('Please select both From and To stops.');\n            return;\n        }\n        \n        if (fromStop === toStop) {\n            setError('From and To stops cannot be the same.');\n            return;\n        }\n\n        setLoading(true);\n        try {\n            // Use the API utility with the correct endpoint\n            const response = await api.get(`/bus_routes/getBusesBetweenStops`, {\n                params: { fromStopId: fromStop, toStopId: toStop }\n            });\n            \n            if (response.data && response.data.data) {\n                setBuses(response.data.data);\n                \n                // If there's at least one bus, pick the first bus location to show on the map\n                const firstBus = response.data.data[0];\n                if (firstBus && firstBus.location) {\n                    setSelectedBusLocation(firstBus.location);\n                    setMapCenter([firstBus.location.latitude, firstBus.location.longitude]);\n                } else {\n                    // If no bus location, center on the \"from\" stop\n                    const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n                    if (fromStopObj) {\n                        setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n                    }\n                }\n            }\n            setError('');\n        } catch (err) {\n            console.error('Error fetching buses:', err);\n            setError(err.response?.data?.message || 'No bus present on this route.');\n            setBuses([]);\n            setSelectedBusLocation(null);\n            \n            // On error, reset map center to the \"from\" stop\n            const fromStopObj = busStops.find(stop => stop.id === parseInt(fromStop));\n            if (fromStopObj) {\n                setMapCenter([fromStopObj.latitude, fromStopObj.longitude]);\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Helper function to find a stop by ID\n    const findStopById = (id) => {\n        return busStops.find(stop => stop.id === parseInt(id));\n    };\n\n    return (\n        // Updated structure to match common user CSS\n        <div className=\"page-container\">\n            <div className=\"content-container\">\n                <div className=\"panel-container\">\n                    {/* Left panel using common user CSS classes */}\n                    <div className=\"location-panel\">\n                        <div className=\"location-panel-top\">\n                            <h2>Find Buses by Route</h2>\n                            <div className=\"search-form\">\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"fromStop\">From:</label>\n                                    <div className=\"custom-dropdown\" ref={fromDropdownRef}>\n                                        <input \n                                            type=\"text\" \n                                            id=\"fromStop\"\n                                            value={searchFrom}\n                                            onChange={(e) => {\n                                                setSearchFrom(e.target.value);\n                                                setIsFromDropdownOpen(true);\n                                            }}\n                                            onClick={() => setIsFromDropdownOpen(!isFromDropdownOpen)}\n                                            placeholder=\"Select From Stop\"\n                                        />\n                                        {isFromDropdownOpen && (\n                                            <ul className=\"dropdown-list\">\n                                                {loading ? (\n                                                    <li className=\"loading-item\">Loading bus stops...</li>\n                                                ) : busStops.length > 0 ? (\n                                                    busStops\n                                                        .filter(stop => stop.name.toLowerCase().includes(searchFrom.toLowerCase()))\n                                                        .map(stop => (\n                                                            <li key={stop.id} onClick={() => {\n                                                                setFromStop(stop.id);\n                                                                setSearchFrom(stop.name);\n                                                                setIsFromDropdownOpen(false);\n                                                            }}>\n                                                                {stop.name}\n                                                            </li>\n                                                        ))\n                                                ) : (\n                                                    <li className=\"error-item\">No bus stops available</li>\n                                                )}\n                                            </ul>\n                                        )}\n                                    </div>\n                                </div>\n                                \n                                <div className=\"form-group\">\n                                    <label htmlFor=\"toStop\">To:</label>\n                                    <div className=\"custom-dropdown\" ref={toDropdownRef}>\n                                        <input \n                                            type=\"text\" \n                                            id=\"toStop\"\n                                            value={searchTo}\n                                            onChange={(e) => {\n                                                setSearchTo(e.target.value);\n                                                setIsToDropdownOpen(true);\n                                            }}\n                                            onClick={() => setIsToDropdownOpen(!isToDropdownOpen)}\n                                            placeholder=\"Select To Stop\"\n                                        />\n                                        {isToDropdownOpen && (\n                                            <ul className=\"dropdown-list\">\n                                                {loading ? (\n                                                    <li className=\"loading-item\">Loading bus stops...</li>\n                                                ) : busStops.length > 0 ? (\n                                                    busStops\n                                                        .filter(stop => stop.name.toLowerCase().includes(searchTo.toLowerCase()))\n                                                        .map(stop => (\n                                                            <li key={stop.id} onClick={() => {\n                                                                setToStop(stop.id);\n                                                                setSearchTo(stop.name);\n                                                                setIsToDropdownOpen(false);\n                                                            }}>\n                                                                {stop.name}\n                                                            </li>\n                                                        ))\n                                                ) : (\n                                                    <li className=\"error-item\">No bus stops available</li>\n                                                )}\n                                            </ul>\n                                        )}\n                                    </div>\n                                </div>\n                                \n                                <button \n                                    className=\"search-btn\"\n                                    onClick={handleSearch} \n                                    disabled={loading || !fromStop || !toStop}\n                                >\n                                    {loading ? \"Loading...\" : \"Search\"}\n                                </button>\n                            </div>\n\n                            {error && <div className=\"error-message\">{error}</div>}\n                        </div>\n                        \n                        <div className=\"location-panel-bottom\">\n                            <div className=\"search-results\">\n                                <h3>Available Buses</h3>\n                                <div className=\"results-list\">\n                                    {buses.length > 0 ? (\n                                        buses.map((bus) => (\n                                            <div key={bus.id} className=\"result-item\">\n                                                <div className=\"result-details\">\n                                                    <h4>{bus.name}</h4>\n                                                    {bus.location ? (\n                                                        <p className=\"distance\">\n                                                            Last seen: {new Date(bus.location.timestamp).toLocaleTimeString()}\n                                                        </p>\n                                                    ) : (\n                                                        <p className=\"distance\">Location: Unknown</p>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        ))\n                                    ) : (\n                                        <p className=\"no-results\">No buses found for this route.</p>\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* Map container using common user CSS classes */}\n                    <div className=\"map-container\">\n                        <MapContainer\n                            center={mapCenter}\n                            zoom={15}\n                            style={{ height: \"100%\", width: \"100%\" }}\n                            ref={mapRef}\n                        >\n                            <TileLayer\n                                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                            />\n                            \n                            {/* Show all bus stops on map */}\n                            {busStops.map(stop => (\n                                <Marker\n                                    key={stop.id}\n                                    position={[stop.latitude, stop.longitude]}\n                                    icon={stopIcon}\n                                >\n                                    <Popup>\n                                        <strong>{stop.name}</strong>\n                                    </Popup>\n                                </Marker>\n                            ))}\n                            \n                            {/* Show selected bus location if available */}\n                            {selectedBusLocation && (\n                                <Marker\n                                    position={[selectedBusLocation.latitude, selectedBusLocation.longitude]}\n                                    icon={busIcon}\n                                >\n                                    <Popup>\n                                        <strong>Bus Location</strong><br />\n                                        Last seen: {new Date(selectedBusLocation.timestamp).toLocaleTimeString()}\n                                    </Popup>\n                                </Marker>\n                            )}\n                        </MapContainer>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default BusStopsView;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAO,oBAAoB,CAAC,CAAC;AAC7B,OAAO,4BAA4B,CAAC,CAAC;;AAErC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,OAAO,GAAG,IAAIH,CAAC,CAACI,IAAI,CAAC;EACzBC,OAAO,EAAE,qDAAqD;EAC9DC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,QAAQ,GAAG,IAAIT,CAAC,CAACI,IAAI,CAAC;EAC1BC,OAAO,EAAE,uDAAuD;EAChEC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EAClBC,UAAU,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;EACpBC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE;AACtB,CAAC,CAAC;AAEF,MAAME,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACwB,MAAM,EAAEC,SAAS,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0B,KAAK,EAAEC,QAAQ,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,OAAO,EAAEC,UAAU,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAM,CAACkC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEhE;EACA,MAAMoC,MAAM,GAAGlC,MAAM,CAAC,IAAI,CAAC;;EAE3B;EACA,MAAM,CAACmC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACuC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACyC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM6C,eAAe,GAAG3C,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM4C,aAAa,GAAG5C,MAAM,CAAC,IAAI,CAAC;;EAElC;EACAD,SAAS,CAAC,MAAM;IACZ,MAAM8C,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9BhB,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACAiB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;QACpC;QACA,MAAMC,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,2BAA2B,CAAC;QAC3DJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEC,QAAQ,CAACG,IAAI,CAAC;QAErD,IAAGH,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACA,IAAI,EAAE;UACpC,MAAMC,KAAK,GAAGJ,QAAQ,CAACG,IAAI,CAACA,IAAI;UAChCL,OAAO,CAACC,GAAG,CAAC,YAAYK,KAAK,CAACC,MAAM,YAAY,CAAC;UACjDlC,WAAW,CAACiC,KAAK,CAAC;;UAElB;UACA,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;YAClBpB,YAAY,CAAC,CAACmB,KAAK,CAAC,CAAC,CAAC,CAACE,QAAQ,EAAEF,KAAK,CAAC,CAAC,CAAC,CAACG,SAAS,CAAC,CAAC;UACzD;QACJ,CAAC,MAAM;UACHT,OAAO,CAACpB,KAAK,CAAC,iCAAiC,EAAEsB,QAAQ,CAACG,IAAI,CAAC;UAC/DxB,QAAQ,CAAC,+CAA+C,CAAC;QAC7D;MACJ,CAAC,CAAC,OAAO6B,GAAG,EAAE;QAAA,IAAAC,aAAA,EAAAC,kBAAA;QACVZ,OAAO,CAACpB,KAAK,CAAC,2BAA2B,EAAE8B,GAAG,CAAC;QAC/C7B,QAAQ,CAAC,4BAA4B,IAAI,EAAA8B,aAAA,GAAAD,GAAG,CAACR,QAAQ,cAAAS,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAIH,GAAG,CAACG,OAAO,CAAC,CAAC;MACzF,CAAC,SAAS;QACN9B,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDgB,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA9C,SAAS,CAAC,MAAM;IACZ,MAAM6D,kBAAkB,GAAIC,KAAK,IAAK;MAClC,IAAIlB,eAAe,CAACmB,OAAO,IAAI,CAACnB,eAAe,CAACmB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QAC5E5B,qBAAqB,CAAC,KAAK,CAAC;MAChC;MACA,IAAIQ,aAAa,CAACkB,OAAO,IAAI,CAAClB,aAAa,CAACkB,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,EAAE;QACxE1B,mBAAmB,CAAC,KAAK,CAAC;MAC9B;IACJ,CAAC;IACD2B,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEN,kBAAkB,CAAC;IAC1D,OAAO,MAAMK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEP,kBAAkB,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAChD,QAAQ,IAAI,CAACE,MAAM,EAAE;MACtBK,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACJ;IAEA,IAAIP,QAAQ,KAAKE,MAAM,EAAE;MACrBK,QAAQ,CAAC,uCAAuC,CAAC;MACjD;IACJ;IAEAE,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA;MACA,MAAMmB,QAAQ,GAAG,MAAMC,GAAG,CAACC,GAAG,CAAC,kCAAkC,EAAE;QAC/DmB,MAAM,EAAE;UAAEC,UAAU,EAAElD,QAAQ;UAAEmD,QAAQ,EAAEjD;QAAO;MACrD,CAAC,CAAC;MAEF,IAAI0B,QAAQ,CAACG,IAAI,IAAIH,QAAQ,CAACG,IAAI,CAACA,IAAI,EAAE;QACrC1B,QAAQ,CAACuB,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC;;QAE5B;QACA,MAAMqB,QAAQ,GAAGxB,QAAQ,CAACG,IAAI,CAACA,IAAI,CAAC,CAAC,CAAC;QACtC,IAAIqB,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,EAAE;UAC/B1C,sBAAsB,CAACyC,QAAQ,CAACC,QAAQ,CAAC;UACzCxC,YAAY,CAAC,CAACuC,QAAQ,CAACC,QAAQ,CAACnB,QAAQ,EAAEkB,QAAQ,CAACC,QAAQ,CAAClB,SAAS,CAAC,CAAC;QAC3E,CAAC,MAAM;UACH;UACA,MAAMmB,WAAW,GAAGxD,QAAQ,CAACyD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAAC1D,QAAQ,CAAC,CAAC;UACzE,IAAIsD,WAAW,EAAE;YACbzC,YAAY,CAAC,CAACyC,WAAW,CAACpB,QAAQ,EAAEoB,WAAW,CAACnB,SAAS,CAAC,CAAC;UAC/D;QACJ;MACJ;MACA5B,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAO6B,GAAG,EAAE;MAAA,IAAAuB,cAAA,EAAAC,mBAAA;MACVlC,OAAO,CAACpB,KAAK,CAAC,uBAAuB,EAAE8B,GAAG,CAAC;MAC3C7B,QAAQ,CAAC,EAAAoD,cAAA,GAAAvB,GAAG,CAACR,QAAQ,cAAA+B,cAAA,wBAAAC,mBAAA,GAAZD,cAAA,CAAc5B,IAAI,cAAA6B,mBAAA,uBAAlBA,mBAAA,CAAoBrB,OAAO,KAAI,+BAA+B,CAAC;MACxElC,QAAQ,CAAC,EAAE,CAAC;MACZM,sBAAsB,CAAC,IAAI,CAAC;;MAE5B;MACA,MAAM2C,WAAW,GAAGxD,QAAQ,CAACyD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAAC1D,QAAQ,CAAC,CAAC;MACzE,IAAIsD,WAAW,EAAE;QACbzC,YAAY,CAAC,CAACyC,WAAW,CAACpB,QAAQ,EAAEoB,WAAW,CAACnB,SAAS,CAAC,CAAC;MAC/D;IACJ,CAAC,SAAS;MACN1B,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;;EAED;EACA,MAAMoD,YAAY,GAAIJ,EAAE,IAAK;IACzB,OAAO3D,QAAQ,CAACyD,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKC,QAAQ,CAACD,EAAE,CAAC,CAAC;EAC1D,CAAC;EAED;IAAA;IACI;IACArE,OAAA;MAAK0E,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3B3E,OAAA;QAAK0E,SAAS,EAAC,mBAAmB;QAAAC,QAAA,eAC9B3E,OAAA;UAAK0E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAE5B3E,OAAA;YAAK0E,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC3B3E,OAAA;cAAK0E,SAAS,EAAC,oBAAoB;cAAAC,QAAA,gBAC/B3E,OAAA;gBAAA2E,QAAA,EAAI;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eAC5B/E,OAAA;gBAAK0E,SAAS,EAAC,aAAa;gBAAAC,QAAA,gBACxB3E,OAAA;kBAAK0E,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACvB3E,OAAA;oBAAOgF,OAAO,EAAC,UAAU;oBAAAL,QAAA,EAAC;kBAAK;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACvC/E,OAAA;oBAAK0E,SAAS,EAAC,iBAAiB;oBAACO,GAAG,EAAE9C,eAAgB;oBAAAwC,QAAA,gBAClD3E,OAAA;sBACIkF,IAAI,EAAC,MAAM;sBACXb,EAAE,EAAC,UAAU;sBACbc,KAAK,EAAEpD,UAAW;sBAClBqD,QAAQ,EAAGC,CAAC,IAAK;wBACbrD,aAAa,CAACqD,CAAC,CAAC7B,MAAM,CAAC2B,KAAK,CAAC;wBAC7BvD,qBAAqB,CAAC,IAAI,CAAC;sBAC/B,CAAE;sBACF0D,OAAO,EAAEA,CAAA,KAAM1D,qBAAqB,CAAC,CAACD,kBAAkB,CAAE;sBAC1D4D,WAAW,EAAC;oBAAkB;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACjC,CAAC,EACDpD,kBAAkB,iBACf3B,OAAA;sBAAI0E,SAAS,EAAC,eAAe;sBAAAC,QAAA,EACxBvD,OAAO,gBACJpB,OAAA;wBAAI0E,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAAC;sBAAoB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,GACtDrE,QAAQ,CAACmC,MAAM,GAAG,CAAC,GACnBnC,QAAQ,CACH8E,MAAM,CAACpB,IAAI,IAAIA,IAAI,CAACqB,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC5D,UAAU,CAAC2D,WAAW,CAAC,CAAC,CAAC,CAAC,CAC1EE,GAAG,CAACxB,IAAI,iBACLpE,OAAA;wBAAkBsF,OAAO,EAAEA,CAAA,KAAM;0BAC7BzE,WAAW,CAACuD,IAAI,CAACC,EAAE,CAAC;0BACpBrC,aAAa,CAACoC,IAAI,CAACqB,IAAI,CAAC;0BACxB7D,qBAAqB,CAAC,KAAK,CAAC;wBAChC,CAAE;wBAAA+C,QAAA,EACGP,IAAI,CAACqB;sBAAI,GALLrB,IAAI,CAACC,EAAE;wBAAAO,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAMZ,CACP,CAAC,gBAEN/E,OAAA;wBAAI0E,SAAS,EAAC,YAAY;wBAAAC,QAAA,EAAC;sBAAsB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI;oBACxD;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CACP;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eAEN/E,OAAA;kBAAK0E,SAAS,EAAC,YAAY;kBAAAC,QAAA,gBACvB3E,OAAA;oBAAOgF,OAAO,EAAC,QAAQ;oBAAAL,QAAA,EAAC;kBAAG;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAO,CAAC,eACnC/E,OAAA;oBAAK0E,SAAS,EAAC,iBAAiB;oBAACO,GAAG,EAAE7C,aAAc;oBAAAuC,QAAA,gBAChD3E,OAAA;sBACIkF,IAAI,EAAC,MAAM;sBACXb,EAAE,EAAC,QAAQ;sBACXc,KAAK,EAAElD,QAAS;sBAChBmD,QAAQ,EAAGC,CAAC,IAAK;wBACbnD,WAAW,CAACmD,CAAC,CAAC7B,MAAM,CAAC2B,KAAK,CAAC;wBAC3BrD,mBAAmB,CAAC,IAAI,CAAC;sBAC7B,CAAE;sBACFwD,OAAO,EAAEA,CAAA,KAAMxD,mBAAmB,CAAC,CAACD,gBAAgB,CAAE;sBACtD0D,WAAW,EAAC;oBAAgB;sBAAAX,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAC/B,CAAC,EACDlD,gBAAgB,iBACb7B,OAAA;sBAAI0E,SAAS,EAAC,eAAe;sBAAAC,QAAA,EACxBvD,OAAO,gBACJpB,OAAA;wBAAI0E,SAAS,EAAC,cAAc;wBAAAC,QAAA,EAAC;sBAAoB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI,CAAC,GACtDrE,QAAQ,CAACmC,MAAM,GAAG,CAAC,GACnBnC,QAAQ,CACH8E,MAAM,CAACpB,IAAI,IAAIA,IAAI,CAACqB,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC1D,QAAQ,CAACyD,WAAW,CAAC,CAAC,CAAC,CAAC,CACxEE,GAAG,CAACxB,IAAI,iBACLpE,OAAA;wBAAkBsF,OAAO,EAAEA,CAAA,KAAM;0BAC7BvE,SAAS,CAACqD,IAAI,CAACC,EAAE,CAAC;0BAClBnC,WAAW,CAACkC,IAAI,CAACqB,IAAI,CAAC;0BACtB3D,mBAAmB,CAAC,KAAK,CAAC;wBAC9B,CAAE;wBAAA6C,QAAA,EACGP,IAAI,CAACqB;sBAAI,GALLrB,IAAI,CAACC,EAAE;wBAAAO,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAMZ,CACP,CAAC,gBAEN/E,OAAA;wBAAI0E,SAAS,EAAC,YAAY;wBAAAC,QAAA,EAAC;sBAAsB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAI;oBACxD;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACD,CACP;kBAAA;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACA,CAAC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACL,CAAC,eAEN/E,OAAA;kBACI0E,SAAS,EAAC,YAAY;kBACtBY,OAAO,EAAE1B,YAAa;kBACtBiC,QAAQ,EAAEzE,OAAO,IAAI,CAACR,QAAQ,IAAI,CAACE,MAAO;kBAAA6D,QAAA,EAEzCvD,OAAO,GAAG,YAAY,GAAG;gBAAQ;kBAAAwD,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC9B,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC,EAEL7D,KAAK,iBAAIlB,OAAA;gBAAK0E,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAEzD;cAAK;gBAAA0D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrD,CAAC,eAEN/E,OAAA;cAAK0E,SAAS,EAAC,uBAAuB;cAAAC,QAAA,eAClC3E,OAAA;gBAAK0E,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,gBAC3B3E,OAAA;kBAAA2E,QAAA,EAAI;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC,eACxB/E,OAAA;kBAAK0E,SAAS,EAAC,cAAc;kBAAAC,QAAA,EACxB3D,KAAK,CAAC6B,MAAM,GAAG,CAAC,GACb7B,KAAK,CAAC4E,GAAG,CAAEE,GAAG,iBACV9F,OAAA;oBAAkB0E,SAAS,EAAC,aAAa;oBAAAC,QAAA,eACrC3E,OAAA;sBAAK0E,SAAS,EAAC,gBAAgB;sBAAAC,QAAA,gBAC3B3E,OAAA;wBAAA2E,QAAA,EAAKmB,GAAG,CAACL;sBAAI;wBAAAb,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAK,CAAC,EAClBe,GAAG,CAAC7B,QAAQ,gBACTjE,OAAA;wBAAG0E,SAAS,EAAC,UAAU;wBAAAC,QAAA,GAAC,aACT,EAAC,IAAIoB,IAAI,CAACD,GAAG,CAAC7B,QAAQ,CAAC+B,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;sBAAA;wBAAArB,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAClE,CAAC,gBAEJ/E,OAAA;wBAAG0E,SAAS,EAAC,UAAU;wBAAAC,QAAA,EAAC;sBAAiB;wBAAAC,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAG,CAC/C;oBAAA;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACA;kBAAC,GAVAe,GAAG,CAACzB,EAAE;oBAAAO,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAWX,CACR,CAAC,gBAEF/E,OAAA;oBAAG0E,SAAS,EAAC,YAAY;oBAAAC,QAAA,EAAC;kBAA8B;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAG;gBAC9D;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC,eAGN/E,OAAA;YAAK0E,SAAS,EAAC,eAAe;YAAAC,QAAA,eAC1B3E,OAAA,CAACN,YAAY;cACTwG,MAAM,EAAE1E,SAAU;cAClB2E,IAAI,EAAE,EAAG;cACTC,KAAK,EAAE;gBAAEC,MAAM,EAAE,MAAM;gBAAEC,KAAK,EAAE;cAAO,CAAE;cACzCrB,GAAG,EAAEvD,MAAO;cAAAiD,QAAA,gBAEZ3E,OAAA,CAACL,SAAS;gBACN4G,WAAW,EAAC,yFAAyF;gBACrGC,GAAG,EAAC;cAAoD;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3D,CAAC,EAGDrE,QAAQ,CAACkF,GAAG,CAACxB,IAAI,iBACdpE,OAAA,CAACJ,MAAM;gBAEH6G,QAAQ,EAAE,CAACrC,IAAI,CAACtB,QAAQ,EAAEsB,IAAI,CAACrB,SAAS,CAAE;gBAC1C2D,IAAI,EAAEnG,QAAS;gBAAAoE,QAAA,eAEf3E,OAAA,CAACH,KAAK;kBAAA8E,QAAA,eACF3E,OAAA;oBAAA2E,QAAA,EAASP,IAAI,CAACqB;kBAAI;oBAAAb,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAS;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACzB;cAAC,GANHX,IAAI,CAACC,EAAE;gBAAAO,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOR,CACX,CAAC,EAGDzD,mBAAmB,iBAChBtB,OAAA,CAACJ,MAAM;gBACH6G,QAAQ,EAAE,CAACnF,mBAAmB,CAACwB,QAAQ,EAAExB,mBAAmB,CAACyB,SAAS,CAAE;gBACxE2D,IAAI,EAAEzG,OAAQ;gBAAA0E,QAAA,eAEd3E,OAAA,CAACH,KAAK;kBAAA8E,QAAA,gBACF3E,OAAA;oBAAA2E,QAAA,EAAQ;kBAAY;oBAAAC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eAAA/E,OAAA;oBAAA4E,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eACxB,EAAC,IAAIgB,IAAI,CAACzE,mBAAmB,CAAC0E,SAAS,CAAC,CAACC,kBAAkB,CAAC,CAAC;gBAAA;kBAAArB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACrE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CACX;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;AAEd,CAAC;AAACtE,EAAA,CAvSID,YAAY;AAAAmG,EAAA,GAAZnG,YAAY;AAySlB,eAAeA,YAAY;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}