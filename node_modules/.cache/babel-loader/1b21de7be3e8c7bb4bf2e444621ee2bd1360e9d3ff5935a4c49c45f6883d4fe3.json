{"ast":null,"code":"var _jsxFileName = \"/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Polyline, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport api from '../../utils/api.js';\nimport '../../css/busStopsView.css';\nimport axios from 'axios';\n\n// Fix for default marker icons in Leaflet\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Custom icons for different map elements\nconst busStopIcon = new L.Icon({\n  iconUrl: '/bus-stop.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst userIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst destinationIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst nearbyStopIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/3448/3448339.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 32],\n  popupAnchor: [0, -32]\n});\nconst busIcon = new L.Icon({\n  iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n  iconSize: [32, 32],\n  iconAnchor: [16, 16],\n  popupAnchor: [0, -16]\n});\n\n// Location control component\nconst LocationControl = ({\n  setUserLocation\n}) => {\n  _s();\n  const map = useMap();\n  const handleLocationRequest = () => {\n    map.locate({\n      setView: true,\n      maxZoom: 16\n    });\n  };\n  useEffect(() => {\n    map.on('locationfound', e => {\n      setUserLocation([e.latlng.lat, e.latlng.lng]);\n      map.flyTo(e.latlng, 16);\n    });\n    map.on('locationerror', e => {\n      console.error(\"Location error:\", e.message);\n      alert(\"Unable to find your location. Please check your device settings.\");\n    });\n    return () => {\n      map.off('locationfound');\n      map.off('locationerror');\n    };\n  }, [map, setUserLocation]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"location-control\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLocationRequest,\n      title: \"Show my location\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-location-arrow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n// Modify the SearchControl component to handle building searches better\n\n// Search control component\n_s(LocationControl, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c = LocationControl;\nconst SearchControl = ({\n  onSearchResult,\n  searchType\n}) => {\n  _s2();\n  const [searchValue, setSearchValue] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const map = useMap();\n\n  // Get the type label for UI feedback\n  const typeLabel = searchType === 'start' ? 'starting point' : 'destination';\n  const handleSearch = async () => {\n    if (!searchValue.trim()) return;\n    setIsSearching(true);\n    setShowResults(false);\n    try {\n      // First try to search with more specific parameters for buildings\n      // This uses the Nominatim search with additional parameters\n      const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchValue)}&addressdetails=1&limit=10&countrycodes=in`);\n      if (!response.ok) {\n        throw new Error('Search failed');\n      }\n      let data = await response.json();\n\n      // Filter results to prioritize buildings, amenities, and educational institutions\n      const priorityTypes = ['building', 'amenity', 'office', 'school', 'university', 'college'];\n\n      // Separate priority results\n      const priorityResults = data.filter(item => {\n        if (item.type && priorityTypes.includes(item.type)) return true;\n        if (item.class && priorityTypes.includes(item.class)) return true;\n        return false;\n      });\n\n      // Combine results with priority items first\n      data = [...priorityResults, ...data.filter(item => !priorityResults.includes(item))];\n      if (data && data.length > 0) {\n        setSearchResults(data.slice(0, 8)); // Limit to 8 results\n        setShowResults(true);\n      } else {\n        alert(`No places found matching \"${searchValue}\". Try a different search term.`);\n      }\n    } catch (error) {\n      console.error('Error searching location:', error);\n      alert('Failed to search location. Please try again.');\n    } finally {\n      setIsSearching(false);\n    }\n  };\n  const handleResultClick = result => {\n    const position = [parseFloat(result.lat), parseFloat(result.lon)];\n    map.flyTo(position, 16);\n\n    // Format the display name to be more user-friendly\n    let displayName = result.display_name;\n\n    // If we have address details, create a more readable name\n    if (result.address) {\n      const address = result.address;\n      let parts = [];\n\n      // Try to build a name from most specific to general\n      if (address.building) parts.push(address.building);\n      if (address.amenity) parts.push(address.amenity);\n      if (address.road) parts.push(address.road);\n      if (address.suburb) parts.push(address.suburb);\n      if (address.city || address.town) parts.push(address.city || address.town);\n\n      // Use this custom format if we have enough parts\n      if (parts.length >= 2) {\n        displayName = parts.join(', ');\n      }\n    }\n    onSearchResult(position, displayName);\n    setShowResults(false);\n    setSearchValue(''); // Clear the search input\n  };\n\n  // Handle pressing Enter key\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: `Search for your ${typeLabel}...`,\n      value: searchValue,\n      onChange: e => setSearchValue(e.target.value),\n      onKeyPress: handleKeyPress,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      disabled: isSearching,\n      children: isSearching ? '...' : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), showResults && searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results\",\n      children: searchResults.map((result, index) => {\n        // Create a more readable display format\n        let displayParts = result.display_name.split(', ');\n        let mainName = displayParts[0];\n        let address = displayParts.slice(1).join(', ');\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: () => handleResultClick(result),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-name\",\n            children: mainName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"result-address\",\n            children: address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n// OSRM routing component\n_s2(SearchControl, \"/mKy5zHq9U6DwTT8vqi+1v1r08E=\", false, function () {\n  return [useMap];\n});\n_c2 = SearchControl;\nconst RouteDisplay = ({\n  startPoint,\n  endPoint,\n  color = '#3388ff',\n  weight = 4,\n  routeKey\n}) => {\n  _s3();\n  const [routeCoordinates, setRouteCoordinates] = useState([]);\n  const map = useMap();\n  useEffect(() => {\n    // Clear previous route when routeKey changes\n    setRouteCoordinates([]);\n    if (!startPoint || !endPoint) return;\n    const fetchRoute = async () => {\n      try {\n        const response = await axios.get(`https://router.project-osrm.org/route/v1/driving/${startPoint[1]},${startPoint[0]};${endPoint[1]},${endPoint[0]}?overview=full&geometries=geojson`);\n        if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n          const coordinates = response.data.routes[0].geometry.coordinates.map(coord => [coord[1], coord[0]] // OSRM returns [lng, lat], we need [lat, lng]\n          );\n          setRouteCoordinates(coordinates);\n        } else {\n          console.error('No route found or invalid response from OSRM');\n          setRouteCoordinates([]);\n        }\n      } catch (error) {\n        console.error('Error fetching route:', error);\n        setRouteCoordinates([]);\n      }\n    };\n    fetchRoute();\n  }, [startPoint, endPoint, map, routeKey]); // Add routeKey as a dependency\n\n  return routeCoordinates.length > 0 ? /*#__PURE__*/_jsxDEV(Polyline, {\n    positions: routeCoordinates,\n    color: color,\n    weight: weight\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 9\n  }, this) : null;\n};\n\n// Initial location marker component\n_s3(RouteDisplay, \"jwnZAiYdlqJS9rbi5EfKY+zfDZE=\", false, function () {\n  return [useMap];\n});\n_c3 = RouteDisplay;\nfunction LocationMarker({\n  userLocation,\n  setUserLocation\n}) {\n  _s4();\n  const map = useMap();\n  useEffect(() => {\n    if (!userLocation) {\n      map.locate({\n        setView: true,\n        maxZoom: 16\n      });\n      map.on('locationfound', e => {\n        setUserLocation([e.latlng.lat, e.latlng.lng]);\n        map.flyTo(e.latlng, 16);\n      });\n      map.on('locationerror', e => {\n        console.log(\"Location error:\", e.message);\n        // Default to a location if geolocation fails\n        setUserLocation([22.3149, 87.3104]); // IIT Kharagpur coordinates\n        map.flyTo([22.3149, 87.3104], 14);\n      });\n    }\n  }, [map, userLocation, setUserLocation]);\n  return userLocation ? /*#__PURE__*/_jsxDEV(Marker, {\n    position: userLocation,\n    icon: userIcon,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Your current location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 9\n  }, this) : null;\n}\n\n// MapController component to adjust map view\n_s4(LocationMarker, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c4 = LocationMarker;\nconst MapController = ({\n  busStops,\n  center,\n  zoom\n}) => {\n  _s5();\n  const map = useMap();\n  useEffect(() => {\n    if (center && zoom) {\n      map.setView(center, zoom);\n    } else if (busStops && busStops.length > 0) {\n      // Create bounds to fit all bus stops\n      const bounds = L.latLngBounds([]);\n      busStops.forEach(stop => {\n        if (stop.latitude && stop.longitude) {\n          bounds.extend([parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n        }\n      });\n\n      // Only fit bounds if we have valid coordinates\n      if (bounds.isValid()) {\n        map.fitBounds(bounds, {\n          padding: [50, 50]\n        });\n      }\n    }\n  }, [busStops, map, center, zoom]);\n  return null;\n};\n\n// Component for bus stop markers\n_s5(MapController, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", false, function () {\n  return [useMap];\n});\n_c5 = MapController;\nconst BusStopMarkers = ({\n  busStops,\n  nearbyStops\n}) => {\n  // Function to check if a stop is in the nearby stops array\n  const isNearbyStop = stopId => {\n    return nearbyStops && nearbyStops.some(stop => stop.id === stopId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: busStops.map((stop, index) => {\n      // Skip invalid coordinates\n      if (!stop.latitude || !stop.longitude) {\n        return null;\n      }\n      const position = [parseFloat(stop.latitude), parseFloat(stop.longitude)];\n\n      // Validate coordinates\n      if (isNaN(position[0]) || isNaN(position[1])) {\n        return null;\n      }\n      const isNearby = isNearbyStop(stop.id);\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: position,\n        icon: isNearby ? nearbyStopIcon : busStopIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bus-stop-popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: stop.name || `Bus Stop ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"ID:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 36\n              }, this), \" \", stop.id || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Coordinates:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 36\n              }, this), \" \", stop.latitude, \", \", stop.longitude]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 33\n            }, this), isNearby && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"nearby-note\",\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Nearby your location\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 25\n        }, this)\n      }, `bus-stop-${stop.id || index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false);\n};\n_c6 = BusStopMarkers;\nconst BusStopsView = ({\n  userLocation,\n  setUserLocation\n}) => {\n  _s6();\n  const [currentLocation, setCurrentLocation] = useState('Your current location');\n  const [destinationLocation, setDestinationLocation] = useState('');\n  const [searchStart, setSearchStart] = useState(null);\n  const [searchDestination, setSearchDestination] = useState(null);\n  const [customStartLocation, setCustomStartLocation] = useState(false);\n  const [mapCenter, setMapCenter] = useState([22.3149, 87.3104]); // Default to IIT KGP\n  const [mapZoom, setMapZoom] = useState(14);\n  const [busStops, setBusStops] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [nearbyStops, setNearbyStops] = useState([]);\n  const [startLocationStops, setStartLocationStops] = useState([]);\n  const [destinationStops, setDestinationStops] = useState([]);\n  const [availableRoutes, setAvailableRoutes] = useState([]);\n  const [selectedRoute, setSelectedRoute] = useState(null);\n  const [isRouteFinding, setIsRouteFinding] = useState(false);\n  const [showRangeCircle, setShowRangeCircle] = useState(false);\n  const [buses, setBuses] = useState([]);\n  const [activeBus, setActiveBus] = useState(null);\n  const [searchType, setSearchType] = useState(''); // 'start' or 'destination'\n  const [routeKey, setRouteKey] = useState(0); // Add this state to force route refreshes\n\n  const NEARBY_DISTANCE = 250; // 250 meters radius for nearby stops\n\n  // Update map center when userLocation changes\n  useEffect(() => {\n    if (userLocation) {\n      setMapCenter(userLocation);\n    }\n  }, [userLocation]);\n\n  // Fetch bus stops\n  useEffect(() => {\n    const fetchBusStops = async () => {\n      try {\n        setIsLoading(true);\n        const response = await api.get('/bus_stops/getAllBusStops');\n        if (response.data && response.data.data) {\n          if (Array.isArray(response.data.data)) {\n            setBusStops(response.data.data);\n          } else {\n            throw new Error('Bus stops data is not in expected array format');\n          }\n        } else {\n          throw new Error('Invalid API response format');\n        }\n      } catch (err) {\n        console.error('Error fetching bus stops:', err);\n        setError(`Failed to load bus stops: ${err.message}`);\n        setBusStops([]);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchBusStops();\n    fetchBuses();\n  }, []);\n\n  // Fetch buses (function remains the same)\n  const fetchBuses = async () => {\n    // ...existing code...\n  };\n\n  // Calculate distance between points (function remains the same)\n  const calculateDistance = (lat1, lon1, lat2, lon2) => {\n    // ...existing code...\n  };\n\n  // Find nearby stops when user location changes\n  useEffect(() => {\n    if (!userLocation || busStops.length === 0) return;\n    const findNearbyStops = () => {\n      const nearby = busStops.filter(stop => {\n        if (!stop.latitude || !stop.longitude) return false;\n        const distance = calculateDistance(userLocation[0], userLocation[1], parseFloat(stop.latitude), parseFloat(stop.longitude));\n        return distance <= NEARBY_DISTANCE;\n      });\n      setNearbyStops(nearby);\n    };\n    findNearbyStops();\n  }, [userLocation, busStops]);\n\n  // Handle search result - updated to maintain the search type context\n  const handleSearchResult = (position, name) => {\n    if (searchType === 'start') {\n      setSearchStart(position);\n      setCurrentLocation(name);\n      setCustomStartLocation(true);\n\n      // Find stops near the search location\n      const nearby = busStops.filter(stop => {\n        if (!stop.latitude || !stop.longitude) return false;\n        const distance = calculateDistance(position[0], position[1], parseFloat(stop.latitude), parseFloat(stop.longitude));\n        return distance <= NEARBY_DISTANCE;\n      });\n      setStartLocationStops(nearby);\n      setNearbyStops(nearby); // Update nearby stops to be from custom location\n    } else if (searchType === 'destination') {\n      setSearchDestination(position);\n      setDestinationLocation(name);\n\n      // Find stops near the destination\n      const nearby = busStops.filter(stop => {\n        if (!stop.latitude || !stop.longitude) return false;\n        const distance = calculateDistance(position[0], position[1], parseFloat(stop.latitude), parseFloat(stop.longitude));\n        return distance <= NEARBY_DISTANCE;\n      });\n      setDestinationStops(nearby);\n    }\n    setShowRangeCircle(true);\n\n    // If both locations are set, fit map to show both\n    if ((searchStart || userLocation) && searchDestination) {\n      var _document$querySelect;\n      const bounds = L.latLngBounds([customStartLocation ? searchStart : userLocation, searchDestination]);\n      const mapInstance = (_document$querySelect = document.querySelector('.leaflet-container')) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect._leaflet_map;\n      if (mapInstance) {\n        mapInstance.fitBounds(bounds, {\n          padding: [50, 50]\n        });\n      }\n    }\n\n    // Hide range circles after 5 seconds\n    setTimeout(() => {\n      setShowRangeCircle(false);\n    }, 5000);\n\n    // Clear search type\n    setSearchType('');\n  };\n\n  // Toggle to use current location\n  const handleUseCurrentLocation = () => {\n    setCustomStartLocation(false);\n    setCurrentLocation('Your current location');\n    setSearchStart(null);\n\n    // Recalculate nearby stops based on user's actual location\n    if (userLocation && busStops.length > 0) {\n      const nearby = busStops.filter(stop => {\n        if (!stop.latitude || !stop.longitude) return false;\n        const distance = calculateDistance(userLocation[0], userLocation[1], parseFloat(stop.latitude), parseFloat(stop.longitude));\n        return distance <= NEARBY_DISTANCE;\n      });\n      setNearbyStops(nearby);\n    }\n  };\n\n  // Set search type and prepare UI\n  const setSearchTypeAndNotify = type => {\n    var _document$querySelect2;\n    setSearchType(type);\n    const mapInstance = (_document$querySelect2 = document.querySelector('.leaflet-container')) === null || _document$querySelect2 === void 0 ? void 0 : _document$querySelect2._leaflet_map;\n    if (mapInstance) {\n      // Fly to current position to help user orient\n      if (type === 'start' && userLocation) {\n        mapInstance.flyTo(userLocation, 15);\n      } else if (type === 'destination' && searchStart) {\n        mapInstance.flyTo(searchStart, 15);\n      } else if (type === 'destination' && userLocation) {\n        mapInstance.flyTo(userLocation, 15);\n      }\n    }\n  };\n\n  // Function to find routes between stops\n  const findRoutes = async () => {\n    // ...existing code...\n  };\n\n  // Handle search for starting point\n  const handleStartSearch = (position, displayName) => {\n    setSearchStart(position);\n    setCurrentLocation(displayName);\n    setRouteKey(prevKey => prevKey + 1); // Force route refresh\n  };\n\n  // Handle search for destination\n  const handleDestSearch = (position, displayName) => {\n    setSearchDestination(position);\n    setDestinationLocation(displayName);\n    setRouteKey(prevKey => prevKey + 1); // Force route refresh\n  };\n\n  // Handle fetching the route when both points are set\n  useEffect(() => {\n    if (searchStart && searchDestination) {\n      // Calculate routes between them\n      // This is just to show the route calculation is happening\n      setIsRouteFinding(true);\n\n      // Simulate route calculation delay\n      const timer = setTimeout(() => {\n        setIsRouteFinding(false);\n        // No need to generate steps or update route details here\n        // as that's now handled by the RouteDisplay component\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, [searchStart, searchDestination, routeKey]); // Add routeKey as a dependency\n\n  // Find nearby bus stops\n  const handleFindNearbyStops = () => {\n    // ...existing code...\n\n    // Clear any existing routes when finding new stops\n    setRouteKey(prevKey => prevKey + 1);\n\n    // ...existing code...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bus-stops-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-input-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: currentLocation,\n              onChange: e => setCurrentLocation(e.target.value),\n              placeholder: \"Your starting point\",\n              disabled: !customStartLocation // Only editable if custom location\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 29\n            }, this), !customStartLocation ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"current-location-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-location-arrow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 635,\n                columnNumber: 37\n              }, this), \" Current\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"use-current-btn\",\n              onClick: handleUseCurrentLocation,\n              title: \"Use your current location\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times-circle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"custom-location-btn\",\n            onClick: () => setSearchTypeAndNotify('start'),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search-location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 650,\n              columnNumber: 29\n            }, this), \" Search for starting point\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: destinationLocation,\n            onChange: e => setDestinationLocation(e.target.value),\n            placeholder: \"Where do you want to go?\",\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"custom-location-btn\",\n            onClick: () => setSearchTypeAndNotify('destination'),\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-search-location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 29\n            }, this), \" Search for destination\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-btn\",\n          onClick: findRoutes,\n          disabled: isRouteFinding || !userLocation && !searchStart || !searchDestination,\n          children: isRouteFinding ? 'Finding Routes...' : 'Find Routes'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this), searchType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-instruction\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-info-circle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 29\n          }, this), \"Please select your \", searchType === 'start' ? 'starting location' : 'destination', \" on the map\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: [isRouteFinding && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Finding the best routes for you...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: mapCenter || [22.3149, 87.3104],\n        zoom: mapZoom,\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LocationControl, {\n          setUserLocation: setUserLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 21\n        }, this), searchType && /*#__PURE__*/_jsxDEV(SearchControl, {\n          onSearchResult: handleSearchResult,\n          searchType: searchType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 25\n        }, this), userLocation && !customStartLocation && /*#__PURE__*/_jsxDEV(Marker, {\n          position: userLocation,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your current location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 25\n        }, this), customStartLocation && searchStart && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchStart,\n          icon: userIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Your starting point\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 739,\n              columnNumber: 69\n            }, this), currentLocation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 25\n        }, this), searchDestination && /*#__PURE__*/_jsxDEV(Marker, {\n          position: searchDestination,\n          icon: destinationIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Destination\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 61\n            }, this), destinationLocation]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(MapController, {\n          busStops: busStops,\n          center: mapCenter,\n          zoom: mapZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BusStopMarkers, {\n          busStops: busStops,\n          nearbyStops: [...nearbyStops, ...destinationStops]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this), showRangeCircle && searchDestination && /*#__PURE__*/_jsxDEV(Circle, {\n          center: searchDestination,\n          radius: NEARBY_DISTANCE,\n          pathOptions: {\n            color: 'blue',\n            fillColor: 'blue',\n            fillOpacity: 0.1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 25\n        }, this), showRangeCircle && (customStartLocation ? searchStart : userLocation) && /*#__PURE__*/_jsxDEV(Circle, {\n          center: customStartLocation ? searchStart : userLocation,\n          radius: NEARBY_DISTANCE,\n          pathOptions: {\n            color: 'green',\n            fillColor: 'green',\n            fillOpacity: 0.1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 25\n        }, this), searchStart && searchDestination && /*#__PURE__*/_jsxDEV(RouteDisplay, {\n          startPoint: searchStart,\n          endPoint: searchDestination,\n          color: \"#0066ff\",\n          weight: 6,\n          routeKey: routeKey\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 620,\n    columnNumber: 9\n  }, this);\n};\n_s6(BusStopsView, \"dQ9ZgVtadsQRk+Lz5PMK194RUqo=\");\n_c7 = BusStopsView;\nexport default BusStopsView;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"LocationControl\");\n$RefreshReg$(_c2, \"SearchControl\");\n$RefreshReg$(_c3, \"RouteDisplay\");\n$RefreshReg$(_c4, \"LocationMarker\");\n$RefreshReg$(_c5, \"MapController\");\n$RefreshReg$(_c6, \"BusStopMarkers\");\n$RefreshReg$(_c7, \"BusStopsView\");","map":{"version":3,"names":["React","useState","useEffect","useRef","MapContainer","TileLayer","Marker","Popup","useMap","Polyline","Circle","L","api","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","busStopIcon","iconSize","iconAnchor","popupAnchor","userIcon","destinationIcon","nearbyStopIcon","busIcon","LocationControl","setUserLocation","_s","map","handleLocationRequest","locate","setView","maxZoom","on","e","latlng","lat","lng","flyTo","console","error","message","alert","off","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","SearchControl","onSearchResult","searchType","_s2","searchValue","setSearchValue","searchResults","setSearchResults","isSearching","setIsSearching","showResults","setShowResults","typeLabel","handleSearch","trim","response","fetch","encodeURIComponent","ok","Error","data","json","priorityTypes","priorityResults","filter","item","type","includes","class","length","slice","handleResultClick","result","position","parseFloat","lon","displayName","display_name","address","parts","building","push","amenity","road","suburb","city","town","join","handleKeyPress","key","placeholder","value","onChange","target","onKeyPress","autoFocus","disabled","index","displayParts","split","mainName","_c2","RouteDisplay","startPoint","endPoint","color","weight","routeKey","_s3","routeCoordinates","setRouteCoordinates","fetchRoute","get","code","routes","coordinates","geometry","coord","positions","_c3","LocationMarker","userLocation","_s4","log","icon","_c4","MapController","busStops","center","zoom","_s5","bounds","latLngBounds","forEach","stop","latitude","longitude","extend","isValid","fitBounds","padding","_c5","BusStopMarkers","nearbyStops","isNearbyStop","stopId","some","id","isNaN","isNearby","name","_c6","BusStopsView","_s6","currentLocation","setCurrentLocation","destinationLocation","setDestinationLocation","searchStart","setSearchStart","searchDestination","setSearchDestination","customStartLocation","setCustomStartLocation","mapCenter","setMapCenter","mapZoom","setMapZoom","setBusStops","isLoading","setIsLoading","setError","setNearbyStops","startLocationStops","setStartLocationStops","destinationStops","setDestinationStops","availableRoutes","setAvailableRoutes","selectedRoute","setSelectedRoute","isRouteFinding","setIsRouteFinding","showRangeCircle","setShowRangeCircle","buses","setBuses","activeBus","setActiveBus","setSearchType","setRouteKey","NEARBY_DISTANCE","fetchBusStops","Array","isArray","err","fetchBuses","calculateDistance","lat1","lon1","lat2","lon2","findNearbyStops","nearby","distance","handleSearchResult","_document$querySelect","mapInstance","document","querySelector","_leaflet_map","setTimeout","handleUseCurrentLocation","setSearchTypeAndNotify","_document$querySelect2","findRoutes","handleStartSearch","prevKey","handleDestSearch","timer","clearTimeout","handleFindNearbyStops","readOnly","style","height","width","attribution","url","radius","pathOptions","fillColor","fillOpacity","_c7","$RefreshReg$"],"sources":["/home/lubesh/Desktop/DBMS/KGP_Bus/frontend/src/components/user_pages/BusStopsView.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, useMap, Polyline, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport api from '../../utils/api.js';\nimport '../../css/busStopsView.css';\nimport axios from 'axios';\n\n// Fix for default marker icons in Leaflet\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n    iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon-2x.png',\n    iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-icon.png',\n    shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/images/marker-shadow.png'\n});\n\n// Custom icons for different map elements\nconst busStopIcon = new L.Icon({\n    iconUrl: '/bus-stop.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n});\n\nconst userIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/1077/1077114.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n});\n\nconst destinationIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n});\n\nconst nearbyStopIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/3448/3448339.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 32],\n    popupAnchor: [0, -32]\n});\n\nconst busIcon = new L.Icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/30/30979.png',\n    iconSize: [32, 32],\n    iconAnchor: [16, 16],\n    popupAnchor: [0, -16]\n});\n\n// Location control component\nconst LocationControl = ({ setUserLocation }) => {\n    const map = useMap();\n\n    const handleLocationRequest = () => {\n        map.locate({ setView: true, maxZoom: 16 });\n    };\n\n    useEffect(() => {\n        map.on('locationfound', (e) => {\n            setUserLocation([e.latlng.lat, e.latlng.lng]);\n            map.flyTo(e.latlng, 16);\n        });\n\n        map.on('locationerror', (e) => {\n            console.error(\"Location error:\", e.message);\n            alert(\"Unable to find your location. Please check your device settings.\");\n        });\n\n        return () => {\n            map.off('locationfound');\n            map.off('locationerror');\n        };\n    }, [map, setUserLocation]);\n\n    return (\n        <div className=\"location-control\">\n            <button onClick={handleLocationRequest} title=\"Show my location\">\n                <i className=\"fas fa-location-arrow\"></i>\n            </button>\n        </div>\n    );\n};\n\n// Modify the SearchControl component to handle building searches better\n\n// Search control component\nconst SearchControl = ({ onSearchResult, searchType }) => {\n    const [searchValue, setSearchValue] = useState('');\n    const [searchResults, setSearchResults] = useState([]);\n    const [isSearching, setIsSearching] = useState(false);\n    const [showResults, setShowResults] = useState(false);\n    const map = useMap();\n\n    // Get the type label for UI feedback\n    const typeLabel = searchType === 'start' ? 'starting point' : 'destination';\n\n    const handleSearch = async () => {\n        if (!searchValue.trim()) return;\n\n        setIsSearching(true);\n        setShowResults(false);\n\n        try {\n            // First try to search with more specific parameters for buildings\n            // This uses the Nominatim search with additional parameters\n            const response = await fetch(\n                `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(searchValue)}&addressdetails=1&limit=10&countrycodes=in`\n            );\n\n            if (!response.ok) {\n                throw new Error('Search failed');\n            }\n\n            let data = await response.json();\n\n            // Filter results to prioritize buildings, amenities, and educational institutions\n            const priorityTypes = ['building', 'amenity', 'office', 'school', 'university', 'college'];\n\n            // Separate priority results\n            const priorityResults = data.filter(item => {\n                if (item.type && priorityTypes.includes(item.type)) return true;\n                if (item.class && priorityTypes.includes(item.class)) return true;\n                return false;\n            });\n\n            // Combine results with priority items first\n            data = [...priorityResults, ...data.filter(item => !priorityResults.includes(item))];\n\n            if (data && data.length > 0) {\n                setSearchResults(data.slice(0, 8)); // Limit to 8 results\n                setShowResults(true);\n            } else {\n                alert(`No places found matching \"${searchValue}\". Try a different search term.`);\n            }\n        } catch (error) {\n            console.error('Error searching location:', error);\n            alert('Failed to search location. Please try again.');\n        } finally {\n            setIsSearching(false);\n        }\n    };\n\n    const handleResultClick = (result) => {\n        const position = [parseFloat(result.lat), parseFloat(result.lon)];\n        map.flyTo(position, 16);\n\n        // Format the display name to be more user-friendly\n        let displayName = result.display_name;\n\n        // If we have address details, create a more readable name\n        if (result.address) {\n            const address = result.address;\n            let parts = [];\n\n            // Try to build a name from most specific to general\n            if (address.building) parts.push(address.building);\n            if (address.amenity) parts.push(address.amenity);\n            if (address.road) parts.push(address.road);\n            if (address.suburb) parts.push(address.suburb);\n            if (address.city || address.town) parts.push(address.city || address.town);\n\n            // Use this custom format if we have enough parts\n            if (parts.length >= 2) {\n                displayName = parts.join(', ');\n            }\n        }\n\n        onSearchResult(position, displayName);\n        setShowResults(false);\n        setSearchValue(''); // Clear the search input\n    };\n\n    // Handle pressing Enter key\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    return (\n        <div className=\"search-control\">\n            <input\n                type=\"text\"\n                placeholder={`Search for your ${typeLabel}...`}\n                value={searchValue}\n                onChange={(e) => setSearchValue(e.target.value)}\n                onKeyPress={handleKeyPress}\n                autoFocus\n            />\n            <button onClick={handleSearch} disabled={isSearching}>\n                {isSearching ? '...' : 'Search'}\n            </button>\n\n            {showResults && searchResults.length > 0 && (\n                <div className=\"search-results\">\n                    {searchResults.map((result, index) => {\n                        // Create a more readable display format\n                        let displayParts = result.display_name.split(', ');\n                        let mainName = displayParts[0];\n                        let address = displayParts.slice(1).join(', ');\n\n                        return (\n                            <div\n                                key={index}\n                                className=\"search-result-item\"\n                                onClick={() => handleResultClick(result)}\n                            >\n                                <div className=\"result-name\">{mainName}</div>\n                                <div className=\"result-address\">{address}</div>\n                            </div>\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\n// OSRM routing component\nconst RouteDisplay = ({ startPoint, endPoint, color = '#3388ff', weight = 4, routeKey }) => {\n    const [routeCoordinates, setRouteCoordinates] = useState([]);\n    const map = useMap();\n\n    useEffect(() => {\n        // Clear previous route when routeKey changes\n        setRouteCoordinates([]);\n        \n        if (!startPoint || !endPoint) return;\n\n        const fetchRoute = async () => {\n            try {\n                const response = await axios.get(\n                    `https://router.project-osrm.org/route/v1/driving/${startPoint[1]},${startPoint[0]};${endPoint[1]},${endPoint[0]}?overview=full&geometries=geojson`\n                );\n\n                if (response.data.code === 'Ok' && response.data.routes.length > 0) {\n                    const coordinates = response.data.routes[0].geometry.coordinates.map(\n                        coord => [coord[1], coord[0]] // OSRM returns [lng, lat], we need [lat, lng]\n                    );\n                    setRouteCoordinates(coordinates);\n                } else {\n                    console.error('No route found or invalid response from OSRM');\n                    setRouteCoordinates([]);\n                }\n            } catch (error) {\n                console.error('Error fetching route:', error);\n                setRouteCoordinates([]);\n            }\n        };\n\n        fetchRoute();\n    }, [startPoint, endPoint, map, routeKey]); // Add routeKey as a dependency\n\n    return routeCoordinates.length > 0 ? (\n        <Polyline positions={routeCoordinates} color={color} weight={weight} />\n    ) : null;\n};\n\n// Initial location marker component\nfunction LocationMarker({ userLocation, setUserLocation }) {\n    const map = useMap();\n\n    useEffect(() => {\n        if (!userLocation) {\n            map.locate({ setView: true, maxZoom: 16 });\n\n            map.on('locationfound', (e) => {\n                setUserLocation([e.latlng.lat, e.latlng.lng]);\n                map.flyTo(e.latlng, 16);\n            });\n\n            map.on('locationerror', (e) => {\n                console.log(\"Location error:\", e.message);\n                // Default to a location if geolocation fails\n                setUserLocation([22.3149, 87.3104]); // IIT Kharagpur coordinates\n                map.flyTo([22.3149, 87.3104], 14);\n            });\n        }\n    }, [map, userLocation, setUserLocation]);\n\n    return userLocation ? (\n        <Marker position={userLocation} icon={userIcon}>\n            <Popup>\n                <strong>Your current location</strong>\n            </Popup>\n        </Marker>\n    ) : null;\n}\n\n// MapController component to adjust map view\nconst MapController = ({ busStops, center, zoom }) => {\n    const map = useMap();\n\n    useEffect(() => {\n        if (center && zoom) {\n            map.setView(center, zoom);\n        } else if (busStops && busStops.length > 0) {\n            // Create bounds to fit all bus stops\n            const bounds = L.latLngBounds([]);\n            busStops.forEach(stop => {\n                if (stop.latitude && stop.longitude) {\n                    bounds.extend([parseFloat(stop.latitude), parseFloat(stop.longitude)]);\n                }\n            });\n\n            // Only fit bounds if we have valid coordinates\n            if (bounds.isValid()) {\n                map.fitBounds(bounds, { padding: [50, 50] });\n            }\n        }\n    }, [busStops, map, center, zoom]);\n\n    return null;\n};\n\n// Component for bus stop markers\nconst BusStopMarkers = ({ busStops, nearbyStops }) => {\n    // Function to check if a stop is in the nearby stops array\n    const isNearbyStop = (stopId) => {\n        return nearbyStops && nearbyStops.some(stop => stop.id === stopId);\n    };\n\n    return (\n        <>\n            {busStops.map((stop, index) => {\n                // Skip invalid coordinates\n                if (!stop.latitude || !stop.longitude) {\n                    return null;\n                }\n\n                const position = [\n                    parseFloat(stop.latitude),\n                    parseFloat(stop.longitude)\n                ];\n\n                // Validate coordinates\n                if (isNaN(position[0]) || isNaN(position[1])) {\n                    return null;\n                }\n\n                const isNearby = isNearbyStop(stop.id);\n\n                return (\n                    <Marker\n                        key={`bus-stop-${stop.id || index}`}\n                        position={position}\n                        icon={isNearby ? nearbyStopIcon : busStopIcon}\n                    >\n                        <Popup>\n                            <div className=\"bus-stop-popup\">\n                                <h3>{stop.name || `Bus Stop ${index + 1}`}</h3>\n                                <p><strong>ID:</strong> {stop.id || 'Unknown'}</p>\n                                <p><strong>Coordinates:</strong> {stop.latitude}, {stop.longitude}</p>\n                                {isNearby && (\n                                    <p className=\"nearby-note\"><strong>Nearby your location</strong></p>\n                                )}\n                            </div>\n                        </Popup>\n                    </Marker>\n                );\n            })}\n        </>\n    );\n};\n\nconst BusStopsView = ({ userLocation, setUserLocation }) => {\n    const [currentLocation, setCurrentLocation] = useState('Your current location');\n    const [destinationLocation, setDestinationLocation] = useState('');\n    const [searchStart, setSearchStart] = useState(null);\n    const [searchDestination, setSearchDestination] = useState(null);\n    const [customStartLocation, setCustomStartLocation] = useState(false);\n    const [mapCenter, setMapCenter] = useState([22.3149, 87.3104]); // Default to IIT KGP\n    const [mapZoom, setMapZoom] = useState(14);\n    const [busStops, setBusStops] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [nearbyStops, setNearbyStops] = useState([]);\n    const [startLocationStops, setStartLocationStops] = useState([]);\n    const [destinationStops, setDestinationStops] = useState([]);\n    const [availableRoutes, setAvailableRoutes] = useState([]);\n    const [selectedRoute, setSelectedRoute] = useState(null);\n    const [isRouteFinding, setIsRouteFinding] = useState(false);\n    const [showRangeCircle, setShowRangeCircle] = useState(false);\n    const [buses, setBuses] = useState([]);\n    const [activeBus, setActiveBus] = useState(null);\n    const [searchType, setSearchType] = useState(''); // 'start' or 'destination'\n    const [routeKey, setRouteKey] = useState(0); // Add this state to force route refreshes\n\n    const NEARBY_DISTANCE = 250; // 250 meters radius for nearby stops\n\n    // Update map center when userLocation changes\n    useEffect(() => {\n        if (userLocation) {\n            setMapCenter(userLocation);\n        }\n    }, [userLocation]);\n\n    // Fetch bus stops\n    useEffect(() => {\n        const fetchBusStops = async () => {\n            try {\n                setIsLoading(true);\n                const response = await api.get('/bus_stops/getAllBusStops');\n\n                if (response.data && response.data.data) {\n                    if (Array.isArray(response.data.data)) {\n                        setBusStops(response.data.data);\n                    } else {\n                        throw new Error('Bus stops data is not in expected array format');\n                    }\n                } else {\n                    throw new Error('Invalid API response format');\n                }\n            } catch (err) {\n                console.error('Error fetching bus stops:', err);\n                setError(`Failed to load bus stops: ${err.message}`);\n                setBusStops([]);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchBusStops();\n        fetchBuses();\n    }, []);\n\n    // Fetch buses (function remains the same)\n    const fetchBuses = async () => {\n        // ...existing code...\n    };\n\n    // Calculate distance between points (function remains the same)\n    const calculateDistance = (lat1, lon1, lat2, lon2) => {\n        // ...existing code...\n    };\n\n    // Find nearby stops when user location changes\n    useEffect(() => {\n        if (!userLocation || busStops.length === 0) return;\n\n        const findNearbyStops = () => {\n            const nearby = busStops.filter(stop => {\n                if (!stop.latitude || !stop.longitude) return false;\n\n                const distance = calculateDistance(\n                    userLocation[0],\n                    userLocation[1],\n                    parseFloat(stop.latitude),\n                    parseFloat(stop.longitude)\n                );\n\n                return distance <= NEARBY_DISTANCE;\n            });\n\n            setNearbyStops(nearby);\n        };\n\n        findNearbyStops();\n    }, [userLocation, busStops]);\n\n    // Handle search result - updated to maintain the search type context\n    const handleSearchResult = (position, name) => {\n        if (searchType === 'start') {\n            setSearchStart(position);\n            setCurrentLocation(name);\n            setCustomStartLocation(true);\n\n            // Find stops near the search location\n            const nearby = busStops.filter(stop => {\n                if (!stop.latitude || !stop.longitude) return false;\n\n                const distance = calculateDistance(\n                    position[0],\n                    position[1],\n                    parseFloat(stop.latitude),\n                    parseFloat(stop.longitude)\n                );\n\n                return distance <= NEARBY_DISTANCE;\n            });\n\n            setStartLocationStops(nearby);\n            setNearbyStops(nearby); // Update nearby stops to be from custom location\n        } else if (searchType === 'destination') {\n            setSearchDestination(position);\n            setDestinationLocation(name);\n\n            // Find stops near the destination\n            const nearby = busStops.filter(stop => {\n                if (!stop.latitude || !stop.longitude) return false;\n\n                const distance = calculateDistance(\n                    position[0],\n                    position[1],\n                    parseFloat(stop.latitude),\n                    parseFloat(stop.longitude)\n                );\n\n                return distance <= NEARBY_DISTANCE;\n            });\n\n            setDestinationStops(nearby);\n        }\n\n        setShowRangeCircle(true);\n\n        // If both locations are set, fit map to show both\n        if ((searchStart || userLocation) && searchDestination) {\n            const bounds = L.latLngBounds([\n                customStartLocation ? searchStart : userLocation,\n                searchDestination\n            ]);\n            const mapInstance = document.querySelector('.leaflet-container')?._leaflet_map;\n            if (mapInstance) {\n                mapInstance.fitBounds(bounds, { padding: [50, 50] });\n            }\n        }\n\n        // Hide range circles after 5 seconds\n        setTimeout(() => {\n            setShowRangeCircle(false);\n        }, 5000);\n\n        // Clear search type\n        setSearchType('');\n    };\n\n    // Toggle to use current location\n    const handleUseCurrentLocation = () => {\n        setCustomStartLocation(false);\n        setCurrentLocation('Your current location');\n        setSearchStart(null);\n\n        // Recalculate nearby stops based on user's actual location\n        if (userLocation && busStops.length > 0) {\n            const nearby = busStops.filter(stop => {\n                if (!stop.latitude || !stop.longitude) return false;\n\n                const distance = calculateDistance(\n                    userLocation[0],\n                    userLocation[1],\n                    parseFloat(stop.latitude),\n                    parseFloat(stop.longitude)\n                );\n\n                return distance <= NEARBY_DISTANCE;\n            });\n\n            setNearbyStops(nearby);\n        }\n    };\n\n    // Set search type and prepare UI\n    const setSearchTypeAndNotify = (type) => {\n        setSearchType(type);\n        const mapInstance = document.querySelector('.leaflet-container')?._leaflet_map;\n        if (mapInstance) {\n            // Fly to current position to help user orient\n            if (type === 'start' && userLocation) {\n                mapInstance.flyTo(userLocation, 15);\n            } else if (type === 'destination' && searchStart) {\n                mapInstance.flyTo(searchStart, 15);\n            } else if (type === 'destination' && userLocation) {\n                mapInstance.flyTo(userLocation, 15);\n            }\n        }\n    };\n\n    // Function to find routes between stops\n    const findRoutes = async () => {\n        // ...existing code...\n    };\n\n    // Handle search for starting point\n    const handleStartSearch = (position, displayName) => {\n        setSearchStart(position);\n        setCurrentLocation(displayName);\n        setRouteKey(prevKey => prevKey + 1); // Force route refresh\n    };\n\n    // Handle search for destination\n    const handleDestSearch = (position, displayName) => {\n        setSearchDestination(position);\n        setDestinationLocation(displayName);\n        setRouteKey(prevKey => prevKey + 1); // Force route refresh\n    };\n\n    // Handle fetching the route when both points are set\n    useEffect(() => {\n        if (searchStart && searchDestination) {\n            // Calculate routes between them\n            // This is just to show the route calculation is happening\n            setIsRouteFinding(true);\n\n            // Simulate route calculation delay\n            const timer = setTimeout(() => {\n                setIsRouteFinding(false);\n                // No need to generate steps or update route details here\n                // as that's now handled by the RouteDisplay component\n            }, 1000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [searchStart, searchDestination, routeKey]); // Add routeKey as a dependency\n\n    // Find nearby bus stops\n    const handleFindNearbyStops = () => {\n        // ...existing code...\n\n        // Clear any existing routes when finding new stops\n        setRouteKey(prevKey => prevKey + 1);\n\n        // ...existing code...\n    };\n\n    return (\n        <div className=\"bus-stops-view\">\n            <div className=\"location-panel\">\n                <div className=\"location-form\">\n                    <div className=\"form-group\">\n                        <label>From</label>\n                        <div className=\"location-input-group\">\n                            <input\n                                type=\"text\"\n                                value={currentLocation}\n                                onChange={(e) => setCurrentLocation(e.target.value)}\n                                placeholder=\"Your starting point\"\n                                disabled={!customStartLocation} // Only editable if custom location\n                            />\n                            {!customStartLocation ? (\n                                <span className=\"current-location-label\">\n                                    <i className=\"fas fa-location-arrow\"></i> Current\n                                </span>\n                            ) : (\n                                <button\n                                    className=\"use-current-btn\"\n                                    onClick={handleUseCurrentLocation}\n                                    title=\"Use your current location\">\n                                    <i className=\"fas fa-times-circle\"></i>\n                                </button>\n                            )}\n                        </div>\n                        <button\n                            className=\"custom-location-btn\"\n                            onClick={() => setSearchTypeAndNotify('start')}\n                        >\n                            <i className=\"fas fa-search-location\"></i> Search for starting point\n                        </button>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>To</label>\n                        <input\n                            type=\"text\"\n                            value={destinationLocation}\n                            onChange={(e) => setDestinationLocation(e.target.value)}\n                            placeholder=\"Where do you want to go?\"\n                            readOnly\n                        />\n                        <button\n                            className=\"custom-location-btn\"\n                            onClick={() => setSearchTypeAndNotify('destination')}\n                        >\n                            <i className=\"fas fa-search-location\"></i> Search for destination\n                        </button>\n                    </div>\n\n                    <button\n                        className=\"search-btn\"\n                        onClick={findRoutes}\n                        disabled={isRouteFinding ||\n                            (!userLocation && !searchStart) ||\n                            !searchDestination}\n                    >\n                        {isRouteFinding ? 'Finding Routes...' : 'Find Routes'}\n                    </button>\n                </div>\n\n                {/* Instruction text when search type is set */}\n                {searchType && (\n                    <div className=\"search-instruction\">\n                        <p>\n                            <i className=\"fas fa-info-circle\"></i>\n                            Please select your {searchType === 'start' ? 'starting location' : 'destination'} on the map\n                        </p>\n                    </div>\n                )}\n\n                {/* Error message */}\n                {error && <div className=\"error-message\">{error}</div>}\n\n            </div>\n\n            <div className=\"map-container\">\n                {isRouteFinding && (\n                    <div className=\"map-loading-overlay\">\n                        <div className=\"spinner\"></div>\n                        <p>Finding the best routes for you...</p>\n                    </div>\n                )}\n\n                <MapContainer\n                    center={mapCenter || [22.3149, 87.3104]}\n                    zoom={mapZoom}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                >\n                    <TileLayer\n                        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    />\n\n                    {/* Make sure location control is always included */}\n                    <LocationControl setUserLocation={setUserLocation} />\n\n                    {/* Only show search control when actively searching */}\n                    {searchType && (\n                        <SearchControl\n                            onSearchResult={handleSearchResult}\n                            searchType={searchType}\n                        />\n                    )}\n\n                    {/* User's location marker - only show if not using custom start */}\n                    {userLocation && !customStartLocation && (\n                        <Marker position={userLocation} icon={userIcon}>\n                            <Popup>\n                                <strong>Your current location</strong>\n                            </Popup>\n                        </Marker>\n                    )}\n\n                    {/* Custom start location marker if set */}\n                    {customStartLocation && searchStart && (\n                        <Marker position={searchStart} icon={userIcon}>\n                            <Popup>\n                                <strong>Your starting point</strong><br />\n                                {currentLocation}\n                            </Popup>\n                        </Marker>\n                    )}\n\n                    {/* Destination marker if set */}\n                    {searchDestination && (\n                        <Marker position={searchDestination} icon={destinationIcon}>\n                            <Popup>\n                                <strong>Destination</strong><br />\n                                {destinationLocation}\n                            </Popup>\n                        </Marker>\n                    )}\n\n                    {/* Map view controller to adjust view based on locations */}\n                    <MapController busStops={busStops} center={mapCenter} zoom={mapZoom} />\n\n                    {/* Bus stops markers */}\n                    <BusStopMarkers\n                        busStops={busStops}\n                        nearbyStops={[...nearbyStops, ...destinationStops]}\n                    />\n\n                    {/* Show range circles when searching */}\n                    {showRangeCircle && searchDestination && (\n                        <Circle\n                            center={searchDestination}\n                            radius={NEARBY_DISTANCE}\n                            pathOptions={{ color: 'blue', fillColor: 'blue', fillOpacity: 0.1 }}\n                        />\n                    )}\n\n                    {/* Show range circle around user or custom start location */}\n                    {showRangeCircle && (customStartLocation ? searchStart : userLocation) && (\n                        <Circle\n                            center={customStartLocation ? searchStart : userLocation}\n                            radius={NEARBY_DISTANCE}\n                            pathOptions={{ color: 'green', fillColor: 'green', fillOpacity: 0.1 }}\n                        />\n                    )}\n\n                    {/* Add route display with key */}\n                    {searchStart && searchDestination && (\n                        <RouteDisplay \n                            startPoint={searchStart} \n                            endPoint={searchDestination} \n                            color=\"#0066ff\" \n                            weight={6}\n                            routeKey={routeKey}\n                        />\n                    )}\n\n                </MapContainer>\n\n            </div>\n        </div>\n    );\n};\n\nexport default BusStopsView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}